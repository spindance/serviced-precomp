{"version":3,"sources":["app.js","BackupRestore/BackupRestoreController.js","DeployWiz/DeployWizard.js","GraphPanel/graphPanelDirective.js","Health/healthIconDirective.js","Health/healthStatusDirective.js","Health/serviceHealth.js","Hosts/HostDetailsController.js","Hosts/HostsController.js","Hosts/hostsFactory.js","Instances/instancesFactory.js","HostsMap/HostsMapController.js","Language/LanguageController.js","Login/LoginController.js","Logs/LogController.js","Nav/NavbarController.js","Pools/PoolDetailsController.js","Pools/PoolsController.js","Pools/poolsFactory.js","Services/AppsController.js","Services/ServiceDetailsController.js","Services/servicesFactory.js","ServicesMap/ServicesMapController.js","common/CCUIState.js","common/authService.js","common/baseFactory.js","common/jellyTable.js","common/miscDirectives.js","common/miscUtils.js","common/modalService.js","common/resourcesFactory.js","common/servicedConfigService.js","common/uiDateTimePicker.js","common/zenNotify.js"],"names":[],"mappings":"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","file":"controlplane.js","sourcesContent":["/* jshint unused: false */\n\n// Copyright 2014 The Serviced Authors.\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// set this guy here to true to get waaaay\n// more log messages. exciting!\nvar DEBUG = false;\n\n/*******************************************************************************\n * Main module & controllers\n ******************************************************************************/\nvar controlplane = angular.module('controlplane', [\n    'ngRoute', 'ngCookies','ngDragDrop','pascalprecht.translate',\n    'angularMoment', 'zenNotify', 'serviceHealth', 'ui.datetimepicker',\n    'modalService', 'angular-data.DSCacheFactory', 'ui.codemirror',\n    'sticky', 'graphPanel', 'servicesFactory', 'healthIcon', 'healthStatus',\n    'authService', 'miscUtils', 'hostsFactory', 'poolsFactory', 'instancesFactory', 'baseFactory',\n    'ngTable', 'jellyTable', 'ngLocationUpdate', 'CCUIState', 'servicedConfig'\n]);\n\ncontrolplane.\n    config(['$routeProvider', function($routeProvider) {\n        $routeProvider.\n            when('/login', {\n                templateUrl: '/static/partials/login.html',\n                controller: \"LoginController\"}).\n            when('/logs', {\n                templateUrl: '/static/partials/logs.html',\n                controller: \"LogController\"}).\n            when('/services/:serviceId', {\n                templateUrl: '/static/partials/view-subservices.html',\n                controller: \"ServiceDetailsController\"}).\n            when('/apps', {\n                templateUrl: '/static/partials/view-apps.html',\n                controller: \"AppsController\"}).\n            when('/hosts', {\n                templateUrl: '/static/partials/view-hosts.html',\n                controller: \"HostsController\"}).\n            when('/hostsmap', {\n                templateUrl: '/static/partials/view-host-map.html',\n                controller: \"HostsMapController\"}).\n            when('/servicesmap', {\n                templateUrl: '/static/partials/view-service-map.html',\n                controller: \"ServicesMapController\"}).\n            when('/hosts/:hostId', {\n                templateUrl: '/static/partials/view-host-details.html',\n                controller: \"HostDetailsController\"}).\n            when('/pools', {\n                templateUrl: '/static/partials/view-pools.html',\n                controller: \"PoolsController\"}).\n            when('/pools/:poolID', {\n                templateUrl: '/static/partials/view-pool-details.html',\n                controller: \"PoolDetailsController\"}).\n            when('/backuprestore', {\n                templateUrl: '/static/partials/view-backuprestore.html',\n                controller: \"BackupRestoreController\"\n            }).\n            otherwise({redirectTo: '/apps'});\n    }]).\n    config(['$translateProvider', function($translateProvider) {\n        $translateProvider.useStaticFilesLoader({\n            prefix: '/static/i18n/',\n            suffix: '.json'\n        });\n        $translateProvider.preferredLanguage('en_US');\n    }]).\n    config(['DSCacheFactoryProvider', function(DSCacheFactory){\n        DSCacheFactory.setCacheDefaults({\n            // Items will not be deleted until they are requested\n            // and have expired\n            deleteOnExpire: 'passive',\n\n            // This cache will clear itself every hour\n            cacheFlushInterval: 3600000,\n\n            // This cache will sync itself with localStorage\n            storageMode: 'memory'\n         });\n    }]).\n    /**\n     * Default Get requests to no caching\n     **/\n    config([\"$httpProvider\", function($httpProvider){\n        //initialize get if not there\n        if (!$httpProvider.defaults.headers.get) {\n            $httpProvider.defaults.headers.get = {};\n        }\n        $httpProvider.defaults.headers.get['Cache-Control'] = 'no-cache';\n        $httpProvider.defaults.headers.get['Pragma'] = 'no-cache';\n        $httpProvider.defaults.headers.get['If-Modified-Since'] = 'Mon, 26 Jul 1997 05:00:00 GMT';\n    }]).\n    filter('treeFilter', function() {\n        /*\n         * @param items The array from ng-repeat\n         * @param field Field on items to check for validity\n         * @param validData Object with allowed objects\n         */\n        return function(items, field, validData) {\n            if (!validData) {\n                return items;\n            }\n            return items.filter(function(elem) {\n                return validData[elem[field]] !== null;\n            });\n        };\n    }).\n    filter('toGB', function(){\n        return function(input, hide){\n            return (input/(1024*1024*1024)).toFixed(2) + (hide ? \"\": \" GB\");\n        };\n    }).\n    filter('toMB', function(){\n        return function(input, hide){\n            return (input/(1024*1024)).toFixed(2) + (hide ? \"\": \" MB\");\n        };\n    }).\n    filter('cut', function(){\n        return function (value, wordwise, max, tail) {\n            if (!value){\n                return '';\n            }\n\n            max = parseInt(max, 10);\n            if (!max){\n                return value;\n            }\n            if (value.length <= max){\n                return value;\n            }\n\n            value = value.substr(0, max);\n            if (wordwise) {\n                var lastspace = value.lastIndexOf(' ');\n                if (lastspace !== -1) {\n                    value = value.substr(0, lastspace);\n                }\n            }\n\n            return value + (tail || ' …');\n        };\n    }).\n    filter('prettyDate', function(){\n        return function(dateString){\n            return moment(new Date(dateString)).format('MMM Do YYYY, hh:mm:ss');\n        };\n    }).\n    // create a human readable \"fromNow\" string from\n    // a date. eg: \"a few seconds ago\"\n    filter('fromNow', function(){\n        return function(date){\n            return moment(date).fromNow();\n        };\n    })\n    .run(function($rootScope, $window, $location){\n        // scroll to top of page on navigation\n        $rootScope.$on(\"$routeChangeSuccess\", function (event, currentRoute, previousRoute) {\n            $window.scrollTo(0, 0);\n        });\n\n        var queryParams = $location.search(),\n            disableAnimation = false;\n\n        // option to disable animation for\n        // acceptance tests\n        if(queryParams[\"disable-animation\"] === \"true\"){\n            disableAnimation = true;\n            $(\"body\").addClass(\"no-animation\");\n        }\n\n        var loaderEl = $(\".loading_wrapper\"),\n            isCleared = false;\n\n        $rootScope.$on(\"ready\", function(){\n            setTimeout(function(){\n                if(!isCleared){\n                    if(disableAnimation){\n                        clearLoader();\n                    } else {\n                        loaderEl.addClass(\"hide_it\").one(\"transitionend\", clearLoader);\n                    }\n                }\n            }, 1000);\n\n            var clearLoader = function(){\n                loaderEl.remove();\n                $(\"body\").removeClass(\"loading\");\n                isCleared = true;\n            };\n        });\n    });\n","/* BackupRestoreController\n * Lists existing backups and allows creation\n * of new backups.\n */\n(function() {\n    'use strict';\n\n    controlplane.controller(\"BackupRestoreController\", [\"$scope\", \"$routeParams\", \"$notification\", \"$translate\", \"resourcesFactory\", \"authService\", \"$modalService\",\n    function($scope, $routeParams, $notification, $translate, resourcesFactory, authService, $modalService) {\n        // Ensure logged in\n        authService.checkLogin($scope);\n\n        // localization messages\n        var BACKUP_RUNNING = $translate.instant(\"backup_running\"),\n            BACKUP_COMPLETE = $translate.instant(\"backup_complete\"),\n            RESTORE_RUNNING = $translate.instant(\"restore_running\"),\n            RESTORE_COMPLETE = $translate.instant(\"restore_complete\"),\n            ERROR = $translate.instant(\"error\");\n\n        $scope.createBackup = function(){\n            $modalService.create({\n                template: $translate.instant(\"confirm_start_backup\"),\n                model: $scope,\n                title: \"backup_create\",\n                actions: [\n                    {\n                        role: \"cancel\"\n                    },{\n                        role: \"ok\",\n                        label: \"backup_create\",\n                        action: function(){\n                            var notification = $notification.create(\"Backup\").updateStatus(BACKUP_RUNNING).show(false);\n\n                            // TODO - when the server switches to broadcast instead of\n                            // channel. this can be greatly simplified\n                            resourcesFactory.createBackup().success(function checkFirstStatus(){\n                                // recursively check if a valid status has been pushed into\n                                // the pipe. if not, shake yourself off and try again. try again.\n                                resourcesFactory.getBackupStatus().success(function(data){\n                                    // no status has been pushed, so check again\n                                    if(data.Detail === \"\"){\n                                       checkFirstStatus();\n\n                                    // a valid status has been pushed, so\n                                    // start the usual poll cycle\n                                    } else {\n                                        pollBackupStatus(notification);\n                                    }\n\n                                })\n                                .error(function(data, status){\n                                    backupRestoreError(notification, data.Detail, status);\n                                });\n                            })\n                            .error(function(data, status){\n                                backupRestoreError(notification, data.Detail, status);\n                            });\n\n                            this.close();\n                        }\n                    }\n                ]\n            });\n        };\n\n        $scope.restoreBackup = function(filename){\n            $modalService.create({\n                template: $translate.instant(\"confirm_start_restore\"),\n                model: $scope,\n                title: \"restore\",\n                actions: [\n                    {\n                        role: \"cancel\"\n                    },{\n                        role: \"ok\",\n                        label: \"restore\",\n                        classes: \"btn-danger\",\n                        action: function(){\n                            var notification = $notification.create(\"Restore\").updateStatus(RESTORE_RUNNING).show(false);\n\n                            // TODO - when the server switches to broadcast instead of\n                            // channel. this can be greatly simplified\n                            resourcesFactory.restoreBackup(filename).success(function checkFirstStatus(){\n                                // recursively check if a valid status has been pushed into\n                                // the pipe. if not, shake yourself off and try again. try again.\n                                resourcesFactory.getRestoreStatus().success(function(data){\n                                    // no status has been pushed, so check again\n                                    if(data.Detail === \"\"){\n                                       checkFirstStatus();\n\n                                    // a valid status has been pushed, so\n                                    // start the usual poll cycle\n                                    } else {\n                                        notification.updateStatus(data.Detail);\n                                        pollRestoreStatus(notification);\n                                    }\n\n                                })\n                                .error(function(data, status){\n                                    backupRestoreError(notification, data.Detail, status);\n                                });\n                            })\n                            .error(function(data, status){\n                                backupRestoreError(notification, data.Detail, status);\n                            });\n\n                            this.close();\n                        }\n                    }\n                ]\n            });\n        };\n\n        function pollBackupStatus(notification){\n            resourcesFactory.getBackupStatus().success(function(data){\n\n                if(data.Detail === \"\"){\n                    notification.updateStatus(BACKUP_COMPLETE);\n                    notification.success(false);\n                    getBackupFiles();\n                    return;\n                }\n                else if (data.Detail !== \"timeout\"){\n                    notification.updateStatus(data.Detail);\n                }\n\n                // poll again\n                setTimeout(function(){\n                    pollBackupStatus(notification);\n                }, 1);\n\n            })\n            .error(function(data, status){\n                backupRestoreError(notification, data.Detail, status);\n            });\n        }\n\n\n        function pollRestoreStatus(notification){\n            resourcesFactory.getRestoreStatus().success(function(data){\n\n                // all done!\n                if(data.Detail === \"\"){\n                    notification.updateStatus(RESTORE_COMPLETE);\n                    notification.success(false);\n                    return;\n\n                // something neato has happened. lets show it.\n                } else if(data.Detail !== \"timeout\"){\n                    notification.updateStatus(data.Detail);\n                }\n\n                // poll again\n                setTimeout(function(){\n                    pollRestoreStatus(notification);\n                }, 1);\n\n            })\n            .error(function(data, status){\n                backupRestoreError(notification, data.Detail, status);\n            });\n\n        }\n\n        function backupRestoreError(notification, data, status){\n            notification.updateTitle(ERROR +\" \"+ status);\n            notification.updateStatus(data);\n            notification.error();\n        }\n\n        function getBackupFiles(){\n            resourcesFactory.getBackupFiles().success(function(data){\n                $scope.backupFiles = data;\n\n                $scope.$emit(\"ready\");\n            });\n        }\n\n        function init(){\n            $scope.name = \"backuprestore\";\n            $scope.params = $routeParams;\n            $scope.breadcrumbs = [{ label: 'breadcrumb_backuprestore', itemClass: 'active' }];\n\n            $scope.backupTable = {\n                sorting: {\n                    full_path: \"asc\"\n                }\n            };\n\n            //load backup files\n            getBackupFiles();\n\n            // poll for backup files\n            resourcesFactory.registerPoll(\"running\", getBackupFiles, 5000);\n        }\n\n        init();\n\n        $scope.$on(\"$destroy\", function(){\n            resourcesFactory.unregisterAllPolls();\n        });\n    }]);\n})();\n","/* globals controlplane: true */\n\n/* DeployWizard.js\n * Guides user through deployment of an app\n */\n(function() {\n    'use strict';\n\n    controlplane.controller(\"DeployWizard\", [\"$scope\", \"$notification\", \"$translate\", \"$q\", \"resourcesFactory\", \"servicesFactory\", \"miscUtils\", \"hostsFactory\", \"poolsFactory\",\n    function($scope, $notification, $translate, $q, resourcesFactory, servicesFactory, utils, hostsFactory, poolsFactory){\n        var step = 0;\n        var nextClicked = false;\n        $scope.name='wizard';\n\n        $scope.dockerLoggedIn = true;\n\n        resourcesFactory.dockerIsLoggedIn()\n            .success(function(loggedIn) {\n                $scope.dockerLoggedIn = loggedIn;\n            });\n\n        $scope.dockerIsNotLoggedIn = function() {\n            return !$scope.dockerLoggedIn;\n        };\n\n        var validTemplateSelected = function() {\n            if(!$scope.install.templateID){\n                showError($translate.instant(\"label_wizard_select_app\"));\n                return false;\n            }else{\n                resetError();\n            }\n\n            return true;\n        };\n\n        var validDeploymentID = function() {\n            if($scope.install.deploymentID === undefined || $scope.install.deploymentID === \"\"){\n                showError($translate.instant(\"label_wizard_deployment_id\"));\n                return false;\n            }else{\n                resetError();\n            }\n\n            return true;\n        };\n\n        var validTemplateUpload = function(){\n            var uploadedFiles = $(\"#new_template_filename_wizard\")[0].files;\n            if(uploadedFiles.length === 0){\n                showError($translate.instant(\"template_error\"));\n                return false;\n            }else{\n                var formData = new FormData();\n                $.each(uploadedFiles, function(key, value){\n                    formData.append(\"tpl\", value);\n                });\n                resourcesFactory.addAppTemplate(formData)\n                    .success($scope.refreshAppTemplates)\n                    .error(() => {\n                        showError(\"Add Application Template failed\");\n                    });\n\n                resetError();\n                return true;\n            }\n        };\n\n        var validHost = function(){\n            var err = utils.validateHostName($scope.newHost.host, $translate) ||\n                utils.validatePortNumber($scope.newHost.port, $translate) ||\n                utils.validateRAMLimit($scope.newHost.RAMLimit);\n            if(err){\n                showError(err);\n                return false;\n            }\n\n            $scope.newHost.IPAddr = $scope.newHost.host + ':' + $scope.newHost.port;\n\n            resourcesFactory.addHost($scope.newHost)\n                .success(function(){\n                    step += 1;\n                    resetError();\n                    $scope.step_page = $scope.steps[step].content;\n                })\n                .error(function(data){\n                    // if it already exists then allow the user to continue\n                    if (data.Detail.indexOf('already exists') !== -1) {\n                        step += 1;\n                        resetError();\n                        $scope.step_page = $scope.steps[step].content;\n                    } else {\n                        showError(\"Add Host failed\", data.Detail);\n                    }\n                });\n\n\n\n\n            return false;\n        };\n\n        var resetStepPage = function() {\n            step = 0;\n\n            $scope.install = {\n                poolID: 'default'\n            };\n\n            if($scope.templates.data.length === 0){\n                $scope.steps.unshift({\n                    content: '/static/partials/wizard-modal-add-template.html',\n                    label: 'template_add',\n                    validate: validTemplateUpload\n                });\n            }\n\n            // if there is not at least one host, add an\n            // \"add host\" step to the wizard\n            if(hostsFactory.hostList.length === 0){\n                $scope.newHost = {\n                    port: $translate.instant('placeholder_port')\n                };\n                if ($scope.pools.length > 0){\n                    $scope.newHost.PoolID = $scope.pools[0].id;\n                }\n                $scope.steps.unshift({\n                    content: '/static/partials/wizard-modal-add-host.html',\n                    label: 'add_host',\n                    validate: validHost\n                });\n            }\n\n            $scope.step_page = $scope.steps[step].content;\n        };\n\n        var showError = function(message){\n            $(\"#deployWizardNotificationsContent\").html(message);\n            $(\"#deployWizardNotifications\").removeClass(\"hide\");\n        };\n\n        var resetError = function(){\n            $(\"#deployWizardNotifications\").html(\"\");\n            $(\"#deployWizardNotifications\").addClass(\"hide\");\n        };\n\n        $scope.steps = [\n            {\n                content: '/static/partials/wizard-modal-2.html',\n                label: 'label_step_select_app',\n                validate: validTemplateSelected\n            },\n            {\n                content: '/static/partials/wizard-modal-3.html',\n                label: 'label_step_select_pool' },\n            {\n                content: '/static/partials/wizard-modal-4.html',\n                label: 'label_step_deploy',\n                validate: validDeploymentID\n            }\n        ];\n\n        $scope.install = {\n            poolID: 'default'\n        };\n\n        $scope.selectTemplate = function(template){\n            $scope.template = template;\n            $scope.install.templateID = template.ID;\n        };\n\n        $scope.selectPool = function(pool){\n            $scope.install.poolID = pool.id;\n        };\n\n        $scope.getTemplateRequiredResources = function(template){\n            var ret = {CPUCommitment:0, RAMCommitment:0};\n\n            // if Services, iterate and sum up their commitment values\n            if(template.Services){\n                var suffixToMultiplier = {\n                    \"\":  1,\n                    \"k\": 1 << 10,\n                    \"m\": 1 << 20,\n                    \"g\": 1 << 30,\n                    \"t\": 1 << 40\n                };\n                var engNotationRE = /([0-9]*)([kKmMgGtT]?)/;\n                // Convert an engineeringNotation string to a number\n                var toBytes = function(RAMCommitment){\n                    if (RAMCommitment === \"\") {\n                        return 0;\n                    }\n                    var match = RAMCommitment.match(engNotationRE);\n                    var numeric = match[1];\n                    var suffix = match[2].toLowerCase();\n                    var multiplier = suffixToMultiplier[suffix];\n                    var val = parseInt(numeric);\n                    return val * multiplier;\n                };\n                // recursively calculate cpu and ram commitments\n                (function calcCommitment(services){\n                    services.forEach(function(service){\n                        // CPUCommitment should be equal to max number of\n                        // cores needed by any service\n                        ret.CPUCommitment = Math.max(ret.CPUCommitment, service.CPUCommitment);\n                        // RAMCommitment should be a sum of all ram needed\n                        // by all services\n                        ret.RAMCommitment += toBytes(service.RAMCommitment);\n\n                        // recurse!\n                        if(service.Services){\n                            calcCommitment(service.Services);\n                        }\n                    });\n                })(template.Services);\n            }\n\n            return ret;\n        };\n\n        $scope.addHostStart = function() {\n            $scope.newHost = {\n                port: $translate.instant('placeholder_port')\n            };\n            if ($scope.pools.length > 0){\n                $scope.newHost.PoolID = $scope.pools[0].id;\n            }\n            $scope.step_page = '/static/partials/wizard-modal-addhost.html';\n        };\n\n        $scope.hasPrevious = function() {\n            return step > 0 &&\n                ($scope.step_page === $scope.steps[step].content);\n        };\n\n        $scope.hasNext = function() {\n            return (step + 1) < $scope.steps.length &&\n                ($scope.step_page === $scope.steps[step].content);\n        };\n\n        $scope.hasFinish = function() {\n            return (step + 1) === $scope.steps.length;\n        };\n\n        $scope.step_item = function(index) {\n            var cls = index <= step ? 'active' : 'inactive';\n            if (index === step) {\n                cls += ' current';\n            }\n            return cls;\n        };\n\n        $scope.step_label = function(index) {\n            return index < step ? 'done' : '';\n        };\n\n        $scope.wizard_next = function() {\n            nextClicked = true;\n\n            if ($scope.step_page !== $scope.steps[step].content) {\n                $scope.step_page = $scope.steps[step].content;\n                nextClicked = false;\n                return;\n            }\n\n            if ($scope.steps[step].validate) {\n                if (!$scope.steps[step].validate()) {\n                    nextClicked = false;\n                    return;\n                }\n            }\n\n            step += 1;\n            resetError();\n            $scope.step_page = $scope.steps[step].content;\n            nextClicked = false;\n        };\n\n        $scope.wizard_previous = function() {\n            step -= 1;\n            $scope.step_page = $scope.steps[step].content;\n            resetError();\n        };\n\n        $scope.wizard_finish = function() {\n\n            var closeModal = function(){\n                $('#addApp').modal('hide');\n                $(\"#deploy-save-button\").removeAttr(\"disabled\");\n                $(\"#deploy-save-button\").removeClass('active');\n                resetStepPage();\n                resetError();\n            };\n\n            nextClicked = true;\n            if ($scope.steps[step].validate) {\n                if (!$scope.steps[step].validate()) {\n                    return;\n                }\n            }\n\n            $(\"#deploy-save-button\").toggleClass('active');\n            $(\"#deploy-save-button\").attr(\"disabled\", \"disabled\");\n\n            var deploymentDefinition = {\n                poolID: $scope.install.poolID,\n                TemplateID: $scope.install.templateID,\n                DeploymentID: $scope.install.deploymentID\n            };\n\n            var checkStatus = true;\n            resourcesFactory.deployAppTemplate(deploymentDefinition)\n                .success(function() {\n                    checkStatus = false;\n                    servicesFactory.update(true, false);\n                    $notification.create(\"App deployed successfully\").success();\n                    closeModal();\n                })\n                .error(function(data, status){\n                    checkStatus = false;\n                    $notification.create(\"App deploy failed\", data.Detail).error();\n                    closeModal();\n                });\n\n            //now that we have started deploying our app, we poll for status\n            var getStatus = function(){\n                if(checkStatus){\n                    var $status = $(\"#deployStatusText\");\n                    resourcesFactory.getDeployStatus(deploymentDefinition)\n                        .success(function(data){\n                            if(data.Detail === \"timeout\"){\n                                $(\"#deployStatus .dialogIcon\").fadeOut(200, function(){$(\"#deployStatus .dialogIcon\").fadeIn(200);});\n                            }else{\n                                var parts = data.Detail.split(\"|\");\n                                if(parts[1]){\n                                    $status.html('<strong>' + $translate.instant(parts[0]) + \":</strong> \" + parts[1]);\n                                }else{\n                                    $status.html('<strong>' + $translate.instant(parts[0]) + '</strong>');\n                                }\n                            }\n                        })\n                        .error(function(err){\n                            console.warn(\"Error getting deploy status\", err);\n                        })\n                        .finally(function(){\n                            getStatus();\n                        });\n                }\n            };\n\n            $(\"#deployStatus\").show();\n            getStatus();\n\n            nextClicked = false;\n        };\n\n        $scope.refreshAppTemplates = function(){\n            const MAX_RETRIES = 4;\n            var deferred = $q.defer(),\n                attempts = 0;\n\n            // allow requests to be repeated if necessary\n            var fetch = () => {\n                resourcesFactory.getAppTemplates()\n                    .then(function(templatesMap) {\n                        var templates = [];\n                        for (var key in templatesMap) {\n                            var template = templatesMap[key];\n                            template.ID = key;\n                            templates.push(template);\n                        }\n                        $scope.templates.data = templates;\n                        deferred.resolve();\n                    }, function(){\n                        if(attempts >= MAX_RETRIES){\n                            deferred.reject(\"Unable to refresh application templates\");\n                        }\n                        // retry in 3s\n                        setTimeout(fetch, 3000);\n                        attempts++;\n                    });\n            };\n            fetch();\n\n            return deferred.promise;\n        };\n\n        $scope.refreshAppTemplates()\n            .then(() => {\n                hostsFactory.update().finally(resetStepPage);\n            }, e => {\n                console.error(e);\n            });\n\n        poolsFactory.update()\n            .finally(() => {\n                $scope.pools = poolsFactory.poolList;\n            });\n    }]);\n})();\n","/* globals jstz: true */\n\n/* graphpanel\n * creates graphs from graph configs, and provides\n * controls for displayed range and update frequency\n */\n\n(function() {\n    'use strict';\n\n    angular.module('graphPanel', [])\n    .directive(\"graphPanel\", [\"$interval\", \"$location\",\n    function($interval, $location){\n        return {\n            restrict: \"E\",\n            scope: {\n                serviceId: \"=\",\n                graphConfigs: \"=\"\n            },\n            templateUrl: \"/static/partials/graphpanel.html\",\n            link: function($scope, element){\n            \n                // configure viz library\n                zenoss.visualization.url = $location.protocol() + \"://\" + $location.host() + ':' + $location.port();\n                zenoss.visualization.urlPath = '/metrics/static/performance/query/';\n                zenoss.visualization.urlPerformance = '/metrics/api/performance/query/';\n                zenoss.visualization.debug = false;\n\n                $scope.graphs = {};\n                $scope.showStartEnd = false;\n                $scope.showGraphControls = false;\n                $scope.refreshInterval = 300000;\n\n                var momentFormat = \"MM/DD/YYYY  HH:mm:ss\";\n\n                // graph configuration used to generate\n                // query service requests\n                $scope.graphConfig = {\n                    aggregator: \"sum\",\n                    start: zenoss.utils.createDate(\"1h-ago\").format(momentFormat),\n                    end: zenoss.utils.createDate(\"0s-ago\").format(momentFormat),\n                    range: \"1h-ago\",\n                    now: true\n                };\n\n                $scope.viz = function(graph) {\n                    var id = $scope.getUniqueGraphId(graph),\n                        graphCopy;\n\n                    if (!$scope.graphs[id]) {\n                        if (window.zenoss === undefined) {\n                            return \"Not collecting stats, graphs unavailable\";\n                        } else {\n                            // create a copy of graph so that range changes\n                            // do not affect the original service def\n                            graphCopy = angular.copy(graph);\n\n                            // set graphs to local browser time\n                            graphCopy.timezone = jstz.determine().name();\n\n                            updateGraphRequest(graphCopy);\n                            zenoss.visualization.chart.create(id, graphCopy);\n\n                            // store graph def for later use\n                            $scope.graphs[id] = graphCopy;\n                        }\n                    }\n                };\n\n                $scope.datetimePickerOptions = {\n                    maxDate: new Date(),\n                    mask:true,\n                    closeOnDateSelect: true,\n                    format: \"m/d/Y  H:i:s\",\n                    onChangeDateTime: function(){\n                        // let angular finish current digest cycle\n                        // before updating the graphs\n                        setTimeout(function(){\n                            $scope.refreshGraphs();\n                        }, 0);\n                    }\n                };\n\n                // select options for graph aggregation\n                $scope.aggregators = [\n                    {\n                        name: \"Average\",\n                        val: \"avg\"\n                    },{\n                        name: \"Sum\",\n                        val: \"sum\"\n                    }\n                ];\n                // refresh intervals\n                $scope.intervals= [\n                    {\n                        name: \"1 Second\",\n                        val: 1000\n                    },{\n                        name: \"5 Seconds\",\n                        val: 5000\n                    },{\n                        name: \"1 Minute\",\n                        val: 60000\n                    },{\n                        name: \"5 Minutes\",\n                        val: 300000\n                    },{\n                        name: \"15 Minutes\",\n                        val: 900000\n                    },{\n                        name: \"Never\",\n                        val: 0\n                    }\n                ];\n                // select options for graph ranges\n                var CUSTOM_RANGE = \"custom\";\n                $scope.ranges = [\n                    {\n                        name: \"Last hour\",\n                        val: \"1h-ago\"\n                    },{\n                        name: \"Last 4 hours\",\n                        val: \"4h-ago\"\n                    },{\n                        name: \"Last 12 hours\",\n                        val: \"12h-ago\"\n                    },{\n                        name: \"Last 24 hours\",\n                        val: \"1d-ago\"\n                    },{\n                        name: \"Last 48 hours\",\n                        val: \"2d-ago\"\n                    },{\n                        name: \"[Custom]\",\n                        val: CUSTOM_RANGE\n                    }\n                ];\n\n                // on range select change, update start/end\n                // values to reflect the selected range\n                $scope.rangeChange = function(){\n                    var range = $scope.graphConfig.range;\n\n                    if(range === CUSTOM_RANGE){\n                        // show start/end options\n                        $scope.showStartEnd = true;\n                    } else {\n                        // hide start/end opts\n                        $scope.showStartEnd = false;\n\n                        // parse graph range into something the date picker likes\n                        $scope.graphConfig.start = zenoss.utils.createDate($scope.graphConfig.range).format(momentFormat);\n                        \n                        // when using a range, always use \"now\" for the end time\n                        $scope.graphConfig.end = zenoss.utils.createDate(\"0s-ago\").format(momentFormat);\n                    }\n\n                    $scope.refreshGraphs();\n                };\n\n\n                // on refresh change, update refresh interval\n                $scope.setupAutoRefresh = function(){\n                    // cancel existing refresh\n                    $interval.cancel($scope.refreshPromise);\n\n                    // if refreshInterval is zero, don't setup\n                    // a refresh interval\n                    if($scope.refreshInterval){\n                        // start auto-refresh\n                        $scope.refreshPromise = $interval(function(){\n                            $scope.refreshGraphs();\n                        }, $scope.refreshInterval);\n                    }\n                };\n                \n                // kick off inital graph request\n                $scope.setupAutoRefresh();\n\n                $scope.refreshGraphs = function(){\n                    // don't refresh graph if tab is not visible\n                    if(document.hidden){\n                        return;\n                    }\n\n                    var graph;\n\n                    // iterate and update all graphs\n                    for(var i in $scope.graphs){\n                        graph = $scope.graphs[i];\n                        updateGraphRequest(graph);\n                        zenoss.visualization.chart.update(i, graph);\n                    }\n                };\n\n                $scope.getUniqueGraphId = function(graph){\n                    return ($scope.serviceId +\"-graph-\"+ graph.id).replace(/\\./g, \"_\");\n                };\n\n                $scope.cleanup = function(){\n                    var chart;\n\n                    // remove graph from cache\n                    for(var id in $scope.graphs){\n                        // TODO - expose removeChart() and use it\n                        chart = zenoss.visualization.chart.getChart(id);\n                        chart.onDestroyed();\n                    }\n\n                    $scope.graphs = {};\n                };\n\n                $scope.graphControlsPopover = function(){\n                    $scope.showGraphControls = !$scope.showGraphControls;\n\n                };\n\n                // make clicking anywhere outside of graph\n                // control hide it\n                var hideGraphControls = function(){\n                    $scope.showGraphControls = false;\n                    // force angular to apply the visibility change\n                    $scope.$apply();\n                };\n                angular.element(\"html\").on(\"click\", hideGraphControls);\n\n                $scope.$watch(\"serviceId\", $scope.cleanup);\n\n                $scope.$on(\"$destroy\", function(){\n                    $scope.cleanup();\n                    $interval.cancel($scope.refreshPromise);\n                    angular.element(\"html\").off(\"click\", hideGraphControls);\n                });\n\n                function updateGraphRequest(graph){\n                    // update aggregator\n                    graph.datapoints.forEach(function(dp){\n                        dp.aggregator = $scope.graphConfig.aggregator;\n                    });\n\n                    // if end should always be \"now\", use current time\n                    if($scope.graphConfig.now){\n                        $scope.graphConfig.end = zenoss.utils.createDate(\"0s-ago\").format(momentFormat);\n                        graph.range.end = zenoss.utils.createDate($scope.graphConfig.end).valueOf();\n\n                    // else, use specified end time\n                    } else {\n                        graph.range.end = zenoss.utils.createDate($scope.graphConfig.end).valueOf();\n                    }\n\n                    // if range, update start time\n                    if($scope.graphConfig.range !== CUSTOM_RANGE){\n                        $scope.graphConfig.start = zenoss.utils.createDate($scope.graphConfig.range).format(momentFormat);\n                    }\n                    // update start/end\n                    graph.range.start = zenoss.utils.createDate($scope.graphConfig.start).valueOf();\n                }\n            }\n        };\n    }]);\n})();\n","/* healthIconDirective\n * directive for displaying health of a service/instance\n * in icon form with helpful popover details\n */\n(function() {\n    'use strict';\n\n    angular.module('healthIcon', [])\n    .directive(\"healthIcon\", [\"hcStatus\",\n    function(hcStatus){\n        let {OK, FAILED, NOT_RUNNING, UNKNOWN} = hcStatus;\n\n        return {\n            restrict: \"E\",\n            scope: {\n                // status object generated by serviceHealth\n                status: \"=\"\n            },\n            template: '<i class=\"healthIcon glyphicon\"></i><div class=\"healthIconBadge\"></div>',\n            link: function($scope, element, attrs){\n                var STATUS_STYLES = {\n                    [FAILED]: \"glyphicon glyphicon-exclamation bad\",\n                    [OK]: \"glyphicon glyphicon-ok good\",\n                    [UNKNOWN]: \"glyphicon glyphicon-question unknown\",\n                    [NOT_RUNNING]: \"glyphicon glyphicon-minus disabled\"\n                };\n\n                // cache some DOM elements\n                var $el = $(element),\n                    $badge = $el.find(\".healthIconBadge\"),\n                    lastStatus;\n\n                function update(){\n                    var statusObj, popoverHTML,\n                        hideHealthChecks,\n                        placement = \"right\",\n                        popoverObj, template;\n\n                    statusObj = $scope.status;\n\n                    if(!statusObj){\n                        // TODO - re-implement?\n                        //statusObj = new Status(id, \"\", 1);\n                        //statusObj.statusRollup.incNotRunning();\n                        //statusObj.evaluateStatus();\n                        return;\n                    }\n\n\n                    // determine if we should hide healthchecks\n                    hideHealthChecks = statusObj.statusRollup.allOK() ||\n                        statusObj.statusRollup.allNotRunning() ||\n                        statusObj.desiredState  === 0;\n\n                    // if service should be up and there is more than 1 instance, show number of instances\n                    if(statusObj.desiredState === 1 && statusObj.statusRollup.total > 1){\n                        $el.addClass(\"wide\");\n                        $badge.text(statusObj.statusRollup[OK] +\"/\"+ statusObj.statusRollup.total).show();\n\n                    // else, hide the badge\n                    } else {\n                        $el.removeClass(\"wide\");\n                        $badge.hide();\n                    }\n\n                    // setup popover\n\n                    // if this $el is inside a .serviceTitle, make the popover point down\n                    if($el.parent().hasClass(\"serviceTitle\")){\n                        placement = \"bottom\";\n                    }\n\n                    // if this statusObj has children, we wanna show\n                    // them in the healtcheck tooltip, so generate\n                    // some yummy html\n                    if(statusObj.children.length){\n                        popoverHTML = [];\n\n                        var isHealthCheckStatus = function(status){\n                           return !status.id;\n                        };\n\n                        // if this status's children are healthchecks,\n                        // no need for instance rows, go straight to healthcheck rows\n                        if(statusObj.children.length && isHealthCheckStatus(statusObj.children[0])){\n                            // if these are JUST healthchecks, then don't allow them\n                            // to be hidden. this ensures that healthchecks show up for\n                            // running instances.\n                            hideHealthChecks = false;\n                            // don't show count badge for healthchecks either\n                            $badge.hide();\n                            $el.removeClass(\"wide\");\n\n                            statusObj.children.forEach(function(hc){\n                                popoverHTML.push(bindHealthCheckRowTemplate(hc));\n                            });\n\n                        // else these are instances, so create instance rows\n                        // AND healthcheck rows\n                        } else {\n                            statusObj.children.forEach(function(instanceStatus){\n                                // if this is becoming too long, stop adding rows\n                                if(popoverHTML.length >= 15){\n                                    // add an overflow indicator if not already there\n                                    if(popoverHTML[popoverHTML.length-1] !== \"...\"){\n                                        popoverHTML.push(\"...\");\n                                    }\n                                    return;\n                                }\n\n                                // only create an instance row for this instance if\n                                // it's in a bad or unknown state\n                                if(instanceStatus.status === FAILED ||\n                                      instanceStatus.status === UNKNOWN){\n                                    popoverHTML.push(\"<div class='healthTooltipDetailRow'>\");\n                                    popoverHTML.push(\"<div style='font-weight: bold; font-size: .9em; padding: 5px 0 3px 0;'>\"+ instanceStatus.name +\"</div>\");\n                                    instanceStatus.children.forEach(function(hc){\n                                        popoverHTML.push(bindHealthCheckRowTemplate(hc));\n                                    });\n                                    popoverHTML.push(\"</div>\");\n                                }\n                            });\n                        }\n\n                        popoverHTML = popoverHTML.join(\"\");\n                    }\n\n                    // choose a popover template which is just a title,\n                    // or a title and content\n                    template = hideHealthChecks || !popoverHTML ?\n                        '<div class=\"popover\" role=\"tooltip\"><div class=\"arrow\"></div><h3 class=\"popover-title\"></h3></div>' :\n                        '<div class=\"popover\" role=\"tooltip\"><div class=\"arrow\"></div><h3 class=\"popover-title\"></h3><div class=\"popover-content\"></div></div>';\n\n                    // NOTE: directly accessing the bootstrap popover\n                    // data object here.\n                    popoverObj = $el.data(\"bs.popover\");\n\n                    // if popover element already exists, update it\n                    if(popoverObj){\n                        // update title, content, and template\n                        popoverObj.options.title = statusObj.description;\n                        popoverObj.options.content = popoverHTML;\n                        popoverObj.options.template = template;\n\n                        // if the tooltip already exists, change the contents\n                        // to the new template\n                        if(popoverObj.$tip){\n                            popoverObj.$tip.html($(template).html());\n                        }\n\n                        // force popover to update using the new options\n                        popoverObj.setContent();\n\n                        // if the popover is currently visible, update\n                        // it immediately, but turn off animation to\n                        // prevent it fading in\n                        if(popoverObj.$tip.is(\":visible\")){\n                            popoverObj.options.animation = false;\n                            popoverObj.show();\n                            popoverObj.options.animation = true;\n                        }\n\n                    // if popover element doesn't exist, create it\n                    } else {\n                        $el.popover({\n                            trigger: \"hover\",\n                            placement: placement,\n                            delay: 0,\n                            title: statusObj.description,\n                            html: true,\n                            content: popoverHTML,\n                            template: template\n                        });\n                    }\n\n                    $el.removeClass(Object.keys(STATUS_STYLES).join(\" \"))\n                        .addClass(statusObj.status);\n\n                    // if the status has changed since last tick, or\n                    // it was and is still unknown, notify user\n                    if(lastStatus !== statusObj.status || lastStatus === UNKNOWN && statusObj.status === UNKNOWN){\n                        bounceStatus($el);\n                    }\n                    // store the status for comparison later\n                    lastStatus = statusObj.status;\n                }\n\n                // if status object updates, update icon\n                $scope.$watch(\"status\", update);\n\n                // TODO - cleanup watch\n                $scope.$on(\"$destroy\", function(){});\n\n                function bindHealthCheckRowTemplate(hc){\n                    return \"<div class='healthTooltipDetailRow \"+ hc.status +\"'>\\\n                            <i class='healthIcon glyphicon'></i>\\\n                        <div class='healthTooltipDetailName'>\"+ hc.name +\"</div>\\\n                    </div>\";\n                }\n\n                function bounceStatus($el){\n                    $el.addClass(\"zoom\");\n\n                    $el.on(\"webkitAnimationEnd animationend\", function(){\n                        $el.removeClass(\"zoom\");\n                        // clean up animation end listener\n                        $el.off(\"webkitAnimationEnd animationend\");\n                    });\n                }\n\n            }\n        };\n    }]);\n})();\n","\n/* healthStatusDirective\n * directive for displaying health of a service/instance\n * using popover details\n */\n(function() {\n    'use strict';\n\n    angular.module('healthStatus', [])\n    .directive(\"healthStatus\", [ \"$translate\",\n    function($translate) {\n        var linker = function($scope, element, attrs) {\n            // Because we don't need to track status, we just need to enable the\n            // bootstrap popover.\n            // Set the popup with the content data.\n            $(element).popover({\n                trigger: \"hover\",\n                placement: \"top\",\n                delay: 0,\n                content: $translate.instant(\"vhost_unavailable\"),\n            });\n        };\n        return {\n            restrict: \"E\",\n            link: linker\n        };\n    }]);\n})();\n","/* jshint multistr: true */\n(function() {\n    'use strict';\n\n\t// OK means health check is passing\n\tconst OK = \"passed\";\n\t// Failed means health check is responsive, but failing\n\tconst FAILED = \"failed\";\n\t// Timeout means health check is non-responsive in the given time\n\tconst TIMEOUT = \"timeout\";\n\t// NotRunning means the instance is not running\n\tconst NOT_RUNNING = \"not_running\";\n\t// Unknown means the instance hasn't checked in within the provided time\n\t// limit.\n\tconst UNKNOWN = \"unknown\";\n\n    let serviceHealthModule = angular.module('serviceHealth', []);\n\n    // share constants for other packages to use\n    serviceHealthModule.value(\"hcStatus\", {\n        OK: OK,\n        FAILED: FAILED,\n        TIMEOUT: TIMEOUT,\n        NOT_RUNNING: NOT_RUNNING,\n        UNKNOWN: UNKNOWN\n    });\n\n    serviceHealthModule.factory(\"$serviceHealth\", [\"$translate\",\n    function($translate){\n\n        var statuses = {};\n\n        // updates health check data for all services\n        function update(serviceList) {\n\n            var serviceStatus, instanceStatus, instanceUniqueId, service;\n\n            statuses = {};\n\n            // iterate services healthchecks\n            for(var serviceId in serviceList){\n                service = serviceList[serviceId];\n                serviceStatus = new Status(\n                    serviceId,\n                    service.name,\n                    service.model.DesiredState);\n\n                // refresh list of instances\n                service.getServiceInstances();\n\n                // if this service has instances, evaluate their health\n                service.instances.forEach(instance => {\n\n                    // create a new status rollup for this instance\n                    instanceUniqueId = serviceId +\".\"+ instance.id;\n                    instanceStatus = new Status(\n                        instanceUniqueId,\n                        service.name +\" \"+ instance.id,\n                        service.model.DesiredState);\n\n                    // evalute instance healthchecks and roll em up\n                    instanceStatus.evaluateHealthChecks(instance.healthChecks);\n                    // store resulting status on instance\n                    instance.status = instanceStatus;\n\n                    // add this guy's statuses to hash map for easy lookup\n                    statuses[instanceUniqueId] = instanceStatus;\n                    // add this guy's status to his parent\n                    serviceStatus.children.push(instanceStatus);\n                });\n\n                // now that this services instances have been evaluated,\n                // evaluate the status of this service\n                serviceStatus.evaluateChildren();\n\n                statuses[serviceId] = serviceStatus;\n            }\n\n            return statuses;\n        }\n\n        // used by Status to examine children and figure\n        // out what the parent's status is\n        function StatusRollup(){\n            this[OK] = 0;\n            this[FAILED] = 0;\n            this[NOT_RUNNING] = 0;\n            this[UNKNOWN] = 0;\n            this.total = 0;\n        }\n        StatusRollup.prototype = {\n            constructor: StatusRollup,\n\n            incOK: function(){\n                this.incStatus(OK);\n            },\n            incFailed: function(){\n                this.incStatus(FAILED);\n            },\n            incNotRunning: function(){\n                this.incStatus(NOT_RUNNING);\n            },\n            incUnknown: function(){\n                this.incStatus(UNKNOWN);\n            },\n            incStatus: function(status){\n                if(this[status] !== undefined){\n                    this[status]++;\n                    this.total++;\n                }\n            },\n\n            // TODO - use assertion style ie: status.is.ok() or status.any.ok()\n            anyFailed: function(){\n                return !!this[FAILED];\n            },\n            allFailed: function(){\n                return this.total && this[FAILED] === this.total;\n            },\n            anyOK: function(){\n                return !!this[OK];\n            },\n            allOK: function(){\n                return this.total && this[OK] === this.total;\n            },\n            anyNotRunning: function(){\n                return !!this[NOT_RUNNING];\n            },\n            allNotRunning: function(){\n                return this.total && this[NOT_RUNNING] === this.total;\n            },\n            anyUnknown: function(){\n                return !!this[UNKNOWN];\n            },\n            allUnknown: function(){\n                return this.total && this[UNKNOWN] === this.total;\n            }\n        };\n\n        function Status(id, name, desiredState){\n            this.id = id;\n            this.name = name;\n            this.desiredState = desiredState;\n\n            this.statusRollup = new StatusRollup();\n            this.children = [];\n\n            this.status = null;\n            this.description = null;\n        }\n\n        Status.prototype = {\n            constructor: Status,\n\n            // distill this service's statusRollup into a single value\n            evaluateStatus: function(){\n                if(this.desiredState === 1){\n                    // if any failing, bad!\n                    if(this.statusRollup.anyFailed()){\n                        this.status = FAILED;\n                        this.description = $translate.instant(\"failing_health_checks\");\n\n                    // if any notRunning, oh no!\n                    } else if(this.statusRollup.anyNotRunning()){\n                        this.status = UNKNOWN;\n                        this.description = $translate.instant(\"starting_service\");\n\n                    // if all are ok, yay! ok!\n                    } else if(this.statusRollup.allOK()){\n                        this.status = OK;\n                        this.description = $translate.instant(\"passing_health_checks\");\n\n                    // some health checks are late\n                    } else {\n                        this.status = UNKNOWN;\n                        this.description = $translate.instant(\"missing_health_checks\");\n                    }\n\n                } else if(this.desiredState === 0){\n                    // shouldnt be running, but still getting health checks,\n                    // so probably stopping\n                    if(this.statusRollup.anyOK() || this.statusRollup.anyFailed() ||\n                            this.statusRollup.anyUnknown()){\n                        this.status = UNKNOWN;\n                        this.description = $translate.instant(\"stopping_service\");\n\n                    // stuff is notRunning as expected\n                    } else {\n                        this.status = NOT_RUNNING;\n                        this.description = $translate.instant(\"container_down\");\n                    }\n                }\n            },\n\n            // roll up child status into this status\n            evaluateChildren: function(){\n                this.statusRollup = this.children.reduce(function(acc, childStatus){\n                    acc.incStatus(childStatus.status);\n                    return acc;\n                }.bind(this), new StatusRollup());\n                this.evaluateStatus();\n            },\n\n            // set this status's statusRollup based on healthchecks\n            // NOTE - subtly different than evaluateChildren\n            evaluateHealthChecks: function(healthChecks){\n                for(var name in healthChecks){\n                    this.statusRollup.incStatus(healthChecks[name]);\n                    this.children.push({\n                        name: name,\n                        status: healthChecks[name]\n                    });\n                }\n                this.evaluateStatus();\n            },\n\n        };\n\n        return {\n            update: update,\n            get: function(id){\n                var status = statuses[id];\n\n                // if no status found, return unknown\n                if(!status){\n                    status = new Status(id, UNKNOWN, 0);\n                    status.evaluateStatus();\n                }\n\n                return status;\n            }\n        };\n    }]);\n\n})();\n","/* globals controlplane: true */\n\n/* HostDetailsController\n * Displays list of hosts\n */\n(function() {\n    'use strict';\n\n    controlplane.controller(\"HostDetailsController\", [\"$scope\", \"$routeParams\", \"$location\", \"resourcesFactory\", \"authService\", \"$modalService\", \"$translate\", \"miscUtils\", \"hostsFactory\", \"$notification\", \"instancesFactory\", \"servicesFactory\",\n    function($scope, $routeParams, $location, resourcesFactory, authService, $modalService, $translate, utils, hostsFactory, $notification, instancesFactory, servicesFactory){\n        // Ensure logged in\n        authService.checkLogin($scope);\n\n        $scope.name = \"hostdetails\";\n        $scope.params = $routeParams;\n\n        $scope.breadcrumbs = [\n            { label: 'breadcrumb_hosts', url: '/hosts' }\n        ];\n\n        $scope.viewLog = function(instance) {\n            $scope.editService = angular.copy(instance);\n            resourcesFactory.getInstanceLogs(instance.model.ServiceID, instance.id)\n                .success(function(log) {\n                    $scope.editService.log = log.Detail;\n                    $modalService.create({\n                        templateUrl: \"view-log.html\",\n                        model: $scope,\n                        title: \"title_log\",\n                        bigModal: true,\n                        actions: [\n                            {\n                                role: \"cancel\",\n                                label: \"close\"\n                            },{\n                                classes: \"btn-primary\",\n                                label: \"refresh\",\n                                icon: \"glyphicon-repeat\",\n                                action: function(){\n                                    var textarea = this.$el.find(\"textarea\");\n                                    resourcesFactory.getInstanceLogs(instance.model.ServiceID, instance.id).success(function(log) {\n                                        $scope.editService.log = log.Detail;\n                                        textarea.scrollTop(textarea[0].scrollHeight - textarea.height());\n                                    })\n                                    .error((data, status) => {\n                                        this.createNotification(\"Unable to fetch logs\", data.Detail).error();\n                                    });\n                                }\n                            },{\n                                classes: \"btn-primary\",\n                                label: \"download\",\n                                action: function(){\n                                    utils.downloadFile('/services/' + instance.model.ServiceID + '/' + instance.model.ID + '/logs/download');\n                                },\n                                icon: \"glyphicon-download\"\n                            }\n                        ],\n                        onShow: function(){\n                            var textarea = this.$el.find(\"textarea\");\n                            textarea.scrollTop(textarea[0].scrollHeight - textarea.height());\n                        }\n                    });\n                })\n                .error((data, status) => {\n                    this.createNotification(\"Unable to fetch logs\", data.Detail).error();\n                });\n        };\n\n        $scope.click_app = function(instance) {\n            $location.path('/services/' + instance.model.ServiceID);\n        };\n\n        $scope.editCurrentHost = function(){\n            $scope.editableHost = {\n                Name: $scope.currentHost.name,\n                RAMLimit: $scope.currentHost.RAMLimit\n            };\n\n            $modalService.create({\n                templateUrl: \"edit-host.html\",\n                model: $scope,\n                title: \"title_edit_host\",\n                actions: [\n                    {\n                        role: \"cancel\"\n                    },{\n                        role: \"ok\",\n                        label: \"btn_save_changes\",\n                        action: function(){\n                            var hostModel = angular.copy($scope.currentHost.model);\n                            angular.extend(hostModel, $scope.editableHost);\n\n                            if(this.validate()){\n                                // disable ok button, and store the re-enable function\n                                var enableSubmit = this.disableSubmitButton();\n\n                                // update host with recently edited host\n                                resourcesFactory.updateHost($scope.currentHost.id, hostModel)\n                                    .success(function(data, status){\n                                        $notification.create(\"Updated host\", hostModel.Name).success();\n                                        this.close();\n                                    }.bind(this))\n                                    .error(function(data, status){\n                                        this.createNotification(\"Update host failed\", data.Detail).error();\n                                        enableSubmit();\n                                    }.bind(this));\n                            }\n                        }\n                    }\n                ],\n                validate: function(){\n                    var err = utils.validateRAMLimit($scope.editableHost.RAMLimit, $scope.currentHost.model.Memory);\n                    if(err){\n                        this.createNotification(\"Error\", err).error();\n                        return false;\n                    }\n                    return true;\n                }\n            });\n        };\n\n        init();\n\n        function init(){\n            // start polling\n            hostsFactory.activate();\n            servicesFactory.activate();\n            servicesFactory.update();\n\n            $scope.ipsTable = {\n                sorting: {\n                    InterfaceName: \"asc\"\n                },\n                watchExpression: function(){\n                    return hostsFactory.lastUpdate;\n                }\n            };\n\n            $scope.instancesTable = {\n                sorting: {\n                    name: \"asc\"\n                },\n                watchExpression: function(){\n                    return instancesFactory.lastUpdate;\n                }\n            };\n\n            // kick off hostsFactory updating\n            // TODO - update loop here\n            hostsFactory.update()\n                .then(() => {\n                    $scope.currentHost = hostsFactory.get($scope.params.hostId);\n                    $scope.breadcrumbs.push({ label: $scope.currentHost.name, itemClass: 'active' });\n                });\n\n        }\n\n        $scope.$on(\"$destroy\", function(){\n            hostsFactory.deactivate();\n            servicesFactory.deactivate();\n        });\n    }]);\n})();\n","/* HostsController\n * Displays details for a specific host\n */\n(function(){\n    \"use strict\";\n\n    controlplane.controller(\"HostsController\", [\"$scope\", \"$routeParams\", \"$location\", \"$filter\", \"resourcesFactory\", \"authService\", \"$modalService\", \"$interval\", \"$translate\", \"$notification\", \"miscUtils\", \"hostsFactory\", \"poolsFactory\", \"servicesFactory\",\n    function($scope, $routeParams, $location, $filter, resourcesFactory, authService, $modalService, $interval, $translate, $notification, utils, hostsFactory, poolsFactory, servicesFactory){\n        // Ensure logged in\n        authService.checkLogin($scope);\n\n        $scope.indent = utils.indentClass;\n\n        $scope.resetNewHost = function(){\n            $scope.newHost = {\n                port: $translate.instant('placeholder_port')\n            };\n            if ($scope.pools.length > 0){\n                $scope.newHost.PoolID = $scope.pools[0].id;\n            }\n        };\n\n        $scope.modalAddHost = function() {\n            $modalService.create({\n                templateUrl: \"add-host.html\",\n                model: $scope,\n                title: \"add_host\",\n                actions: [\n                    {\n                        role: \"cancel\",\n                        action: function(){\n                            $scope.resetNewHost();\n                            this.close();\n                        }\n                    },{\n                        role: \"ok\",\n                        label: \"add_host\",\n                        action: function(){\n                            if(this.validate()){\n                                // disable ok button, and store the re-enable function\n                                var enableSubmit = this.disableSubmitButton();\n                                if ($scope.newHost.RAMLimit === undefined || $scope.newHost.RAMLimit === '') {\n                                    $scope.newHost.RAMLimit = \"100%\";\n                                }\n\n                                $scope.newHost.IPAddr = $scope.newHost.host + ':' + $scope.newHost.port;\n\n                                resourcesFactory.addHost($scope.newHost)\n                                    .success(function(data, status){\n                                        $notification.create(\"\", data.Detail).success();\n                                        this.close();\n                                        update();\n                                    }.bind(this))\n                                    .error(function(data, status){\n                                        // TODO - form error highlighting\n                                        this.createNotification(\"\", data.Detail).error();\n                                        // reenable button\n                                        enableSubmit();\n                                    }.bind(this));\n                            }\n                        }\n                    }\n                ],\n                validate: function(){\n                    var err = utils.validateHostName($scope.newHost.host, $translate) ||\n                        utils.validatePortNumber($scope.newHost.port, $translate) ||\n                        utils.validateRAMLimit($scope.newHost.RAMLimit);\n                    if(err){\n                        this.createNotification(\"Error\", err).error();\n                        return false;\n                    }\n                    return true;\n                }\n            });\n        };\n\n        $scope.remove_host = function(hostId) {\n            $modalService.create({\n                template: $translate.instant(\"confirm_remove_host\") + \" <strong>\"+ hostsFactory.get(hostId).name +\"</strong>\",\n                model: $scope,\n                title: \"remove_host\",\n                actions: [\n                    {\n                        role: \"cancel\"\n                    },{\n                        role: \"ok\",\n                        label: \"remove_host\",\n                        classes: \"btn-danger\",\n                        action: function(){\n\n                            resourcesFactory.removeHost(hostId)\n                                .success(function(data, status) {\n                                    $notification.create(\"Removed host\", hostId).success();\n                                    // After removing, refresh our list\n                                    update();\n                                    this.close();\n                                }.bind(this))\n                                .error(function(data, status){\n                                    $notification.create(\"Removing host failed\", data.Detail).error();\n                                    this.close();\n                                }.bind(this));\n                        }\n                    }\n                ]\n            });\n        };\n\n        $scope.clickHost = function(hostId) {\n            resourcesFactory.routeToHost(hostId);\n        };\n\n        $scope.clickPool = function(poolID) {\n            resourcesFactory.routeToPool(poolID);\n        };\n\n        function update(){\n            hostsFactory.update()\n                .then(() => {\n                    $scope.hosts = hostsFactory.hostList;\n                });\n\n            poolsFactory.update()\n                .then(() => {\n                    $scope.pools = poolsFactory.poolList;\n                    $scope.resetNewHost();\n                });\n        }\n\n        function init(){\n            $scope.name = \"hosts\";\n            $scope.params = $routeParams;\n\n            $scope.breadcrumbs = [\n                { label: 'breadcrumb_hosts', itemClass: 'active' }\n            ];\n\n            $scope.hostsTable = {\n                sorting: {\n                    name: \"asc\"\n                },\n                watchExpression: function(){\n                    return hostsFactory.lastUpdate;\n                }\n            };\n\n            $scope.dropped = [];\n\n            // update hosts\n            update();\n\n            servicesFactory.activate();\n            hostsFactory.activate();\n            poolsFactory.activate();\n        }\n\n        init();\n\n        $scope.$on(\"$destroy\", function(){\n            hostsFactory.deactivate();\n            servicesFactory.deactivate();\n            poolsFactory.deactivate();\n        });\n    }]);\n})();\n","// hostssFactory\n// - maintains a list of hosts and keeps it in sync with the backend.\n(function() {\n    'use strict';\n\n    // make angular share with everybody!\n    var resourcesFactory, $q, instancesFactory, utils;\n\n    angular.module('hostsFactory', []).\n    factory(\"hostsFactory\", [\"$rootScope\", \"$q\", \"resourcesFactory\", \"$interval\", \"instancesFactory\", \"baseFactory\", \"miscUtils\",\n    function($rootScope, q, _resourcesFactory, $interval, _instancesFactory, BaseFactory, _utils){\n        // share resourcesFactory throughout\n        resourcesFactory = _resourcesFactory;\n        instancesFactory = _instancesFactory;\n        $q = q;\n        utils = _utils;\n\n        var newFactory = new BaseFactory(Host, resourcesFactory.getHosts);\n\n        // alias some stuff for ease of use\n        newFactory.hostList = newFactory.objArr;\n        newFactory.hostMap = newFactory.objMap;\n\n        // wrap update to do some extra work\n        newFactory.update = utils.after(newFactory.update, function(){\n            // check running hosts and mark them as active\n            resourcesFactory.getRunningHosts()\n                .success((activeHosts, status) => {\n                    this.hostList.forEach(host => {\n                        if(activeHosts.indexOf(host.id) !== -1){\n                            host.active = true;\n                        } else {\n                            host.active = false;\n                        }\n                    });\n                });\n\n        }, newFactory);\n\n        return newFactory;\n    }]);\n\n    // Host object constructor\n    // takes a host object (backend host object)\n    // and wraps it with extra functionality and info\n    function Host(host){\n        this.active = false;\n        this.update(host);\n    }\n\n    Host.prototype = {\n        constructor: Host,\n\n        update: function(host){\n            if(host){\n               this.updateHostDef(host);\n            }\n        },\n\n        updateHostDef: function(host){\n            this.name = host.Name;\n            this.id = host.ID;\n            this.model = Object.freeze(host);\n        },\n\n        resourcesGood: function() {\n            return this.RAMAverage <= this.RAMLimitBytes;\n        },\n\n        RAMIsPercent: function(){\n            return this.RAMLimit.endsWith(\"%\");\n        }\n    };\n\n    Object.defineProperty(Host.prototype, \"instances\", {\n        get: function(){\n            return instancesFactory.getByHostId(this.id);\n        }\n    });\n\n    // RAMLimit may not be set yet, so use RAMCommitment\n    // NOTE: RAMCommitment is deprecated\n    Object.defineProperty(Host.prototype, \"RAMLimit\", {\n        get: function() {\n            if(!this.model){\n                return undefined;\n            }\n\n            if(this.model.RAMLimit){\n                return this.model.RAMLimit;\n            } else {\n                // RAMCommitment of 0 means 100% commitment\n                return this.model.RAMCommitment || \"100%\";\n            }\n        }\n    });\n\n    // get the RAMLimit in bytes\n    Object.defineProperty(Host.prototype, \"RAMLimitBytes\", {\n        get: function() {\n            // if percentange\n            if(this.RAMIsPercent()){\n                return +this.RAMLimit.slice(0,-1) * this.model.Memory * 0.01;\n            // if stringy value\n            } else {\n                return utils.parseEngineeringNotation(this.RAMLimit);\n            }\n        }\n    });\n\n    Object.defineProperty(Host.prototype, \"RAMLast\", {\n        get: function() {\n            var instances = this.instances;\n            var sum = 0;\n            for (var i = 0; i < instances.length; i++) {\n                sum += instances[i].resources.RAMLast;\n            }\n            return sum;\n        }\n    });\n\n    Object.defineProperty(Host.prototype, \"RAMMax\", {\n        get: function() {\n            var instances = this.instances;\n            var sum = 0;\n            for (var i = 0; i < instances.length; i++) {\n                sum += instances[i].resources.RAMMax;\n            }\n            return sum;\n        }\n    });\n\n    Object.defineProperty(Host.prototype, \"RAMAverage\", {\n        get: function() {\n            var instances = this.instances;\n            var sum = 0;\n            for (var i = 0; i < instances.length; i++) {\n                sum += instances[i].resources.RAMAverage;\n            }\n            return sum;\n        }\n    });\n\n})();\n","// instancesFactory\n// - maintains a list of instances and keeps it in sync with the backend.\n(function() {\n    'use strict';\n\n    var resourcesFactory, $q, serviceHealth, $notification, utils;\n\n    angular.module('instancesFactory', []).\n    factory(\"instancesFactory\", [\"$rootScope\", \"$q\", \"resourcesFactory\", \"$interval\", \"$serviceHealth\", \"baseFactory\", \"$notification\", \"miscUtils\",\n    function($rootScope, q, _resourcesFactory, $interval, _serviceHealth, BaseFactory, _notification, _utils){\n\n        // share resourcesFactory throughout\n        resourcesFactory = _resourcesFactory;\n        $q = q;\n        serviceHealth = _serviceHealth;\n        $notification = _notification;\n        utils = _utils;\n\n        var newFactory = new BaseFactory(Instance, resourcesFactory.getServiceInstances);\n\n        // alias some stuff for ease of use\n        newFactory.instanceArr = newFactory.objArr;\n        newFactory.instanceMap = newFactory.objMap;\n\n        angular.extend(newFactory, {\n            getByServiceId: function(id){\n                let results = [];\n                for(let i in this.instanceMap){\n                    if(this.instanceMap[i].model.ServiceID === id){\n                        results.push(this.instanceMap[i]);\n                    }\n                }\n                return results;\n            },\n\n            getByHostId: function(id){\n                let results = [];\n                for(let i in this.instanceMap){\n                    if(this.instanceMap[i].model.HostID === id){\n                        results.push(this.instanceMap[i]);\n                    }\n                }\n                return results;\n            },\n        });\n\n        newFactory.update = utils.after(newFactory.update, function(){\n            // call update on all children\n            newFactory.instanceArr.forEach(instance => instance.update());\n        }, newFactory);\n\n        return newFactory;\n    }]);\n\n    // Instance object constructor\n    // takes a instance object (backend instance object)\n    // and wraps it with extra functionality and info\n    function Instance(instance) {\n        this.active = false;\n\n        this.resources = {\n            RAMCommitment: 0,\n            RAMLast: 0,\n            RAMMax: 0,\n            RAMAverage: 0\n        };\n\n        this.healthChecks = {};\n        this.update(instance);\n    }\n\n    Instance.prototype = {\n        constructor: Instance,\n\n        update: function(instance) {\n            if(instance){\n               this.updateInstanceDef(instance);\n            }\n        },\n\n        updateInstanceDef: function(instance) {\n            this.name = instance.Name;\n            this.id = instance.ID;\n            this.model = Object.freeze(instance);\n            this.resources.RAMAverage = Math.max(0, instance.RAMAverage);\n            this.resources.RAMLast = Math.max(0, instance.RAMLast);\n            this.resources.RAMMax = Math.max(0, instance.RAMMax);\n            this.resources.RAMCommitment = utils.parseEngineeringNotation(instance.RAMCommitment);\n\n            var hc = {};\n            for(var name in instance.HealthChecks){\n                hc[name] = instance.HealthChecks[name].Status;\n            }\n            this.healthChecks = hc;\n        },\n\n        stop: function(){\n            resourcesFactory.killRunning(this.model.HostID, this.id)\n                .success(() => {\n                    this.update();\n                })\n                .error((data, status) => {\n                    $notification.create(\"Stop Instance failed\", data.Detail).error();\n                });\n        },\n\n        resourcesGood: function() {\n            return this.resources.RAMLast < this.resources.RAMCommitment;\n        }\n    };\n\n})();\n","/* HostsMapController\n * Neato treemap of hosts and resources\n */\n(function() {\n    'use strict';\n\n    controlplane.controller(\"HostsMapController\", [\"$scope\", \"$routeParams\", \"$location\", \"resourcesFactory\", \"authService\", \"miscUtils\", \"hostsFactory\", \"poolsFactory\",\n    function($scope, $routeParams, $location, resourcesFactory, authService, utils, hostsFactory, poolsFactory) {\n        // Ensure logged in\n        authService.checkLogin($scope);\n\n        $scope.name = \"hostsmap\";\n        $scope.params = $routeParams;\n        $scope.indent = utils.indentClass;\n        $scope.breadcrumbs = [\n            { label: 'breadcrumb_hosts', url: '/hosts' },\n            { label: 'breadcrumb_hosts_map', itemClass: 'active' }\n        ];\n\n        var width = 857;\n        var height = 567;\n\n        var cpuCores = function(h) {\n            return h.model.Cores;\n        };\n        var memoryCapacity = function(h) {\n            return h.model.Memory;\n        };\n        var poolBgColor = function(p) {\n            return p.isHost? null : color(p.Id);\n        };\n        var hostText = function(h) {\n            return h.isHost? h.name : null;\n        };\n\n        var color = d3.scale.category20c();\n        var treemap = d3.layout.treemap()\n            .size([width, height])\n            .value(memoryCapacity);\n\n        var position = function() {\n            this.style(\"left\", function(d) { return d.x + \"px\"; })\n                .style(\"top\", function(d) { return d.y + \"px\"; })\n                .style(\"width\", function(d) { return Math.max(0, d.dx - 1) + \"px\"; })\n                .style(\"height\", function(d) { return Math.max(0, d.dy - 1) + \"px\"; });\n        };\n\n        $scope.selectionButtonClass = function(id) {\n            var cls = 'btn btn-link nav-link';\n            if ($scope.treemapSelection === id) {\n                cls += ' active';\n            }\n            return cls;\n        };\n\n        $scope.selectByMemory = function() {\n            $scope.treemapSelection = 'memory';\n            selectNewValue(memoryCapacity);\n        };\n        $scope.selectByCores = function() {\n            $scope.treemapSelection = 'cpu';\n            selectNewValue(cpuCores);\n        };\n\n        var selectNewValue = function(valFunc) {\n            var node = d3.select(\"#hostmap\").\n                selectAll(\".node\").\n                data(treemap.value(valFunc).nodes);\n            node.enter().\n                append(\"div\").\n                attr(\"class\", \"node\");\n            node.transition().duration(1000).\n                call(position).\n                style(\"background\", poolBgColor).\n                text(hostText);\n            node.exit().remove();\n        };\n\n        var selectNewRoot = function(newroot) {\n            console.log('Selected %s', newroot.Id);\n            var node = d3.select(\"#hostmap\").\n                datum(newroot).\n                selectAll(\".node\").\n                data(treemap.nodes);\n\n            node.enter().\n                append(\"div\").\n                attr(\"class\", \"node\");\n\n            node.transition().duration(1000).\n                call(position).\n                style(\"background\", poolBgColor).\n                text(hostText);\n            node.exit().remove();\n        };\n\n        var hostsAddedToPools = false;\n        var wait = { pools: false, hosts: false };\n        var addHostsToPools = function() {\n            let root;\n\n            if (!wait.pools || !wait.hosts) {\n                return;\n            }\n            if (hostsAddedToPools) {\n                console.log('Already built');\n                return;\n            }\n\n            console.log('Preparing tree map');\n            hostsAddedToPools = true;\n            hostsFactory.hostList.forEach((host) => {\n                let pool = poolsFactory.get(host.model.PoolID);\n                // TODO - don't add stuff to pool and host objects!\n                if(!pool.children){\n                    pool.children = [];\n                }\n                pool.children.push(host);\n                host.isHost = true;\n            });\n\n            root = { Id: 'All Resource Pools', children: poolsFactory.poolList };\n            selectNewRoot(root);\n        };\n        $scope.treemapSelection = 'memory';\n        // Also ensure we have a list of hosts\n        poolsFactory.update()\n            .then(() => {\n                wait.pools = true;\n                addHostsToPools();\n            });\n        hostsFactory.update()\n            .then(() => {\n                wait.hosts = true;\n                addHostsToPools();\n            });\n    }]);\n})();\n","/* LanguageController\n * toggle selected language\n */\n(function() {\n    'use strict';\n\n    controlplane.controller(\"LanguageController\", [\"$scope\", \"$cookies\", \"$translate\", \"miscUtils\",\n    function($scope, $cookies, $translate, utils) {\n        $scope.name = 'language';\n        $scope.setUserLanguage = function() {\n            console.log('User clicked', $scope.user.language);\n            $cookies.Language = $scope.user.language;\n            utils.updateLanguage($scope, $cookies, $translate);\n        };\n        $scope.getLanguageClass = function(language) {\n            return ($scope.user.language === language)? 'btn btn-primary active' : 'btn btn-primary';\n        };\n    }]);\n})();\n","/* LoginController\n * login page\n */\n(function() {\n    'use strict';\n\n    controlplane.controller(\"LoginController\", [\"$scope\", \"$location\", \"$notification\", \"$translate\", \"authService\",\n    function($scope, $location, $notification, $translate, authService) {\n\n        if(navigator.userAgent.indexOf(\"Trident\") > -1 && navigator.userAgent.indexOf(\"MSIE 7.0\") > -1){\n            $notification.create(\"\", $translate.instant(\"compatibility_mode\"), $(\"#loginNotifications\")).warning(false);\n        }\n\n        enableLoginButton();\n\n        $scope.$emit(\"ready\");\n\n        // Makes XHR POST with contents of login form\n        $scope.login = function() {\n            disableLoginButton();\n\n            var creds = { \"Username\": $scope.username, \"Password\": $scope.password };\n            authService.login(creds, function(){\n                enableLoginButton();\n                // Redirect to main page\n                $location.path('/apps');\n            }, function(){\n                enableLoginButton();\n                // display fail message to user\n                $notification.create(\"\", $translate.instant(\"login_fail\"), $(\"#loginNotifications\")).error();\n            });\n        };\n\n        function enableLoginButton(){\n            $scope.loginButtonText = \"log_in\";\n            $scope.loginDisabled = false;\n        }\n\n        function disableLoginButton(){\n            $scope.loginButtonText = \"logging_in\";\n            $scope.loginDisabled = true;\n        }\n    }]);\n})();\n","/* LogController\n * displays kibaba log iframe\n */\n(function() {\n    'use strict';\n\n    controlplane.controller(\"LogController\", [\"$scope\", \"authService\",\n    function($scope, authService) {\n        authService.checkLogin($scope);\n        $scope.breadcrumbs = [\n            { label: 'breadcrumb_logs', itemClass: 'active' }\n        ];\n\n        $scope.$emit(\"ready\");\n\n        // force log iframe to fill screen\n        setInterval(function() {\n            var logsframe = document.getElementById(\"logsframe\");\n\n            if (logsframe && logsframe.contentWindow.document.body){\n                var h = logsframe.contentWindow.document.body.clientHeight;\n                logsframe.height = h + \"px\";\n            }\n\n        }, 100);\n    }]);\n})();\n","/* globals controlplane: true */\n/* NavbarController.js\n * Controls the navbar. what else were you thinking it would do?\n */\n(function(){\n    \"use strict\";\n\n    controlplane.controller(\"NavbarController\", [\"$scope\", \"$rootScope\", \"$cookies\", \"$location\", \"$route\", \"$translate\", \"$notification\", \"authService\", \"resourcesFactory\", \"$modalService\", \"miscUtils\",\n    function($scope, $rootScope, $cookies, $location, $route, $translate, $notification, authService, resourcesFactory, $modalService, utils){\n        $scope.name = 'navbar';\n        $scope.brand = { url: '#/apps', label: 'brand_cp' };\n\n        $rootScope.messages = $notification.getMessages();\n        $scope.$on('messageUpdate', function(){\n            $rootScope.messages = $notification.getMessages();\n            if(!$scope.$$phase) {\n                $scope.$apply();\n            }\n        });\n        $rootScope.markRead = function(message){\n            $notification.markRead(message);\n        };\n        $rootScope.clearMessages = function(){\n            $notification.clearAll();\n        };\n\n        $scope.navlinks = [\n            { url: '#/apps', label: 'nav_apps', sublinks: [ '#/services/', '#/servicesmap' ] },\n            { url: '#/pools', label: 'nav_pools', sublinks: [ '#/pools/' ] },\n            { url: '#/hosts', label: 'nav_hosts', sublinks: [ '#/hosts/', '#/hostsmap' ] },\n            { url: '#/logs', label: 'nav_logs', sublinks: [] },\n            { url: '#/backuprestore', label: 'nav_backuprestore', sublinks: [] }\n        ];\n\n        for (var i=0; i < $scope.navlinks.length; i++) {\n            var cls = '';\n            var currUrl = '#' + $location.path();\n            if ($scope.navlinks[i].url === currUrl) {\n                cls = 'active';\n            } else {\n                for (var j=0; j < $scope.navlinks[i].sublinks.length; j++) {\n                    if (currUrl.indexOf($scope.navlinks[i].sublinks[j]) === 0) {\n                        cls = 'active';\n                    }\n                }\n            }\n            $scope.navlinks[i].itemClass = cls;\n        }\n\n        $scope.subNavClick = function(crumb){\n            // if parent scope has defined a handler\n            // for sub nav click, use it\n            if($scope.$parent && $scope.$parent.subNavClick){\n                $scope.$parent.subNavClick(crumb);\n            } else {\n                $location.path(crumb.url);\n            }\n        };\n\n        // watch parent for new breadcrumbs\n        $scope.$watch(\"$parent.breadcrumbs\", function(){\n            $scope.breadcrumbs = $scope.$parent.breadcrumbs;\n        });\n\n        // Create a logout function\n        $scope.logout = function() {\n            authService.logout();\n        };\n\n        $scope.modalUserDetails = function() {\n            $modalService.create({\n                templateUrl: \"user-details.html\",\n                model: $scope,\n                title: \"title_user_details\",\n                bigModal: true\n            });\n        };\n\n        $scope.modalAbout = function() {\n            resourcesFactory.getVersion().success(function(data){\n                $scope.version = data;\n            });\n\n            $modalService.create({\n                templateUrl: \"about.html\",\n                model: $scope,\n                title: \"title_about\"\n            });\n        };\n\n        utils.updateLanguage($scope, $cookies, $translate);\n\n        var helpMap = {\n            '/static/partials/login.html': 'login.html',\n            '/static/partials/view-subservices.html': 'subservices.html',\n            '/static/partials/view-apps.html': 'apps.html',\n            '/static/partials/view-hosts.html': 'hosts.html',\n            '/static/partials/view-host-map.html': 'hostmap.html',\n            '/static/partials/view-service-map.html': 'servicemap.html',\n            '/static/partials/view-host-details.html': 'hostdetails.html',\n            '/static/partials/view-devmode.html': 'devmode.html'\n        };\n\n        $scope.help = {\n            url: function() {\n                return '/static/help/' + $scope.user.language + '/' + helpMap[$route.current.templateUrl];\n            }\n        };\n\n        $scope.cookies = $cookies;\n\n    }]);\n})();\n","/* global controlplane: true */\n\n/* PoolDetailsController\n * Displays details of a specific pool\n */\n(function() {\n    'use strict';\n\n    controlplane.controller(\"PoolDetailsController\", [\"$scope\", \"$routeParams\", \"$location\", \"resourcesFactory\", \"authService\", \"$modalService\", \"$translate\", \"$notification\", \"miscUtils\", \"hostsFactory\", \"poolsFactory\",\n    function($scope, $routeParams, $location, resourcesFactory, authService, $modalService, $translate, $notification, utils, hostsFactory, poolsFactory){\n        // Ensure logged in\n        authService.checkLogin($scope);\n\n        //\n        // Scope methods\n        //\n\n        // Pool view action - delete\n        $scope.clickRemoveVirtualIp = function(ip) {\n            $modalService.create({\n                template: $translate.instant(\"confirm_remove_virtual_ip\") + \" <strong>\"+ ip.IP +\"</strong>\",\n                model: $scope,\n                title: \"remove_virtual_ip\",\n                actions: [\n                    {\n                        role: \"cancel\"\n                    },{\n                        role: \"ok\",\n                        label: \"remove_virtual_ip\",\n                        classes: \"btn-danger\",\n                        action: function(){\n                            resourcesFactory.removePoolVirtualIP(ip.PoolID, ip.IP)\n                                .success(function(data) {\n                                    $notification.create(\"Removed Virtual IP\", ip.IP).success();\n                                    poolsFactory.update();\n                                })\n                                .error(data => {\n                                    $notification.create(\"Remove Virtual IP failed\", data.Detail).error();\n                                });\n                            this.close();\n                        }\n                    }\n                ]\n            });\n        };\n\n        // Add Virtual Ip Modal - Add button action\n        $scope.addVirtualIp = function(pool) {\n            var ip = $scope.add_virtual_ip;\n\n            return resourcesFactory.addPoolVirtualIP(ip.PoolID, ip.IP, ip.Netmask, ip.BindInterface)\n                .success(function(data, status){\n                    $scope.add_virtual_ip = {};\n                    $notification.create(\"Added new pool virtual ip\", ip).success();\n                    poolsFactory.update();\n                })\n                .error((data, status) => {\n                    $notification.create(\"Add Virtual IP failed\", data.Detail).error();\n                });\n\n        };\n\n        // Open the virtual ip modal\n        $scope.modalAddVirtualIp = function(pool) {\n            $scope.add_virtual_ip = {'PoolID': pool.id, 'IP':\"\", 'Netmask':\"\", 'BindInterface':\"\"};\n            $modalService.create({\n                templateUrl: \"pool-add-virtualip.html\",\n                model: $scope,\n                title: \"add_virtual_ip\",\n                actions: [\n                    {\n                        role: \"cancel\",\n                        action: function(){\n                            $scope.add_virtual_ip = {};\n                            this.close();\n                        }\n                    },{\n                        role: \"ok\",\n                        label: \"add_virtual_ip\",\n                        action: function(){\n                            if(this.validate()){\n                                // disable ok button, and store the re-enable function\n                                var enableSubmit = this.disableSubmitButton();\n\n                                $scope.addVirtualIp($scope.add_virtual_ip)\n                                    .success(function(data, status){\n                                        this.close();\n                                    }.bind(this))\n                                    .error(function(data, status){\n                                       this.createNotification(\"Adding pool virtual ip failed\", data.Detail).error();\n                                       enableSubmit();\n                                    }.bind(this));\n                            }\n                        }\n                    }\n                ]\n            });\n        };\n\n        // route host clicks to host page\n        $scope.clickHost = function(hostId) {\n            resourcesFactory.routeToHost(hostId);\n        };\n\n        function init(){\n\n            $scope.name = \"pooldetails\";\n            $scope.params = $routeParams;\n\n            $scope.add_virtual_ip = {};\n\n            $scope.breadcrumbs = [\n                { label: 'breadcrumb_pools', url: '/pools' }\n            ];\n\n            // start polling\n            poolsFactory.activate();\n\n            // Ensure we have a list of pools\n            poolsFactory.update()\n                .then(() => {\n                    $scope.currentPool = poolsFactory.get($scope.params.poolID);\n                    if ($scope.currentPool) {\n                        $scope.breadcrumbs.push({label: $scope.currentPool.id, itemClass: 'active'});\n\n                        // start polling\n                        hostsFactory.activate();\n\n                        hostsFactory.update()\n                            .then(() => {\n                               // reduce the list to hosts associated with this pool\n                                $scope.hosts = hostsFactory.hostList.filter(function(host){\n                                    return host.model.PoolID === $scope.currentPool.id;\n                                });\n\n                            });\n                    }\n\n                });\n\n            $scope.virtualIPsTable = {\n                sorting: {\n                    IP: \"asc\"\n                },\n                watchExpression: function(){\n                    // if poolsFactory updates, update view\n                    return poolsFactory.lastUpdate;\n                }\n            };\n\n            $scope.hostsTable = {\n                sorting: {\n                    name: \"asc\"\n                },\n                watchExpression: function(){\n                    return hostsFactory.lastUpdate;\n                }\n            };\n        }\n\n        init();\n\n        $scope.$on(\"$destroy\", function(){\n            poolsFactory.deactivate();\n            hostsFactory.deactivate();\n        });\n    }]);\n})();\n","/* global controlplane: true */\n\n/* PoolsControl\n * Displays list of pools\n */\n(function() {\n    'use strict';\n\n    controlplane.controller(\"PoolsController\", [\"$scope\", \"$routeParams\", \"$location\", \"$filter\", \"$timeout\", \"resourcesFactory\", \"authService\", \"$modalService\", \"$translate\", \"$notification\", \"miscUtils\", \"poolsFactory\",\n    function($scope, $routeParams, $location, $filter, $timeout, resourcesFactory, authService, $modalService, $translate, $notification, utils, poolsFactory){\n        // Ensure logged in\n        authService.checkLogin($scope);\n\n        $scope.click_pool = function(id) {\n            resourcesFactory.routeToPool(id);\n        };\n\n        // Function to remove a pool\n        $scope.clickRemovePool = function(poolID) {\n            if ($scope.isDefaultPool(poolID)) {\n              return;\n            }\n            $modalService.create({\n                template: $translate.instant(\"confirm_remove_pool\") + \"<strong>\"+ poolID +\"</strong>\",\n                model: $scope,\n                title: \"remove_pool\",\n                actions: [\n                    {\n                        role: \"cancel\"\n                    },{\n                        role: \"ok\",\n                        label: \"remove_pool\",\n                        classes: \"btn-danger\",\n                        action: function(){\n                            resourcesFactory.removePool(poolID)\n                                .success(function(data) {\n                                    $notification.create(\"Removed Pool\", poolID).success();\n                                    poolsFactory.update();\n                                })\n                                .error(data => {\n                                    $notification.create(\"Remove Pool failed\", data.Detail).error();\n                                });\n\n                            this.close();\n                        }\n                    }\n                ]\n            });\n        };\n\n        // Function for opening add pool modal\n        $scope.modalAddPool = function() {\n            $scope.newPool = {};\n            $modalService.create({\n                templateUrl: \"add-pool.html\",\n                model: $scope,\n                title: \"add_pool\",\n                actions: [\n                    {\n                        role: \"cancel\",\n                        action: function(){\n                            $scope.newPool = {};\n                            this.close();\n                        }\n                    },{\n                        role: \"ok\",\n                        label: \"add_pool\",\n                        action: function(){\n                            if(this.validate()){\n                                // disable ok button, and store the re-enable function\n                                var enableSubmit = this.disableSubmitButton();\n\n                                $scope.add_pool()\n                                    .success(function(data, status){\n                                        $notification.create(\"Added new Pool\", data.Detail).success();\n                                        this.close();\n                                    }.bind(this))\n                                    .error(function(data, status){\n                                        this.createNotification(\"Adding pool failed\", data.Detail).error();\n                                        enableSubmit();\n                                    }.bind(this));\n                            }\n                        }\n                    }\n                ]\n            });\n        };\n\n        // Function for adding new pools - through modal\n        $scope.add_pool = function() {\n            return resourcesFactory.addPool($scope.newPool)\n                .success(function(data){\n                    poolsFactory.update();\n                    // Reset for another add\n                    $scope.newPool = {};\n                });\n        };\n\n        $scope.isDefaultPool = function(poolID) {\n          return poolID === \"default\";\n        };\n\n        function init(){\n            $scope.name = \"pools\";\n            $scope.params = $routeParams;\n            $scope.newPool = {};\n\n            $scope.breadcrumbs = [\n                { label: 'breadcrumb_pools', itemClass: 'active' }\n            ];\n\n            // start polling\n            poolsFactory.activate();\n\n            $scope.pools = {};\n            poolsFactory.update()\n                .then(() => {\n                    $scope.pools = poolsFactory.poolMap;\n                });\n\n            $scope.poolsTable = {\n                sorting: {\n                    id: \"asc\"\n                },\n                watchExpression: function(){\n                    // if poolsFactory updates, update view\n                    return poolsFactory.lastUpdate;\n                }\n            };\n        }\n\n        // kick off controller\n        init();\n\n        $scope.$on(\"$destroy\", function(){\n            poolsFactory.deactivate();\n        });\n\n    }]);\n})();\n","// poolsFactory\n// - maintains a list of pools and keeps it in sync with the backend.\n(function() {\n    'use strict';\n\n    var resourcesFactory, $q;\n\n    angular.module('poolsFactory', []).\n    factory(\"poolsFactory\", [\"$rootScope\", \"$q\", \"resourcesFactory\", \"$interval\", \"baseFactory\",\n    function($rootScope, q, _resourcesFactory, $interval, BaseFactory){\n\n        // share resourcesFactory throughout\n        resourcesFactory = _resourcesFactory;\n        $q = q;\n\n        var newFactory = new BaseFactory(Pool, resourcesFactory.getPools);\n\n        // alias some stuff for ease of use\n        newFactory.poolList = newFactory.objArr;\n        newFactory.poolMap = newFactory.objMap;\n\n        return newFactory;\n    }]);\n\n    // Pool object constructor\n    // takes a pool object (backend pool object)\n    // and wraps it with extra functionality and info\n    function Pool(pool){\n        this.update(pool);\n    }\n\n    Pool.prototype = {\n        constructor: Pool,\n\n        update: function(pool){\n            if(pool){\n               this.updatePoolDef(pool);\n            }\n        },\n\n        updatePoolDef: function(pool){\n            this.name = pool.Name;\n            this.id = pool.ID;\n            this.model = Object.freeze(pool);\n        }\n    };\n\n})();\n","/* globals controlplane: true */\n\n/* AppsController\n * Displays top level apps\n */\n(function() {\n    'use strict';\n\n    controlplane.controller(\"AppsController\", [\n        \"$scope\", \"$routeParams\", \"$location\",\n        \"$notification\", \"resourcesFactory\", \"authService\",\n        \"$modalService\", \"$translate\", \"$timeout\",\n        \"$cookies\", \"servicesFactory\", \"miscUtils\",\n        \"ngTableParams\", \"$filter\", \"poolsFactory\",\n    function($scope, $routeParams, $location,\n    $notification, resourcesFactory, authService,\n    $modalService, $translate, $timeout,\n    $cookies, servicesFactory, utils,\n    NgTableParams, $filter, poolsFactory){\n\n        // Ensure logged in\n        authService.checkLogin($scope);\n\n        // alias hostname instead of using localhost or IP\n        $scope.defaultHostAlias = $location.host();\n\n        // redirect to specific service details\n        $scope.routeToService = function(id) {\n            resourcesFactory.routeToService(id);\n        };\n\n        // redirect to specific pool\n        $scope.routeToPool = function(id) {\n            resourcesFactory.routeToPool(id);\n        };\n\n        $scope.modal_deployWizard = function() {\n            // the modal occasionally won't show on page load, so we use a timeout to get around that.\n            $timeout(function(){\n                $('#addApp').modal('show');\n\n                // don't auto-show this wizard again\n                // NOTE: $cookies can only deal with string values\n                $cookies.autoRunWizardHasRun = \"true\";\n            });\n        };\n\n        $scope.modal_addTemplate = function() {\n            $modalService.create({\n                templateUrl: \"add-template.html\",\n                model: $scope,\n                title: \"template_add\",\n                actions: [\n                    {\n                        role: \"cancel\",\n                        action: function(){\n                            $scope.newHost = {};\n                            this.close();\n                        }\n                    },{\n                        role: \"ok\",\n                        label: \"template_add\",\n                        action: function(){\n                            if(this.validate()){\n                                var data = new FormData();\n\n                                $.each($(\"#new_template_filename\")[0].files, function(key, value){\n                                    data.append(\"tpl\", value);\n                                });\n\n                                // disable ok button, and store the re-enable function\n                                var enableSubmit = this.disableSubmitButton();\n\n                                resourcesFactory.addAppTemplate(data)\n                                    .success(function(data){\n                                        $notification.create(\"Added template\", data.Detail).success();\n                                        refreshTemplates();\n                                        this.close();\n                                    }.bind(this))\n                                    .error(function(data){\n                                        this.createNotification(\"Adding template failed\", data.Detail).error();\n                                        enableSubmit();\n                                    }.bind(this));\n                            }\n                        }\n                    }\n                ]\n            });\n        };\n\n        // aggregate vhosts for a specified service, but\n        // only if the service has changed since last request\n        $scope.aggregateVHosts = utils.memoize(function(service) {\n            var endPoints = [];\n\n            service.model.Endpoints.forEach(endpoint => {\n                if(endpoint.VHostList){\n                    endpoint.VHostList.forEach(vHost => endPoints.push(vHost));\n                }\n                if(endpoint.PortList){\n                    endpoint.PortList.forEach(port => endPoints.push(port));\n                }\n            });\n\n            endPoints.sort();\n\n            return endPoints;\n        }, function(service){\n            return service.id + service.model.DatabaseVersion;\n        });\n\n        // given an endpoint, return a url to it\n        $scope.publicEndpointURL = function(publicEndpoint) {\n            if (\"Name\" in publicEndpoint){\n                var port = $location.port() === \"\" ? \"\" : \":\"+$location.port();\n                var host = publicEndpoint.Name.indexOf('.') === -1 ? publicEndpoint.Name + \".\" + $scope.defaultHostAlias : publicEndpoint.Name;\n                return $location.protocol() + \"://\" + host + port;\n            } else if (\"PortNumber\" in publicEndpoint){\n                // Port public endpoint port listeners are always on http\n                return \"http://\" + $scope.defaultHostAlias + publicEndpoint.PortAddr;\n            }\n        };\n\n        $scope.modal_removeService = function(service) {\n            $modalService.create({\n                template: $translate.instant(\"warning_remove_service\"),\n                model: $scope,\n                title: \"remove_service\",\n                actions: [\n                    {\n                        role: \"cancel\"\n                    },{\n                        role: \"ok\",\n                        label: \"remove_service\",\n                        classes: \"btn-danger submit\",\n                        action: function(){\n                            if(this.validate()){\n                                this.disableSubmitButton();\n\n                                removeService(service)\n                                    .success(() => {\n                                        $notification.create(\"Removed App\", service.name).success();\n                                        this.close();\n                                    })\n                                    .error((data, status) => {\n                                        $notification.create(\"Remove App failed\", data.Detail).error();\n                                        this.close();\n                                    });\n                            }\n                        }\n                    }\n                ]\n            });\n        };\n\n        $scope.startService = function(service){\n            $scope.modal_startStopService(service, \"start\");\n        };\n        $scope.stopService = function(service){\n            $scope.modal_startStopService(service, \"stop\");\n        };\n        $scope.modal_startStopService = function(service, status) {\n            var displayStatus = utils.capitalizeFirst(status);\n\n            $modalService.create({\n                template: $translate.instant(\"confirm_\"+ status +\"_app\"),\n                model: $scope,\n                title: displayStatus +\" Services\",\n                actions: [\n                    {\n                        role: \"cancel\"\n                    },{\n                        role: \"ok\",\n                        label: displayStatus +\" Services\",\n                        action: function(){\n                            service[status]();\n                            this.close();\n                        }\n                    }\n                ]\n            });\n        };\n\n        // sets a service to start, stop or restart state\n        $scope.setServiceState = function(service, state, skipChildren){\n            service[state](skipChildren).error(function(data, status){\n                $notification.create(\"Unable to \" + state + \" service\", data.Detail).error();\n            });\n        };\n\n        // filters to be used when counting how many descendent\n        // services will be affected by a state change\n        var serviceStateChangeFilters = {\n            // only stopped services will be started\n            \"start\": service => service.desiredState === 0,\n            // only started services will be stopped\n            \"stop\": service => service.desiredState === 1,\n            // only started services will be restarted\n            \"restart\": service => service.desiredState === 1\n        };\n\n        // clicks to a service's start, stop, or restart\n        // button should first determine if the service has\n        // children and ask the user to choose to start all\n        // children or only the top service\n        $scope.clickRunning = function(service, state){\n            var filterFn = serviceStateChangeFilters[state];\n            var childCount = utils.countTheKids(service, filterFn);\n\n            // if the service has affected children, check if the user\n            // wants to start just the service, or the service and children\n            if(childCount > 0){\n                $scope.modal_confirmSetServiceState(service, state, childCount);\n\n            // if no children, just start the service\n            } else {\n                $scope.setServiceState(service, state);\n            }\n            servicesFactory.updateHealth();\n        };\n\n        // verifies if use wants to start parent service, or parent\n        // and all children\n        $scope.modal_confirmSetServiceState = function(service, state, childCount){\n            $modalService.create({\n                template: [\"<h4>\"+ $translate.instant(\"choose_services_\"+ state) +\"</h4><ul>\",\n                    \"<li>\"+ $translate.instant(state +\"_service_name\", {name: \"<strong>\"+service.name+\"</strong>\"}) +\"</li>\",\n                    \"<li>\"+ $translate.instant(state +\"_service_name_and_children\", {name: \"<strong>\"+service.name+\"</strong>\", count: \"<strong>\"+childCount+\"</strong>\"}) +\"</li></ul>\"\n                ].join(\"\"),\n                model: $scope,\n                title: $translate.instant(state +\"_service\"),\n                actions: [\n                    {\n                        role: \"cancel\"\n                    },{\n                        role: \"ok\",\n                        classes: \" \",\n                        label: $translate.instant(state +\"_service\"),\n                        action: function(){\n                            // the arg here explicitly prevents child services\n                            // from being started\n                            $scope.setServiceState(service, state, true);\n                            this.close();\n                        }\n                    },{\n                        role: \"ok\",\n                        label: $translate.instant(state +\"_service_and_children\", {count: childCount}),\n                        action: function(){\n                            $scope.setServiceState(service, state);\n                            this.close();\n                        }\n                    }\n                ]\n            });\n        };\n\n        $scope.modal_deleteTemplate = function(templateID){\n            $modalService.create({\n                template: $translate.instant(\"template_remove_confirm\") + \"<strong>\"+ templateID +\"</strong>\",\n                model: $scope,\n                title: \"template_remove\",\n                actions: [\n                    {\n                        role: \"cancel\"\n                    },{\n                        role: \"ok\",\n                        label: \"template_remove\",\n                        classes: \"btn-danger\",\n                        action: function(){\n                            deleteTemplate(templateID)\n                                .success(() => {\n                                    $notification.create(\"Removed Template\", templateID).success();\n                                    this.close();\n                                })\n                                .error((data, status) => {\n                                    $notification.create(\"Remove Template failed\", data.Detail).error();\n                                });\n                        }\n                    }\n                ]\n            });\n        };\n\n\n        /*\n         * PRIVATE FUNCTIONS\n         */\n        function refreshTemplates(){\n            resourcesFactory.getAppTemplates().success(function(templates) {\n                $scope.templates.data = utils.mapToArr(templates);\n            });\n        }\n\n        // poll for apps that are being deployed\n        $scope.deployingServices = [];\n        var lastPollResults = 0;\n        function getDeploying(){\n            resourcesFactory.getDeployingTemplates().success(function(data) {\n                if(data){\n                    $scope.deployingServices = data;\n                }\n\n                //if we have fewer results than last poll, we need to refresh our table\n                //TODO - better checking for deploying apps\n                if(lastPollResults > $scope.deployingServices.length){\n                    servicesFactory.update();\n                }\n                lastPollResults = $scope.deployingServices.length;\n            });\n        }\n\n        function removeService(service) {\n            return resourcesFactory.removeService(service.id)\n                .success(function(){\n                    // NOTE: this is here because services are\n                    // incrementally updated, which makes it impossible\n                    // to determine if a service has been removed\n                    // TODO - once the backend notifies on deleted\n                    // services, this should be removed\n                    // FIXME - should not modify servicesFactory's\n                    // objects!\n                    for(var i = 0; i < $scope.apps.length; i++){\n                        // find the removed service and remove it\n                        if($scope.apps[i].id === service.id){\n                            $scope.apps.splice(i, 1);\n                            return;\n                        }\n                    }\n                });\n        }\n\n        function deleteTemplate(templateID){\n            return resourcesFactory.removeAppTemplate(templateID)\n                .success(refreshTemplates);\n        }\n\n        // init stuff for this controller\n        function init(){\n            if(utils.needsHostAlias($location.host())){\n                resourcesFactory.getHostAlias().success(function(data) {\n                    $scope.defaultHostAlias = data.hostalias;\n                });\n            }\n\n            // configure tables\n            // TODO - move table config to view/directive\n            $scope.breadcrumbs = [\n                { label: 'breadcrumb_deployed', itemClass: 'active' }\n            ];\n\n            $scope.servicesTable = {\n                sorting: {\n                    name: \"asc\"\n                },\n                getData: function(data, params) {\n                    // use built-in angular filter\n                    var orderedData = params.sorting() ?\n                        $filter('orderBy')(data, params.orderBy()) :\n                        data;\n\n                    if(!orderedData){\n                        return;\n                    }\n\n                    // mark any deploying services so they can be treated differently\n                    orderedData.forEach(function(service){\n                        service.deploying = false;\n                        $scope.deployingServices.forEach(function(deploying){\n                            if(service.model.DeploymentID === deploying.DeploymentID){\n                                service.deploying = true;\n                            }\n                        });\n                    });\n\n                    return orderedData;\n                },\n                watchExpression: function(){\n                    // TODO - check $scope.deployingServices as well\n                    return servicesFactory.lastUpdate;\n                }\n            };\n\n            $scope.templates = { data: [] };\n            // table config\n            $scope.templatesTable = {\n                sorting: {\n                    Name: \"asc\"\n                }\n            };\n\n            // Get a list of templates\n            refreshTemplates();\n\n            // check for deploying apps\n            getDeploying();\n\n            // start polling for apps\n            servicesFactory.activate();\n            servicesFactory.update().then(function(){\n                // locally bind top level service list\n                $scope.apps = servicesFactory.serviceTree;\n\n                // if only isvcs are deployed, and this is the first time\n                // running deploy wizard, show the deploy apps modal\n                if(!$cookies.autoRunWizardHasRun && $scope.apps.length === 1){\n                    $scope.modal_deployWizard();\n                }\n            });\n\n            // deploy wizard needs updated pools\n            poolsFactory.activate();\n\n            //register polls\n            resourcesFactory.registerPoll(\"deployingApps\", getDeploying, 3000);\n            resourcesFactory.registerPoll(\"templates\", refreshTemplates, 5000);\n\n            //unregister polls on destroy\n            $scope.$on(\"$destroy\", function(){\n                resourcesFactory.unregisterAllPolls();\n            });\n        }\n\n        // kick this controller off\n        init();\n\n        $scope.$on(\"$destroy\", function(){\n            resourcesFactory.unregisterAllPolls();\n            servicesFactory.deactivate();\n            poolsFactory.deactivate();\n        });\n    }]);\n})();\n","/* globals controlplane: true */\n\n/* ServiceDetailsController\n * Displays details of a specific service\n */\n(function() {\n    'use strict';\n\n    controlplane.controller(\"ServiceDetailsController\",\n    [\"$scope\", \"$q\", \"$routeParams\", \"$location\", \"resourcesFactory\",\n    \"authService\", \"$modalService\", \"$translate\", \"$notification\",\n    \"$timeout\", \"servicesFactory\", \"miscUtils\", \"hostsFactory\",\n    \"poolsFactory\", \"CCUIState\", \"$cookies\",\n    function($scope, $q, $routeParams, $location, resourcesFactory,\n    authService, $modalService, $translate, $notification,\n    $timeout, servicesFactory, utils, hostsFactory,\n    poolsFactory, CCUIState, $cookies){\n\n        // Ensure logged in\n        authService.checkLogin($scope);\n        $scope.resourcesFactory = resourcesFactory;\n        $scope.hostsFactory = hostsFactory;\n\n        $scope.defaultHostAlias = $location.host();\n        if(utils.needsHostAlias($location.host())){\n            resourcesFactory.getHostAlias().success(function(data) {\n                $scope.defaultHostAlias = data.hostalias;\n            });\n        }\n\n        //add Public Endpoint data\n        $scope.publicEndpoints = { add: {} };\n\n        //add service endpoint data\n        $scope.exportedServiceEndpoints = { };\n\n        $scope.click_pool = function(id) {\n            resourcesFactory.routeToPool(id);\n        };\n\n        $scope.click_host = function(id) {\n            resourcesFactory.routeToHost(id);\n        };\n\n\n        $scope.modalAddPublicEndpoint = function() {\n            // default public endpoint options\n            $scope.publicEndpoints.add = {\n                type: \"vhost\",\n                app_ep: $scope.exportedServiceEndpoints.data[0],\n                name: \"\",\n                port: \"\"\n            };\n\n            // returns an error string if newPublicEndpoint's vhost is invalid\n            var validateVHost = function(newPublicEndpoint){\n                var name = newPublicEndpoint.name;\n\n                // if no port\n                if(!name || !name.length){\n                    return \"Missing Name\";\n                }\n\n                // if name already exists\n                for (var i in $scope.publicEndpoints.data) {\n                    if (name === $scope.publicEndpoints.data[i].Name) {\n                        return \"Name already exists: \"+ newPublicEndpoint.name;\n                    }\n                }\n\n                // if invalid characters\n                var re = /^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\\-]*[A-Za-z0-9])$/;\n                if(!re.test(name)){\n                    return $translate.instant(\"vhost_name_invalid\") + \" \" + newPublicEndpoint.name;\n                }\n            };\n\n            // returns an error string if newPublicEndpoint's port is invalid\n            var validatePort = function(newPublicEndpoint){\n\n                var port = newPublicEndpoint.port;\n\n                // if no port\n                if(!port || !port.length){\n                    return \"Missing port\";\n                }\n\n                // if port already exists\n                for (var i in $scope.publicEndpoints.data) {\n                    if (+port === $scope.publicEndpoints.data[i].PortAddr) {\n                       return \"Port number already in use: \"+ newPublicEndpoint.port;\n                    }\n                }\n\n                if(+port < 1024){\n                    return \"Port must be greater than 1024\";\n                }\n                if(+port > 65536){\n                    return \"Port must be less than 65536\";\n                }\n\n                // TODO - add more reserved ports\n                var reservedPorts = [5000, 8080];\n                if(reservedPorts.indexOf(+port) !== -1){\n                    return \"Port \"+ port +\" is reserved\";\n                }\n            };\n\n            $modalService.create({\n                templateUrl: \"add-public-endpoint.html\",\n                model: $scope,\n                title: \"add_public_endpoint\",\n                actions: [\n                    {\n                        role: \"cancel\",\n                        action: function(){\n                            this.close();\n                        }\n                    },{\n                        role: \"ok\",\n                        label: \"add_public_endpoint_confirm\",\n                        action: function(){\n                            var newPublicEndpoint = $scope.publicEndpoints.add;\n\n                            if(this.validate(newPublicEndpoint)){\n                                // disable ok button, and store the re-enable function\n                                var enableSubmit = this.disableSubmitButton();\n\n                                $scope.addPublicEndpoint(newPublicEndpoint)\n                                    .success(function(data, status){\n                                        $notification.create(\"Added public endpoint\").success();\n                                        this.close();\n                                    }.bind(this))\n                                    .error(function(data, status){\n                                        this.createNotification(\"Unable to add public endpoint\", data.Detail).error();\n                                        enableSubmit();\n                                    }.bind(this));\n\n                            }\n                        }\n                    }\n                ],\n\n                validate: function(newPublicEndpoint){\n                    // if no service endpoint selected\n                    if(!newPublicEndpoint.app_ep){\n                        this.createNotification(\"Unable to add Public Endpoint\", \"No service endpoint selected\").error();\n                        return false;\n                    }\n\n\n                    // perform type specific validation\n                    if(newPublicEndpoint.type === \"vhost\"){\n                        var err = validateVHost(newPublicEndpoint);\n                        if(err){\n                            this.createNotification(\"Unable to add Public Endpoint\", err).error();\n                        } else {\n                            return true;\n                        }\n                    } else if(newPublicEndpoint.type === \"port\"){\n                        var err = validatePort(newPublicEndpoint);\n                        if(err){\n                            this.createNotification(\"Unable to add Public Endpoint\", err).error();\n                            return false;\n                        } else {\n                            return true;\n                        }\n                    }\n                },\n            });\n        };\n\n\n        $scope.addPublicEndpoint = function(newPublicEndpoint) {\n            if(newPublicEndpoint.type === \"vhost\"){\n                var name = newPublicEndpoint.name;\n                var serviceId = newPublicEndpoint.app_ep.ApplicationId;\n                var serviceEndpoint = newPublicEndpoint.app_ep.ServiceEndpoint;\n                return resourcesFactory.addVHost(serviceId, serviceEndpoint, name);\n            } else if(newPublicEndpoint.type === \"port\"){\n                var port = newPublicEndpoint.port;\n                var serviceId = newPublicEndpoint.app_ep.ApplicationId;\n                var serviceEndpoint = newPublicEndpoint.app_ep.ServiceEndpoint;\n                return resourcesFactory.addPort(serviceId, serviceEndpoint, port);\n            }\n        };\n\n        // modalAssignIP opens a modal view to assign an ip address to a service\n        $scope.modalAssignIP = function(ip, poolID) {\n          $scope.ips.assign = {'ip':ip, 'value':null};\n          resourcesFactory.getPoolIPs(poolID)\n              .success(function(data) {\n                var options= [{'Value':'Automatic', 'IPAddr':''}];\n\n                var i, IPAddr, value;\n                //host ips\n                if (data && data.HostIPs) {\n                  for(i = 0; i < data.HostIPs.length; ++i) {\n                    IPAddr = data.HostIPs[i].IPAddress;\n                    value = 'Host: ' + IPAddr + ' - ' + data.HostIPs[i].InterfaceName;\n                    options.push({'Value': value, 'IPAddr':IPAddr});\n                    // set the default value to the currently assigned value\n                    if ($scope.ips.assign.ip.IPAddr === IPAddr) {\n                      $scope.ips.assign.value = options[ options.length-1];\n                    }\n                  }\n                }\n\n                //virtual ips\n                if (data && data.VirtualIPs) {\n                  for(i = 0; i < data.VirtualIPs.length; ++i) {\n                    IPAddr = data.VirtualIPs[i].IP;\n                    value =  \"Virtual IP: \" + IPAddr;\n                    options.push({'Value': value, 'IPAddr':IPAddr});\n                    // set the default value to the currently assigned value\n                    if ($scope.ips.assign.ip.IPAddr === IPAddr) {\n                      $scope.ips.assign.value = options[ options.length-1];\n                    }\n                  }\n                }\n\n                //default to automatic\n                if(!$scope.ips.assign.value) {\n                  $scope.ips.assign.value = options[0];\n\n                }\n                $scope.ips.assign.options = options;\n\n                $modalService.create({\n                    templateUrl: \"assign-ip.html\",\n                    model: $scope,\n                    title: \"assign_ip\",\n                    actions: [\n                        {\n                            role: \"cancel\"\n                        },{\n                            role: \"ok\",\n                            label: \"assign_ip\",\n                            action: function(){\n                                if(this.validate()){\n                                    // disable ok button, and store the re-enable function\n                                    var enableSubmit = this.disableSubmitButton();\n\n                                    $scope.assignIP()\n                                        .success(function(data, status){\n                                            $notification.create(\"Added IP\", data.Detail).success();\n                                            this.close();\n                                        }.bind(this))\n                                        .error(function(data, status){\n                                            this.createNotification(\"Unable to Assign IP\", data.Detail).error();\n                                            enableSubmit();\n                                        }.bind(this));\n                                }\n                            }\n                        }\n                    ]\n                });\n              })\n              .error((data, status) => {\n                $notification.create(\"Unable to retrieve IPs\", data.Detail).error();\n              });\n        };\n\n        $scope.anyServicesExported = function(service) {\n            if(service){\n                for (var i in service.Endpoints) {\n                    if (service.Endpoints[i].Purpose === \"export\") {\n                        return true;\n                    }\n                }\n                for (var j in service.children) {\n                    if ($scope.anyServicesExported(service.children[j])) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        };\n\n\n        $scope.assignIP = function() {\n            var serviceID = $scope.ips.assign.ip.ServiceID;\n            var IP = $scope.ips.assign.value.IPAddr;\n            return resourcesFactory.assignIP(serviceID, IP)\n                .success(function(data, status){\n                    // HACK: update(true) forces a full update to\n                    // work around issue https://jira.zenoss.com/browse/CC-939\n                    servicesFactory.update(true);\n                });\n        };\n\n\n        $scope.publicEndpointURL = function(publicEndpoint) {\n            if(publicEndpoint.type === \"vhost\"){\n                var port = location.port === \"\" ? \"\" : \":\"+location.port;\n                var host = publicEndpoint.Name.indexOf('.') === -1 ? publicEndpoint.Name + \".\" + $scope.defaultHostAlias : publicEndpoint.Name;\n                return location.protocol + \"//\" + host + port;\n            } else if(publicEndpoint.type === \"port\"){\n                if(publicEndpoint.PortAddr.startsWith(\":\")){\n                    var host = $scope.defaultHostAlias;\n                    // Port public endpoint port listeners are always on http\n                    return \"http://\" + host + publicEndpoint.PortAddr;\n                }else{\n                    return \"http://\" + publicEndpoint.PortAddr;\n                }\n            }\n        };\n\n        $scope.indent = function(depth){\n            return {'padding-left': (15*depth) + \"px\"};\n        };\n\n        // sets a service to start, stop or restart state\n        $scope.setServiceState = function(service, state, skipChildren){\n            service[state](skipChildren).error(function(data, status){\n                $notification.create(\"Unable to \" + state + \" service\", data.Detail).error();\n            });\n        };\n\n        // filters to be used when counting how many descendent\n        // services will be affected by a state change\n        var serviceStateChangeFilters = {\n            // only stopped services will be started\n            \"start\": service => service.desiredState === 0,\n            // only started services will be stopped\n            \"stop\": service => service.desiredState === 1,\n            // only started services will be restarted\n            \"restart\": service => service.desiredState === 1\n        };\n\n        // clicks to a service's start, stop, or restart\n        // button should first determine if the service has\n        // children and ask the user to choose to start all\n        // children or only the top service\n        $scope.clickRunning = function(service, state){\n            var filterFn = serviceStateChangeFilters[state];\n            var childCount = utils.countTheKids(service, filterFn);\n\n            // if the service has affected children, check if the user\n            // wants to start just the service, or the service and children\n            if(childCount > 0){\n                $scope.modal_confirmSetServiceState(service, state, childCount);\n\n            // if no children, just start the service\n            } else {\n                $scope.setServiceState(service, state);\n            }\n            servicesFactory.updateHealth();\n        };\n\n        // verifies if use wants to start parent service, or parent\n        // and all children\n        $scope.modal_confirmSetServiceState = function(service, state, childCount){\n            $modalService.create({\n                template: [\"<h4>\"+ $translate.instant(\"choose_services_\"+ state) +\"</h4><ul>\",\n                    \"<li>\"+ $translate.instant(state +\"_service_name\", {name: \"<strong>\"+service.name+\"</strong>\"}) +\"</li>\",\n                    \"<li>\"+ $translate.instant(state +\"_service_name_and_children\", {name: \"<strong>\"+service.name+\"</strong>\", count: \"<strong>\"+childCount+\"</strong>\"}) +\"</li></ul>\"\n                ].join(\"\"),\n                model: $scope,\n                title: $translate.instant(state +\"_service\"),\n                actions: [\n                    {\n                        role: \"cancel\"\n                    },{\n                        role: \"ok\",\n                        classes: \" \",\n                        label: $translate.instant(state +\"_service\"),\n                        action: function(){\n                            // the arg here explicitly prevents child services\n                            // from being started\n                            $scope.setServiceState(service, state, true);\n                            this.close();\n                        }\n                    },{\n                        role: \"ok\",\n                        label: $translate.instant(state +\"_service_and_children\", {count: childCount}),\n                        action: function(){\n                            $scope.setServiceState(service, state);\n                            this.close();\n                        }\n                    }\n                ]\n            });\n        };\n\n\n        $scope.clickEndpointEnable= function(publicEndpoint){\n            if(publicEndpoint.type === \"vhost\"){\n                resourcesFactory.enableVHost(publicEndpoint.ApplicationId, publicEndpoint.ServiceEndpoint, publicEndpoint.Name)\n                    .error((data, status) => {\n                        $notification.create(\"Enable Public Endpoint failed\", data.Detail).error();\n                    });\n            } else if(publicEndpoint.type === \"port\"){\n                resourcesFactory.enablePort(publicEndpoint.ApplicationId, publicEndpoint.ServiceEndpoint, publicEndpoint.PortAddr)\n                    .error((data, status) => {\n                        $notification.create(\"Enable Public Endpoint failed\", data.Detail).error();\n                    });\n            }\n        };\n\n\n        $scope.clickEndpointDisable = function(publicEndpoint){\n            if(publicEndpoint.type === \"vhost\"){\n                resourcesFactory.disableVHost(publicEndpoint.ApplicationId, publicEndpoint.ServiceEndpoint, publicEndpoint.Name)\n                    .error((data, status) => {\n                        $notification.create(\"Disable Public Endpoint failed\", data.Detail).error();\n                    });\n            } else if(publicEndpoint.type === \"port\"){\n                resourcesFactory.disablePort(publicEndpoint.ApplicationId, publicEndpoint.ServiceEndpoint, publicEndpoint.PortAddr)\n                    .error((data, status) => {\n                        $notification.create(\"Disable Public Endpoint failed\", data.Detail).error();\n                    });\n\n            }\n\n        };\n\n        $scope.clickEditContext = function() {\n            //set editor options for context editing\n            $scope.codemirrorOpts = {\n                lineNumbers: true,\n                mode: \"properties\"\n            };\n\n            $scope.editableService = angular.copy($scope.services.current.model);\n            $scope.editableContext = makeEditableContext($scope.editableService.Context);\n\n            $modalService.create({\n                templateUrl: \"edit-context.html\",\n                model: $scope,\n                title: $translate.instant(\"edit_context\"),\n                actions: [\n                    {\n                        role: \"cancel\"\n                    },{\n                        role: \"ok\",\n                        label: $translate.instant(\"btn_save_changes\"),\n                        action: function(){\n                            // disable ok button, and store the re-enable function\n                            var enableSubmit = this.disableSubmitButton();\n\n                            $scope.editableService.Context = makeStorableContext($scope.editableContext);\n\n                            $scope.updateService($scope.editableService)\n                                .success(function(data, status){\n                                    $notification.create(\"Updated service\", $scope.editableService.ID).success();\n                                    this.close();\n                                }.bind(this))\n                                .error(function(data, status){\n                                    this.createNotification(\"Update service failed\", data.Detail).error();\n                                    enableSubmit();\n                                }.bind(this));\n                        }\n                    }\n                ],\n            onShow: function(){\n                $scope.codemirrorRefresh = true;\n            },\n            onHide: function(){\n                $scope.codemirrorRefresh = false;\n            }\n            });\n        };\n\n        function makeEditableContext(context){\n            var editableContext = \"\";\n            for(var key in context){\n                editableContext += key + \" \" + context[key] + \"\\n\";\n            }\n            if(!editableContext){ editableContext = \"\"; }\n            return editableContext;\n        }\n        function makeStorableContext(context){\n            //turn editableContext into a JSON object\n            var lines = context.split(\"\\n\"),\n                storable = {};\n\n            lines.forEach(function(line){\n                var delimitIndex, key, val;\n\n                if(line !== \"\"){\n                    delimitIndex = line.indexOf(\" \");\n                    if(delimitIndex !== -1){\n                        key = line.substr(0, delimitIndex);\n                        val = line.substr(delimitIndex + 1);\n                        storable[key] = val;\n                    } else {\n                        context[line] = \"\";\n                    }\n                }\n            });\n\n            return storable;\n        }\n\n\n        $scope.clickRemovePublicEndpoint = function(publicEndpoint) {\n\n            $modalService.create({\n                template: $translate.instant(\"remove_public_endpoint\") + \": <strong>\"+\n                          (publicEndpoint.Name ? publicEndpoint.Name : \"port \" + publicEndpoint.PortAddr) + \"</strong><br><br>\"+\n                          \"After the public endpoint is removed, the <strong>\" + publicEndpoint.Application +\n                          \"</strong> service will automatically be restarted.\",\n                model: $scope,\n                title: \"remove_public_endpoint\",\n                actions: [\n                    {\n                        role: \"cancel\"\n                    },{\n                        role: \"ok\",\n                        label: \"remove_public_endpoint_confirm\",\n                        classes: \"btn-danger\",\n                        action: function(){\n                            if(publicEndpoint.type === \"vhost\"){\n                                resourcesFactory.removeVHost( publicEndpoint.ApplicationId, publicEndpoint.ServiceEndpoint, publicEndpoint.Name)\n                                    .success(() => {\n                                        servicesFactory.update();\n                                        $notification.create(\"Removed Public Endpoint\", publicEndpoint.Name).success();\n                                    })\n                                    .error((data, status) => {\n                                        $notification.create(\"Remove Public Endpoint failed\", data.Detail).error();\n                                    });\n                            } else if(publicEndpoint.type === \"port\"){\n                                resourcesFactory.removePort(publicEndpoint.ApplicationId, publicEndpoint.ServiceEndpoint, publicEndpoint.PortAddr)\n                                    .success(() => {\n                                        servicesFactory.update();\n                                        $notification.create(\"Removed Public Endpoint\", publicEndpoint.PortName).success();\n                                    })\n                                    .error((data, status) => {\n                                        $notification.create(\"Remove Public Endpoint failed\", data.Detail).error();\n                                    });\n                            }\n                            this.close();\n                        }\n                    }\n                ]\n            });\n        };\n\n        $scope.editConfig = function(config) {\n            $scope.editableService = angular.copy($scope.services.current.model);\n            $scope.selectedConfig = config;\n\n            //set editor options for context editing\n            $scope.codemirrorOpts = {\n                lineNumbers: true,\n                mode: utils.getModeFromFilename($scope.selectedConfig)\n            };\n\n            $modalService.create({\n                templateUrl: \"edit-config.html\",\n                model: $scope,\n                title: $translate.instant(\"title_edit_config\") +\" - \"+ $scope.selectedConfig,\n                bigModal: true,\n                actions: [\n                    {\n                        role: \"cancel\"\n                    },{\n                        role: \"ok\",\n                        label: \"save\",\n                        action: function(){\n                            if(this.validate()){\n                                // disable ok button, and store the re-enable function\n                                var enableSubmit = this.disableSubmitButton();\n\n                                $scope.updateService($scope.editableService)\n                                    .success(function(data, status){\n                                        $notification.create(\"Updated service\", $scope.editableService.ID).success();\n                                        this.close();\n                                    }.bind(this))\n                                    .error(function(data, status){\n                                        this.createNotification(\"Update service failed\", data.Detail).error();\n                                        enableSubmit();\n                                    }.bind(this));\n                            }\n                        }\n                    }\n                ],\n                validate: function(){\n                    // TODO - actually validate\n                    return true;\n                },\n                onShow: function(){\n                    $scope.codemirrorRefresh = true;\n                },\n                onHide: function(){\n                    $scope.codemirrorRefresh = false;\n                }\n            });\n        };\n\n        $scope.viewLog = function(instance) {\n            $scope.editService = angular.copy(instance);\n\n            resourcesFactory.getInstanceLogs(instance.model.ServiceID, instance.model.ID)\n                .success(function(log) {\n                    $scope.editService.log = log.Detail;\n                    $modalService.create({\n                        templateUrl: \"view-log.html\",\n                        model: $scope,\n                        title: \"title_log\",\n                        bigModal: true,\n                        actions: [\n                            {\n                                role: \"cancel\",\n                                label: \"close\"\n                            },{\n                                classes: \"btn-primary\",\n                                label: \"refresh\",\n                                icon: \"glyphicon-repeat\",\n                                action: function() {\n                                    var textarea = this.$el.find(\"textarea\");\n                                    resourcesFactory.getInstanceLogs(instance.model.ServiceID, instance.id)\n                                        .success(function(log) {\n                                            $scope.editService.log = log.Detail;\n                                            textarea.scrollTop(textarea[0].scrollHeight - textarea.height());\n                                        })\n                                        .error((data, status) => {\n                                            this.createNotification(\"Unable to fetch logs\", data.Detail).error();\n                                        });\n                                }\n                            },{\n                                classes: \"btn-primary\",\n                                label: \"download\",\n                                action: function(){\n                                    utils.downloadFile('/services/' + instance.model.ServiceID + '/' + instance.model.ID + '/logs/download');\n                                },\n                                icon: \"glyphicon-download\"\n                            }\n                        ],\n                        onShow: function(){\n                            var textarea = this.$el.find(\"textarea\");\n                            textarea.scrollTop(textarea[0].scrollHeight - textarea.height());\n                        }\n                    });\n                })\n                .error(function(data, status){\n                    $notification.create(\"Unable to fetch logs\", data.Detail).error();\n                });\n        };\n\n        $scope.validateService = function() {\n          // TODO: Validate name and startup command\n          var svc = $scope.services.current.model,\n              max = svc.InstanceLimits.Max,\n              min = svc.InstanceLimits.Min,\n              num = svc.Instances;\n          if (typeof num === 'undefined' || (max > 0 && num > max) || (min > 0 && num < min)) {\n            var msg = $translate.instant(\"instances_invalid\") + \" \";\n            if (min > 0) {\n              msg += $translate.instant(\"minimum\") + \" \" + min;\n              if (max > 0) {\n                msg += \", \";\n              }\n            }\n            if (max > 0) {\n              msg += $translate.instant(\"maximum\") + \" \" + max;\n            }\n            $notification.create(\"\", msg).error();\n            return false;\n          }\n          return true;\n        };\n\n        $scope.updateService = function(newService) {\n            if ($scope.validateService()) {\n                return resourcesFactory.updateService($scope.services.current.model.ID, newService)\n                    .success((data, status) => {\n                        servicesFactory.update();\n                        this.editableService = {};\n                    });\n            }\n        };\n\n        $scope.subNavClick = function(crumb){\n            if(crumb.id){\n                $scope.routeToService(crumb.id);\n            } else {\n                // TODO - just call subnavs usual function\n                $location.path(crumb.url);\n            }\n        };\n\n        $scope.routeToService = function(id, e){\n            // if an event is present, we may\n            // need to prevent it from performing\n            // default navigation behavior\n            if(e){\n                // ctrl click opens in new tab,\n                // so allow that to happen and don't\n                // bother routing the current view\n                if(e.ctrlKey){\n                    return;\n                }\n\n                // if middle click, don't update\n                // current view\n                if(e.button === 1){\n                    return;\n                }\n\n                // otherwise, prevent default so\n                // we can handle the view routing\n                e.preventDefault();\n            }\n\n            $location.update_path(\"/services/\"+id, true);\n            $scope.params.serviceId = id;\n            $scope.services.current = servicesFactory.get($scope.params.serviceId);\n            $scope.update();\n        };\n\n        $scope.isServiceRunning = function(id) {\n            var service = servicesFactory.get(id);\n            return service.desiredState === 1;\n        };\n\n        $scope.update = function(){\n            if($scope.services.current){\n                $scope.services.subservices = $scope.services.current.descendents;\n                $scope.publicEndpoints.data = $scope.services.current.publicEndpoints;\n                $scope.exportedServiceEndpoints.data = $scope.services.current.exportedServiceEndpoints;\n                $scope.ips.data = $scope.services.current.addresses;\n\n                // update instances\n                $scope.services.current.getServiceInstances();\n\n                // setup breadcrumbs\n                $scope.breadcrumbs = makeCrumbs($scope.services.current);\n\n                // update serviceTreeState\n                $scope.serviceTreeState = CCUIState.get($cookies.ZUsername, \"serviceTreeState\");\n\n                // update pools\n                $scope.pools = poolsFactory.poolList;\n\n                // create an entry in tree state for the\n                // current service\n                if(!($scope.services.current.id in $scope.serviceTreeState)){\n                    $scope.serviceTreeState[$scope.services.current.id] = {};\n\n                    var treeState = $scope.serviceTreeState[$scope.services.current.id];\n\n                    // create default entries from all descendents\n                    $scope.services.current.descendents.forEach(descendent => {\n                        // TODO - formalize this state object\n                        treeState[descendent.id] = {\n                            hidden: false,\n                            collapsed: false\n                        };\n                    });\n                }\n\n                // property for view to bind for tree state\n                $scope.services.currentTreeState = $scope.serviceTreeState[$scope.services.current.id];\n            }\n\n            servicesFactory.updateHealth();\n        };\n\n        // restart all running instances for this service\n        $scope.killRunningInstances = function(app){\n            resourcesFactory.restartService(app.ID)\n                .error((data, status) => {\n                    $notification.create(\"Stop Service failed\", data.Detail).error();\n                });\n        };\n\n        $scope.startTerminal = function(app) {\n            window.open(\"http://\" + window.location.hostname + \":50000\");\n        };\n\n\n\n        $scope.getHostName = function(id){\n            if(hostsFactory.get(id)){\n                return hostsFactory.get(id).name;\n            } else {\n                // TODO - if unknown host, dont make linkable\n                // and use custom css to show unknown\n                return \"unknown\";\n            }\n        };\n\n        // expand/collapse state of service tree nodes\n        $scope.serviceTreeState = CCUIState.get($cookies.ZUsername, \"serviceTreeState\");\n        // servicedTreeState is a collection of objects\n        // describing if nodes in a service tree are hidden or collapsed.\n        // It is first keyed by the id of the current service context (the\n        // service who's name is at the top of the page), then keyed by\n        // the service in question. eg:\n        //\n        // current service id\n        //      -> child service id\n        //          -> hidden\n        //          -> collapsed\n        //      -> child service id\n        //          -> hidden\n        //          -> collapsed\n        //      ...\n\n        $scope.toggleChildren = function(service){\n            if(!$scope.services.current){\n                console.warn(\"Cannot store toggle state: no current service\");\n                return;\n            }\n\n            // stored state for the current service's\n            // service tree\n            var treeState = $scope.services.currentTreeState;\n\n            // if this service is marked as collapsed in\n            // this particular tree view, show its children\n            if(treeState[service.id].collapsed){\n                treeState[service.id].collapsed = false;\n                $scope.showChildren(service);\n\n            // otherwise, hide its children\n            } else {\n                treeState[service.id].collapsed = true;\n                $scope.hideChildren(service);\n            }\n        };\n\n        $scope.hideChildren = function(service){\n            // get the state of the current service's tree\n            var treeState = $scope.services.currentTreeState;\n\n            service.children.forEach(function(child){\n                treeState[child.id].hidden = true;\n                $scope.hideChildren(child);\n            });\n        };\n\n        $scope.showChildren = function(service){\n            var treeState = $scope.services.currentTreeState;\n\n            service.children.forEach(function(child){\n                treeState[child.id].hidden = false;\n\n                // if this child service is not marked\n                // as collapsed, show its children\n                if(!treeState[child.id].collapsed){\n                    $scope.showChildren(child);\n                }\n            });\n        };\n\n        //we need to bring this function into scope so we can use ng-hide if an object is empty\n        $scope.isEmptyObject = function(obj){\n            return angular.equals({}, obj);\n        };\n\n        $scope.isIsvc = function(service){\n            return service.isIsvc();\n        };\n\n        $scope.hasCurrentInstances = function(){\n            return $scope.services && $scope.services.current && $scope.services.current.hasInstances();\n        };\n\n        $scope.editCurrentService = function(){\n\n            // clone service for editing\n            $scope.editableService = angular.copy($scope.services.current.model);\n\n            $modalService.create({\n                templateUrl: \"edit-service.html\",\n                model: $scope,\n                title: \"title_edit_service\",\n                actions: [\n                    {\n                        role: \"cancel\"\n                    },{\n                        role: \"ok\",\n                        label: \"btn_save_changes\",\n                        action: function(){\n                            if(this.validate()){\n\n                                // disable ok button, and store the re-enable function\n                                var enableSubmit = this.disableSubmitButton();\n\n                                // update service with recently edited service\n                                $scope.updateService($scope.editableService)\n                                    .success(function(data, status){\n                                        $notification.create(\"Updated service\", $scope.editableService.ID).success();\n                                        this.close();\n                                    }.bind(this))\n                                    .error(function(data, status){\n                                        this.createNotification(\"Update service failed\", data.Detail).error();\n                                        enableSubmit();\n                                    }.bind(this));\n                            }\n                        }\n                    }\n                ],\n                validate: function(){\n                    if($scope.editableService.InstanceLimits.Min > $scope.editableService.Instances || $scope.editableService.Instances === undefined){\n                        return false;\n                    }\n\n                    return true;\n                }\n            });\n        };\n\n        // TODO - clean up magic numbers\n        $scope.calculateIndent = function(service){\n            var indent = service.depth,\n                offset = 1;\n\n            if($scope.services.current && $scope.services.current.parent){\n                offset = $scope.services.current.parent.depth + 2;\n            }\n\n            return $scope.indent(indent - offset);\n        };\n\n\n        function init(){\n            $scope.name = \"servicedetails\";\n            $scope.params = $routeParams;\n\n            $scope.breadcrumbs = [\n                { label: 'breadcrumb_deployed', url: '/apps' }\n            ];\n\n            $scope.publicEndpointsTable = {\n                sorting: {\n                    Name: \"asc\",\n                    ServiceEndpoint: \"asc\"\n                }\n            };\n            $scope.ipsTable = {\n                sorting: {\n                    ServiceName: \"asc\"\n                }\n            };\n            $scope.configTable = {\n                sorting: {\n                    Filename: \"asc\"\n                }\n            };\n            $scope.instancesTable = {\n                sorting: {\n                    \"model.InstanceID\": \"asc\"\n                },\n                // instead of watching for a change, always\n                // reload at a specified interval\n                watchExpression: (function(){\n                    var last = new Date().getTime(),\n                        now,\n                        interval = 1000;\n\n                    return function(){\n                        now = new Date().getTime();\n                        if(now - last > interval){\n                            last = now;\n                            return now;\n                        }\n                    };\n                })()\n            };\n            $scope.scheduledTasksTable = {\n                sorting: {\n                    Schedule: \"asc\"\n                }\n            };\n\n            // servicesTable should not be sortable since it\n            // is a hierarchy.\n            $scope.servicesTable = {};\n\n            // setup initial state\n            $scope.services = {\n                data: servicesFactory.serviceTree,\n                mapped: servicesFactory.serviceMap,\n                current: servicesFactory.get($scope.params.serviceId)\n            };\n\n            $scope.ips = {};\n            $scope.pools = [];\n\n            // if the current service changes, update\n            // various service controller thingies\n            $scope.$watch(function() {\n                // if no current service is set, try to set one\n                if(!$scope.services.current) {\n                    $scope.services.current = servicesFactory.get($scope.params.serviceId);\n                }\n\n                if($scope.services.current) {\n                    return $scope.services.current.isDirty();\n                } else {\n                    // there is no current service\n                    console.warn(\"current service not yet available\");\n                    return undefined;\n                }\n            }, $scope.update);\n\n            hostsFactory.activate();\n            hostsFactory.update();\n\n            servicesFactory.activate();\n            servicesFactory.update();\n\n            poolsFactory.activate();\n            poolsFactory.update();\n\n            $scope.$on(\"$destroy\", function() {\n                servicesFactory.deactivate();\n                hostsFactory.deactivate();\n                poolsFactory.deactivate();\n            });\n        }\n\n        // kick off controller\n        init();\n\n\n\n        function makeCrumbs(current){\n            var crumbs = [{\n                label: current.name,\n                itemClass: \"active\",\n                id: current.id\n            }];\n\n            (function recurse(service){\n                if(service){\n                    crumbs.unshift({\n                        label: service.name,\n                        url: \"/services/\"+ service.id,\n                        id: service.id\n                    });\n                    recurse(service.parent);\n                }\n            })(current.parent);\n\n            crumbs.unshift({\n                label: \"Applications\",\n                url: \"/apps\"\n            });\n\n            return crumbs;\n        }\n    }]);\n})();\n","// servicesFactory\n// - maintains a list of services and keeps it in sync with the backend.\n// - links services with their parents and children\n// - aggregates and caches service information (such as descendents)\n(function() {\n    'use strict';\n\n    var resourcesFactory, $q, serviceHealth, instancesFactory, utils;\n\n    angular.module('servicesFactory', []).\n    factory(\"servicesFactory\", [\"$rootScope\", \"$q\", \"resourcesFactory\", \"$interval\", \"$serviceHealth\", \"instancesFactory\", \"baseFactory\", \"miscUtils\",\n    function($rootScope, q, _resourcesFactory, $interval, _serviceHealth, _instancesFactory, BaseFactory, _utils){\n\n        // share resourcesFactory throughout\n        resourcesFactory = _resourcesFactory;\n        instancesFactory = _instancesFactory;\n        serviceHealth = _serviceHealth;\n        utils = _utils;\n        $q = q;\n\n        var UPDATE_PADDING = 1000;\n\n        var newFactory = new BaseFactory(Service, resourcesFactory.getServices);\n\n        // alias some stuff for ease of use\n        newFactory.serviceTree = newFactory.objArr;\n        newFactory.serviceMap = newFactory.objMap;\n\n        angular.extend(newFactory, {\n            // TODO - update list by application instead\n            // of all services ever?\n            update: function(force, skipUpdateInstances){\n                var deferred = $q.defer(),\n                    now = new Date().getTime(),\n                    requestTime = now,\n                    since;\n\n                // if this is the first update, request\n                // all services\n                if(this.lastRequest === undefined || force){\n                    since = 0;\n\n                // request all data since the last request\n                // was made to ensure any new data that came\n                // in DURING the request is filled\n                } else {\n                    since = (now - this.lastRequest) + UPDATE_PADDING;\n                }\n\n                resourcesFactory.getServices(since)\n                    .success((data, status) => {\n                        // TODO - change backend to send\n                        // updated, created, and deleted\n                        // separately from each other\n                        data.forEach((serviceDef) => {\n                            var currentParent, service;\n\n                                // update\n                                if(this.serviceMap[serviceDef.ID]){\n                                    service = this.serviceMap[serviceDef.ID];\n                                    currentParent = service.parent;\n\n                                    // if the service parent has changed,\n                                    // update its tree stuff (parent, depth, etc)\n                                    if(currentParent && serviceDef.ParentServiceID !== service.parent.id){\n                                        this.serviceMap[serviceDef.ID].update(serviceDef);\n                                        this.addServiceToTree(service);\n\n                                    // otherwise, just update the service\n                                    } else {\n                                        this.serviceMap[serviceDef.ID].update(serviceDef);\n                                    }\n\n                            // new\n                            } else {\n                                this.serviceMap[serviceDef.ID] = new Service(serviceDef);\n                                this.addServiceToTree(this.serviceMap[serviceDef.ID]);\n                            }\n\n                            // TODO - deleted service\n\n                        });\n\n                        // check to see if orphans found parents\n                        for(let id in this.serviceMap){\n                            if(this.serviceMap[id].isOrphan){\n                                this.addServiceToTree(this.serviceMap[id]);\n                            }\n                        }\n\n                        // HACK - services should update themselves?\n                        this.updateHealth();\n\n                        // notify the first services request is done\n                        $rootScope.$emit(\"ready\");\n\n                        // time last SUCCESSFUL request began\n                        this.lastRequest = requestTime;\n                        this.lastUpdate = new Date().getTime();\n\n                        deferred.resolve();\n                    });\n\n                // keep instances up to date\n                if(!skipUpdateInstances){\n                    instancesFactory.update();\n                }\n\n                return deferred.promise;\n            },\n\n            // adds a service object to the service tree\n            // in the appropriate place\n            addServiceToTree: function(service){\n                var parent;\n                // if this is not a top level service\n                if(service.model.ParentServiceID){\n                    parent = this.serviceMap[service.model.ParentServiceID];\n\n                    // if the parent isn't available, mark\n                    // as an orphaned service and early return\n                    if(!parent){\n                        service.isOrphan = true;\n                        return;\n                    }\n\n                    service.isOrphan = false;\n\n                    parent.addChild(service);\n\n                // if this is a top level service\n                } else {\n                    this.serviceTree.push(service);\n                    //this.serviceTree.sort(sortServicesByName);\n                }\n\n                // ICKY GROSS HACK!\n                // iterate tree and store tree depth on\n                // individual services\n                // TODO - find a more elegant way to keep track of depth\n                // TODO - remove apps from service tree if they get a parent\n                this.serviceTree.forEach(function(topService){\n                    topService.depth = 0;\n                    topService.children.forEach(function recurse(service){\n                        service.depth = service.parent.depth + 1;\n                        service.children.forEach(recurse);\n                    });\n                });\n            },\n\n            // TODO - debounce this guy\n            updateHealth: function(){\n                let statuses = serviceHealth.update(this.serviceMap);\n                for(var id in statuses){\n                    // attach status to associated service\n                    if(this.serviceMap[id]){\n                        this.serviceMap[id].status = statuses[id];\n                    }\n                }\n            }\n        });\n\n        return newFactory;\n    }]);\n\n    function sortServicesByName(a, b){\n        return a.name.toLowerCase() < b.name.toLowerCase() ? -1 : 1;\n    }\n\n    // Service object constructor\n    // takes a service object (backend service object)\n    // and wraps it with extra functionality and info\n    function Service(service, parent){\n        this.parent = parent;\n        this.children = [];\n        this.instances = [];\n\n        // tree depth\n        this.depth = 0;\n\n        // cache for computed values\n        this.cache = new Cache([\"addresses\", \"descendents\", \"publicEndpoints\", \"exportedServiceEndpoints\"]);\n\n        this.resources = {\n            RAMCommitment: 0,\n            RAMAverage: 0\n        };\n\n        this.update(service);\n\n        // this newly created child should be\n        // registered with its parent\n        // TODO - this makes parent update twice...\n        if(this.parent){\n            this.parent.addChild(this);\n        }\n    }\n\n\n    // service types\n    // internal service\n    var ISVC = \"isvc\",\n        // a service with no parent\n        APP = \"app\",\n        // a service with children but no\n        // startup command\n        META = \"meta\",\n        // a service who's parent is still\n        // being deployed\n        DEPLOYING = \"deploying\";\n\n    // DesiredState enum\n    var START = 1,\n        STOP = 0,\n        RESTART = -1;\n\n    Service.prototype = {\n        constructor: Service,\n\n        // updates the immutable service object\n        // and marks any computed properties dirty\n        update: function(service){\n            if(service){\n                this.updateServiceDef(service);\n            }\n\n            // update service health\n            // TODO - should service update itself, its controller\n            // update the service, or serviceHealth update all services?\n            this.status = serviceHealth.get(this.id);\n\n            this.evaluateServiceType();\n\n            // invalidate caches\n            this.markDirty();\n\n            // notify parent that this is now dirty\n            if(this.parent){\n                this.parent.update();\n            }\n        },\n\n        updateServiceDef: function(service){\n            // these properties are for convenience\n            this.name = service.Name;\n            this.id = service.ID;\n            // NOTE: desiredState is mutable to improve UX\n            this.desiredState = service.DesiredState;\n\n            // make service immutable\n            this.model = Object.freeze(service);\n\n        },\n\n        // invalidate all caches. This is needed\n        // when descendents update\n        markDirty: function(){\n            this.cache.markAllDirty();\n        },\n\n        evaluateServiceType: function(){\n            // infer service type\n            this.type = [];\n            if(this.model.ID.indexOf(\"isvc-\") !== -1){\n                this.type.push(ISVC);\n            }\n\n            if(!this.model.ParentServiceID){\n                this.type.push(APP);\n            }\n\n            if(this.children.length && !this.model.Startup){\n                this.type.push(META);\n            }\n\n            if(this.parent && this.parent.isDeploying()){\n                this.type.push(DEPLOYING);\n            }\n        },\n\n        addChild: function(service){\n            // if this service is not already in the list\n            if(this.children.indexOf(service) === -1){\n                this.children.push(service);\n\n                // make sure this child knows who\n                // its parent is\n                service.setParent(this);\n\n                // alpha sort children\n                this.children.sort(sortServicesByName);\n\n                this.update();\n            }\n        },\n\n        removeChild: function(service){\n            var childIndex = this.children.indexOf(service);\n\n            if(childIndex !== -1){\n                this.children.splice(childIndex, 1);\n            }\n            this.update();\n        },\n\n        setParent: function(service){\n            // if this is already the parent, IM OUT!\n            if(this.parent === service){\n                return;\n            }\n\n            // if a parent is already set, remove\n            // this service from its childship\n            if(this.parent){\n                this.parent.removeChild(this);\n            }\n\n            this.parent = service;\n            this.parent.addChild(this);\n            this.update();\n        },\n\n        // start, stop, or restart this service\n        start: function(skipChildren){\n            var promise = resourcesFactory.startService(this.id, skipChildren),\n                oldDesiredState = this.desiredState;\n\n            this.desiredState = START;\n\n            // if something breaks, return desired\n            // state to its previous value\n            return promise.error(() => {\n                this.desiredState = oldDesiredState;\n            });\n        },\n        stop: function(skipChildren){\n            var promise = resourcesFactory.stopService(this.id, skipChildren),\n                oldDesiredState = this.desiredState;\n\n            this.desiredState = STOP;\n\n            // if something breaks, return desired\n            // state to its previous value\n            return promise.error(() => {\n                this.desiredState = oldDesiredState;\n            });\n        },\n        restart: function(skipChildren){\n            var promise = resourcesFactory.restartService(this.id, skipChildren),\n                oldDesiredState = this.desiredState;\n\n            this.desiredState = RESTART;\n\n            // if something breaks, return desired\n            // state to its previous value\n            return promise.error(() => {\n                this.desiredState = oldDesiredState;\n            });\n        },\n\n        // gets a list of running instances of this service.\n        // NOTE: this isn't using a cache because this can be\n        // invalidated at any time, so it should always be checked\n        getServiceInstances: function(){\n            this.instances = instancesFactory.getByServiceId(this.id);\n            this.instances.sort(function(a,b) {\n                return a.model.InstanceID > b.model.InstanceID;\n            });\n            return this.instances;\n        },\n\n        resourcesGood: function() {\n            var instances = this.getServiceInstances();\n            for (var i = 0; i < instances.length; i++) {\n                if (!instances[i].resourcesGood()) {\n                    return false;\n                }\n            }\n            return true;\n        },\n\n        // some convenience methods\n        isIsvc: function(){\n            return !!~this.type.indexOf(ISVC);\n        },\n\n        isApp: function(){\n            return !!~this.type.indexOf(APP);\n        },\n\n        isDeploying: function(){\n            return !!~this.type.indexOf(DEPLOYING);\n        },\n\n        // HACK: this is a temporary fix to mark\n        // services deploying.\n        markDeploying: function(){\n            this.type.push(DEPLOYING);\n        },\n\n        // if any cache is dirty, this whole object\n        // is dirty\n        isDirty: function(){\n            return this.cache.anyDirty();\n        },\n\n        hasInstances: function(){\n            return !!this.instances.length;\n        }\n    };\n\n    Object.defineProperty(Service.prototype, \"descendents\", {\n        get: function(){\n            var descendents = this.cache.getIfClean(\"descendents\");\n\n            if(descendents){\n                return descendents;\n            }\n\n            descendents = this.children.reduce(function(acc, child){\n                acc.push(child);\n                return acc.concat(child.descendents);\n            }, []);\n\n            Object.freeze(descendents);\n            this.cache.cache(\"descendents\", descendents);\n            return descendents;\n        }\n    });\n\n    Object.defineProperty(Service.prototype, \"addresses\", {\n        get: function(){\n            var addresses = this.cache.getIfClean(\"addresses\");\n\n            // if valid cache, early return it\n            if(addresses){\n                return addresses;\n            }\n\n            // otherwise, get some new data\n            var services = this.descendents.slice();\n\n            // we also want to see the Endpoints for this\n            // service, so add it to the list\n            services.push(this);\n\n            // iterate services\n            addresses = services.reduce(function(acc, service){\n\n                var result = [];\n\n                // if Endpoints, iterate Endpoints\n                if(service.model.Endpoints){\n                    result = service.model.Endpoints.reduce(function(acc, endpoint){\n                        if (endpoint.AddressConfig.Port > 0 && endpoint.AddressConfig.Protocol) {\n                            acc.push({\n                                ID: endpoint.AddressAssignment.ID,\n                                AssignmentType: endpoint.AddressAssignment.AssignmentType,\n                                EndpointName: endpoint.AddressAssignment.EndpointName,\n                                IPAddr: endpoint.AddressAssignment.IPAddr,\n                                Port: endpoint.AddressConfig.Port,\n                                HostID: endpoint.AddressAssignment.HostID,\n                                PoolID: service.model.PoolID,\n                                ServiceID: service.id,\n                                ServiceName: service.name\n                            });\n                        }\n                        return acc;\n                    }, []);\n                }\n\n                return acc.concat(result);\n            }, []);\n\n            Object.freeze(addresses);\n            this.cache.cache(\"addresses\", addresses);\n            return addresses;\n        }\n    });\n\n    // fetch public endpoints for service and all descendents\n    Object.defineProperty(Service.prototype, \"publicEndpoints\", {\n        get: function(){\n            var publicEndpoints = this.cache.getIfClean(\"publicEndpoints\");\n\n            // if valid cache, early return it\n            if(publicEndpoints){\n                return publicEndpoints;\n            }\n\n            // otherwise, get some data\n            var services = this.descendents.slice();\n\n            // we also want to see the Endpoints for this\n            // service, so add it to the list\n            services.push(this);\n\n            // iterate services\n            publicEndpoints = services.reduce(function(acc, service){\n\n                var result = [];\n\n                // if Endpoints, iterate Endpoints\n                if(service.model.Endpoints){\n                    result = service.model.Endpoints.reduce(function(acc, endpoint){\n                        // if VHosts, iterate VHosts\n                        if(endpoint.VHostList){\n                            endpoint.VHostList.forEach(function(VHost){\n                                acc.push({\n                                    Name: VHost.Name,\n                                    Enabled: VHost.Enabled,\n                                    Application: service.name,\n                                    ServiceEndpoint: endpoint.Application,\n                                    ApplicationId: service.id,\n                                    Value: service.name +\" - \"+ endpoint.Application,\n                                    type: \"vhost\",\n                                });\n                            });\n                        }\n                        // if ports, iterate ports\n                        if(endpoint.PortList){\n                            endpoint.PortList.forEach(function(port){\n                                acc.push({\n                                    PortAddr: port.PortAddr,\n                                    Enabled: port.Enabled,\n                                    Application: service.name,\n                                    ServiceEndpoint: endpoint.Application,\n                                    ApplicationId: service.id,\n                                    Value: service.name +\" - \"+ endpoint.Application,\n                                    type: \"port\",\n                                });\n                            });\n                        }\n\n                        return acc;\n                    }, []);\n                }\n\n                return acc.concat(result);\n            }, []);\n\n            Object.freeze(publicEndpoints);\n            this.cache.cache(\"publicEndpoints\", publicEndpoints);\n            return publicEndpoints;\n        }\n    });\n\n    // fetch public endpoints for service and all descendents\n    Object.defineProperty(Service.prototype, \"exportedServiceEndpoints\", {\n        get: function(){\n            var exportedServiceEndpoints = this.cache.getIfClean(\"exportedServiceEndpoints\");\n\n            // if valid cache, early return it\n            if(exportedServiceEndpoints){\n                return exportedServiceEndpoints;\n            }\n\n            // otherwise, get some data\n            var services = this.descendents.slice();\n\n            // we also want to see the Endpoints for this\n            // service, so add it to the list\n            services.push(this);\n\n            // iterate services\n            exportedServiceEndpoints = services.reduce(function(acc, service){\n                var result = [];\n\n                // if Endpoints, iterate Endpoints\n                if(service.model.Endpoints){\n                    result = service.model.Endpoints.reduce(function(acc, endpoint){\n\n                        // if this exports tcp, add it to our list.\n                        if(endpoint.Purpose === \"export\" && endpoint.Protocol === \"tcp\"){\n                            acc.push({\n                                Application: service.name,\n                                ServiceEndpoint: endpoint.Application,\n                                ApplicationId: service.id,\n                                Value: service.name +\" - \"+ endpoint.Application,\n                            });\n                        }\n\n                        return acc;\n                    }, []);\n                }\n\n                return acc.concat(result);\n            }, []);\n\n            Object.freeze(exportedServiceEndpoints);\n            this.cache.cache(\"exportedServiceEndpoints\", exportedServiceEndpoints);\n            return exportedServiceEndpoints;\n        }\n    });\n\n    // simple cache object\n    // TODO - angular has this sorta stuff built in\n    function Cache(caches){\n        this.caches = {};\n        if(caches){\n            caches.forEach(function(name){\n                this.addCache(name);\n            }.bind(this));\n        }\n    }\n    Cache.prototype = {\n        constructor: Cache,\n        addCache: function(name){\n            this.caches[name] = {\n                data: null,\n                dirty: false\n            };\n        },\n        markDirty: function(name){\n            this.mark(name, true);\n        },\n        markAllDirty: function(){\n            for(var key in this.caches){\n                this.markDirty(key);\n            }\n        },\n        markClean: function(name){\n            this.mark(name, false);\n        },\n        markAllClean: function(){\n            for(var key in this.caches){\n                this.markClean(key);\n            }\n        },\n        cache: function(name, data){\n            this.caches[name].data = data;\n            this.caches[name].dirty = false;\n        },\n        get: function(name){\n            return this.caches[name].data;\n        },\n        getIfClean: function(name){\n            if(!this.caches[name].dirty){\n                return this.caches[name].data;\n            }\n        },\n        mark: function(name, flag){\n            this.caches[name].dirty = flag;\n        },\n        isDirty: function(name){\n            return this.caches[name].dirty;\n        },\n        anyDirty: function(){\n            for(var i in this.caches){\n                if(this.caches[i].dirty){\n                    return true;\n                }\n            }\n            return false;\n        }\n    };\n\n\n})();\n","/* globals controlplane: true, dagreD3: true */\n\n/* ServicesMapController\n * Displays dagre graph of services to hosts\n */\n(function(){\n    \"use strict\";\n\n    controlplane.controller(\"ServicesMapController\", [\"$scope\", \"$location\", \"$routeParams\", \"authService\", \"resourcesFactory\", \"servicesFactory\", \"miscUtils\", \"hostsFactory\", \"instancesFactory\", \"$q\",\n    function($scope, $location, $routeParams, authService, resourcesFactory, servicesFactory, utils, hostsFactory, instancesFactory, $q) {\n        // Ensure logged in\n        authService.checkLogin($scope);\n\n        $scope.name = \"servicesmap\";\n        $scope.params = $routeParams;\n\n        $scope.breadcrumbs = [\n            { label: 'breadcrumb_deployed', url: '/apps' },\n            { label: 'breadcrumb_services_map', itemClass: 'active' }\n        ];\n\n        // flag if this is the first time the service\n        // map has been updated\n        var isFirstTime = true;\n        $scope.refreshFrequency = 30000;\n\n        var g = new dagreD3.graphlib.Graph();\n        g.setGraph({\n            nodesep: 10,\n            ranksep: 75,\n            rankdir: \"LR\"\n        });\n        var svg = d3.select(\".service_map\");\n        var inner = svg.select(\"g\");\n        var render = new dagreD3.render();\n\n        svg.height = $(\".service_map\").height();\n\n        // Add zoom behavior\n        var zoom = d3.behavior.zoom().on(\"zoom\", function() {\n            var ev = d3.event;\n            inner.attr(\"transform\", \"translate(\" + ev.translate + \") scale(\" + ev.scale + \")\");\n        });\n        svg.call(zoom);\n\n        var draw = function(services, instances, isUpdate) {\n\n            var nodes = [];\n            var edges = [];\n            var nodeClasses = {};\n\n            // create service nodes and links\n            for (var serviceId in services) {\n                var service = services[serviceId];\n\n                // if this is an isvc, dont add it\n                if(service.isIsvc()){\n                    continue;\n                }\n\n                // add this service to the list of service nodes\n                nodes.push({\n                    id: service.id,\n                    config: {\n                        label: service.name,\n                        class: \"service\",\n                        paddingTop: 6, paddingBottom: 6,\n                        paddingLeft: 8, paddingRight: 8\n                    }\n                });\n\n                // if this service has a parent, add it to the\n                // list of edges\n                if (service.model.ParentServiceID !== '') {\n                    // if this service has a parent, mark its\n                    // parent as meta\n                    nodeClasses[service.model.ParentServiceID] = 'service meta';\n\n                    // link this service to its parent\n                    edges.push({\n                        source: service.model.ParentServiceID,\n                        target: serviceId,\n                        config: {\n                            lineInterpolate: \"basis\"\n                        }\n                    });\n                }\n\n            }\n\n            // link services to hosts\n            for (var i=0; i < instances.length; i++) {\n                var running = instances[i];\n                // if this running service has a HostID\n                if (running.model.HostID) {\n                    // if this host isnt in the list of hosts\n                    if (!nodeClasses[running.model.HostID]) {\n\n                        // add the host the the graph\n                        nodes.push({\n                            id: running.model.HostID,\n                            config: {\n                                label: hostsFactory.get(running.model.HostID).name,\n                                class: \"host\",\n                                paddingTop: 6, paddingBottom: 6,\n                                paddingLeft: 8, paddingRight: 8,\n                                // round corners to distinguish\n                                // from services\n                                rx: 10,\n                                ry: 10\n                            }\n                        });\n\n                        // mark this node as a host\n                        nodeClasses[running.model.HostID] = 'host';\n                    }\n\n                    // mark running service\n                    nodeClasses[running.model.ServiceID] = 'service running '+ running.status.status;\n\n                    // create a link from this service to the host\n                    // link this service to its parent\n                    edges.push({\n                        source: running.model.ServiceID,\n                        target: running.model.HostID,\n                        config: {\n                            lineInterpolate: \"basis\"\n                        }\n                    });\n                }\n            }\n\n            if(edges.length && nodes.length){\n\n                // attach all the cool stuff we just made\n                // to the graph\n                edges.forEach(function(edge){\n                    g.setEdge(edge.source, edge.target, edge.config);\n                });\n                nodes.forEach(function(node){\n                    if(nodeClasses[node.id]){\n                        node.config.class = nodeClasses[node.id];\n                    }\n                    g.setNode(node.id, node.config);\n                });\n\n                render(inner, g);\n\n                if(isFirstTime){\n                    isFirstTime = false;\n                    // Zoom and scale to fit\n                    var zoomScale = zoom.scale();\n                    var padding = 200;\n                    var graphWidth = g.graph().width + padding;\n                    var graphHeight = g.graph().height + padding;\n                    var width = parseInt(svg.style(\"width\").replace(/px/, \"\"));\n                    var height = parseInt(svg.style(\"height\").replace(/px/, \"\"));\n                    zoomScale = Math.min(width / graphWidth, height / graphHeight);\n                    var translate = [\n                        (width/2) - ((graphWidth*zoomScale)/2) + (padding*zoomScale/2),\n                        (height/2) - ((graphHeight*zoomScale)/2) + (padding*zoomScale/2)\n                    ];\n\n                    zoom.translate(translate);\n                    zoom.scale(zoomScale);\n                    zoom.event(isUpdate ? svg.transition().duration(500) : d3.select(\"svg\"));\n                }\n\n                // hide messages\n                $(\".service_map_loader\").fadeOut(150);\n            } else {\n                // show \"no services\" message\n                $(\".service_map_loader.loading\").hide();\n                $(\".service_map_loader.no_services\").show();\n            }\n\n        };\n\n        $scope.update = function(){\n            return $q.all([hostsFactory.update(), servicesFactory.update(true, true), instancesFactory.update()]).then(function(){\n                draw(servicesFactory.serviceMap, instancesFactory.instanceArr);\n                $scope.lastUpdate = new Date();\n            });\n        };\n\n        $scope.pollUpdate = function(){\n            $scope.update().then(function(){\n                setTimeout(function(){\n                    $scope.pollUpdate();\n                }, $scope.refreshFrequency);\n            });\n        };\n\n        $scope.pollUpdate();\n    }]);\n})();\n","/* CCUIState.js\n * preserve state through ui navigations\n */\n(function(){\n    \"use strict\";\n\n    // TODO - persist to local storage\n    class CCUIState {\n        constructor(){\n            // -> user name\n            //    -> store name\n            //       -> stored object\n            this.store = {};\n        }\n\n        get(userName, storeName){\n            var userStore = this.getUserStore(userName);\n\n            // if the store doesnt exist for this user,\n            // create it\n            if(!userStore[storeName]){\n                // TODO - formalize creation of this object\n                userStore[storeName] = {};\n            }\n\n            return userStore[storeName];\n        }\n\n        // creates and returns a user store for the specified\n        // user, or returns existing user store for the user\n        getUserStore(name){\n            var users = Object.keys(this.store);\n\n            // if this user doesn't have a store,\n            // create one\n            if(users.indexOf(name) === -1){\n                this.store[name] = {};\n            }\n\n            return this.store[name];\n        }\n    }\n\n    angular.module(\"CCUIState\", []).service(\"CCUIState\", [CCUIState]);\n})();\n","/* authService.js\n * determine if user is authorized\n */ \n(function(){\n    \"use strict\";\n\n    angular.module(\"authService\", [])\n    .factory(\"authService\", [\"$cookies\", \"$cookieStore\", \"$location\", \"$http\", \"$notification\", \"miscUtils\",\n    function($cookies, $cookieStore, $location, $http, $notification, utils) {\n        var loggedIn = false;\n        var userName = null;\n\n        var setLoggedIn = function(truth, username) {\n            loggedIn = truth;\n            userName = username;\n        };\n        return {\n\n            /*\n             * Called when we have positively determined that a user is or is not\n             * logged in.\n             *\n             * @param {boolean} truth Whether the user is logged in.\n             */\n            setLoggedIn: setLoggedIn,\n\n            login: function(creds, successCallback, failCallback){\n                $http.post('/login', creds).\n                    success(function(data, status) {\n                        // Ensure that the auth service knows that we are logged in\n                        setLoggedIn(true, creds.Username);\n\n                        successCallback();\n                    }).\n                    error(function(data, status) {\n                        // Ensure that the auth service knows that the login failed\n                        setLoggedIn(false);\n\n                        failCallback();\n                    });\n            },\n\n            logout: function(){\n                $http.delete('/login').\n                    success(function(data, status) {\n                        // On successful logout, redirect to /login\n                        $location.path('/login');\n                    }).\n                    error(function(data, status) {\n                        // On failure to logout, note the error\n                        // TODO error screen\n                        console.error('Unable to log out. Were you logged in to begin with?');\n                    });\n            },\n\n            /*\n             * Check whether the user appears to be logged in. Update path if not.\n             *\n             * @param {object} scope The 'loggedIn' property will be set if true\n             */\n            checkLogin: function($scope) {\n                $scope.dev = $cookieStore.get('ZDevMode');\n                if (loggedIn) {\n                    $scope.loggedIn = true;\n                    $scope.user = {\n                        username: $cookies.ZUsername\n                    };\n                    return;\n                }\n                if ($cookies.ZCPToken) {\n                    loggedIn = true;\n                    $scope.loggedIn = true;\n                    $scope.user = {\n                        username: $cookies.ZUsername\n                    };\n                } else {\n                    utils.unauthorized($location);\n                }\n            }\n        };\n    }]);\n})();\n","/*\n * baseFactory.js\n * baseFactory constructs a factory object that can be used\n * to keep the UI in sync with the backend. The returned factory\n * will use the provided update function (which should return a\n * promise good for an map of id to object), create new objects using\n * the provided ObjConstructor, and cache those objects.\n *\n * When it hits the update function again, it will compare the new\n * list to the cached list and intelligently new, update, and\n * remove objects as needed.\n *\n * NOTE: you can override update, mixin methods, etc to make this\n * thing more useful\n */\n\n(function() {\n    'use strict';\n\n    const DEFAULT_UPDATE_FREQUENCY = 3000;\n    var updateFrequency = DEFAULT_UPDATE_FREQUENCY;\n\n    var $q, $interval, $rootScope;\n\n    angular.module('baseFactory', []).\n    factory(\"baseFactory\", [\"$q\", \"$interval\", \"$rootScope\", \"servicedConfig\",\n    function(_$q, _$interval, _$rootScope, servicedConfig){\n\n        $q = _$q;\n        $interval = _$interval;\n        $rootScope = _$rootScope;\n\n        servicedConfig.getConfig()\n            .then(config => {\n                updateFrequency = config.PollFrequency * 1000;\n            }).catch(err => {\n                let errMessage = err.statusText;\n                if(err.data && err.data.Detail){\n                    errMessage = err.data.Detail;\n                }\n                console.error(\"could not load serviced config:\", errMessage);\n            });\n\n        return BaseFactory;\n    }]);\n\n    // BaseFactory creates and returns a new factory/cache\n    // @param {function} ObjConstructor - constructor function to be new'd up\n    //      with each object from the backend. NOTE: ObjConstructor must provide\n    //      update and updateObjDef methods.\n    // @param {function} updateFn - function to be called to update the object\n    //      cache. NOTE: this function must return a promise that yields a map\n    //      of id to object.\n    function BaseFactory(ObjConstructor, updateFn){\n        // map of cached objects by id\n        this.objMap = {};\n        // array of cached objects\n        this.objArr = [];\n        this.updateFn = updateFn;\n        this.ObjConstructor = ObjConstructor;\n    }\n\n\n    BaseFactory.prototype = {\n        constructor: BaseFactory,\n\n        // TODO - debounce\n        // update calls the provided update function, iterates the results,\n        // compares them to cached results and updates, creates, or deletes\n        // objects based on id\n        update: function(){\n            var deferred = $q.defer();\n            this.updateFn()\n                .success((data, status) => {\n                    var included = [];\n\n                    for(let id in data){\n                        let obj = data[id];\n\n                        // update\n                        if(this.objMap[id]){\n                            this.objMap[id].update(obj);\n\n                        // new\n                        } else {\n                            this.objMap[id] = new this.ObjConstructor(obj);\n                            this.objArr.push(this.objMap[id]);\n                        }\n\n                        included.push(id);\n                    }\n\n                    // delete\n                    if(included.length !== Object.keys(this.objMap).length){\n                        // iterate objMap and find keys\n                        // not present in included list\n                        for(let id in this.objMap){\n                            if(included.indexOf(id) === -1){\n                                this.objArr.splice(this.objArr.indexOf(this.objMap[id]), 1);\n                                delete this.objMap[id];\n                            }\n                        }\n                    }\n\n                    deferred.resolve();\n                })\n                .error((data, status) => {\n                    console.warn(\"Unable to update factory\", data);\n                })\n                .finally(() => {\n                    // notify the first request is complete\n                    if(!this.lastUpdate){\n                        $rootScope.$emit(\"ready\");\n                    }\n\n                    this.lastUpdate = new Date().getTime();\n                });\n            return deferred.promise;\n        },\n\n        // begins auto-update\n        activate: function(){\n            if(!this.updatePromise){\n                this.updatePromise = $interval(() => this.update(), updateFrequency);\n            }\n        },\n\n        // stops auto-update\n        deactivate: function(){\n            if(this.updatePromise){\n                $interval.cancel(this.updatePromise);\n                this.updatePromise = null;\n            }\n        },\n\n        // returns an object by id\n        get: function(id){\n            return this.objMap[id];\n        }\n    };\n\n\n/*\n * example of a type that could be passed\n * in as ObjectConstructor\n\n        function Obj(obj){\n            this.update(obj);\n\n            // do more init stuff here\n        }\n\n        Obj.prototype = {\n            constructor: Obj,\n            update: function(obj){\n                // if obj is provided, update\n                // immutable internal representation\n                // of that object\n                if(obj){\n                    this.updateObjDef(obj);\n                }\n\n                // do more update stuff here\n            },\n\n            // update immutable copy of the object\n            // from the backend\n            updateObjDef: function(obj){\n                // alias some properties for easy access\n                this.name = obj.Name;\n                this.id = obj.ID;\n                this.model = Object.freeze(obj);\n\n                // do more update stuff here\n            },\n        };\n*/\n\n})();\n","/* globals jstz: true */\n/* tableDirective.js\n * Wrapper for ngTable that gives a bit more\n * control and customization\n */\n\n/*\n *TODO\n *generate unique id thing for ng-table property? (jellyTable1)\n *\n *\n */\n(function() {\n    'use strict';\n\n    var count = 0;\n\n    angular.module('jellyTable', [])\n    .directive(\"jellyTable\", [\"$interval\", \"ngTableParams\", \"$filter\", \"$animate\", \"$compile\", \"miscUtils\",\n    function($interval, NgTableParams, $filter, $animate, $compile, utils){\n        return {\n            restrict: \"A\",\n            // inherit parent scope\n            scope: true,\n            // ensure this directive accesses the template\n            // before ng-repeat and ng-table do\n            priority: 1002,\n            // do not continue parsing the template\n            terminal: true,\n            compile: function(table){\n\n                var $wrap, tableID, fn;\n\n                // wrap the table up real nice\n                $wrap = $(`<div class=\"jelly-table\"></div>`);\n                table.after($wrap);\n                $wrap.append(table);\n\n                // unique property name for this table\n                tableID = \"jellyTable\" + count++;\n\n                // add loading and no data elements\n                table.find(\"tr\").last()\n                    .after(`<tr class=\"noData\"><td colspan=\"100%\" translate>no_data</td></tr>`)\n                    .after(`<tr class=\"loader\"><td colspan=\"100%\">&nbsp;</td></tr>`);\n\n                // add table status bar\n                table.append(`\n                    <tfoot><tr>\n                        <td colspan=\"100%\" class=\"statusBar\">\n                            <ul>\n                                <li class=\"entry\">Last Update: <strong>{{${tableID}.lastUpdate | fromNow}}</strong></li>\n                                <li class=\"entry\">Showing <strong>{{${tableID}.resultsLength}}</strong>\n                                    Result{{ ${tableID}.resultsLength !== 1 ? \"s\" : \"\"  }}\n                                </li>\n                            </ul>\n                        </td>\n                    </tr></tfoot>\n                `);\n\n\n                // mark this guy as an ng-table\n                table.attr(\"ng-table\", tableID);\n\n                // avoid compile loop\n                table.removeAttr(\"jelly-table\");\n\n                // enable linker to compile and bind scope\n                fn = $compile(table);\n\n                // return link function\n                return function($scope, element, attrs){\n                    // bind scope to html\n                    fn($scope);\n\n                    var $loader, $noData,\n                        toggleLoader, toggleNoData,\n                        getData, pageConfig, dataConfig,\n                        timezone, orderBy;\n\n                    var config = utils.propGetter($scope, attrs.config);\n                    var data = utils.propGetter($scope, attrs.data);\n\n                    orderBy = $filter(\"orderBy\");\n\n                    // setup some config defaults\n                    // TODO - create a defaults object and merge\n                    // TODO - create a \"defaultSort\" property and use\n                    // it to compose the `sorting` config option\n                    config().counts = config().counts || [];\n                    config().watchExpression = config().watchExpression || function(){ return data(); };\n\n                    timezone = jstz.determine().name();\n\n                    // TODO - errors for missing data\n\n                    $loader = $wrap.find(\".loader\");\n                    $noData = $wrap.find(\".noData\");\n\n                    toggleLoader = function(newVal, oldVal){\n                        if(oldVal === newVal){\n                            return;\n                        }\n\n                        // show loading spinner\n                        if(newVal){\n                            $loader.show();\n                            $animate.removeClass($loader, \"disappear\");\n\n                        // hide loading spinner\n                        } else {\n                            $animate.addClass($loader, \"disappear\")\n                                .then(function(){\n                                    $loader.hide();\n                                });\n                        }\n                    };\n                    toggleNoData = function(val){\n                        if(val){\n                            $noData.show();\n                        } else {\n                            $noData.hide();\n                        }\n                    };\n\n                    getData = function($defer, params) {\n                        var unorderedData = data(),\n                            orderedData;\n\n                        // if unorderedData is an object, convert to array\n                        // NOTE: angular.isObject does not consider null to be an object\n                        if(!angular.isArray(unorderedData) && angular.isObject(unorderedData)){\n                            unorderedData = utils.mapToArr(unorderedData);\n\n                        // if it's null, create empty array\n                        } else if(unorderedData === null){\n                            unorderedData = [];\n                        }\n\n                        // call overriden getData\n                        if(config().getData){\n                            orderedData = config().getData(unorderedData, params);\n\n                        // use default getData\n                        } else {\n                            orderedData = params.sorting() ?\n                                orderBy(unorderedData, params.orderBy()) :\n                                unorderedData;\n                        }\n\n                        // if no data, show loading and default\n                        // to empty array\n                        if(angular.isUndefined(orderedData)){\n                            $scope[tableID].loading = true;\n                            toggleNoData(false);\n                            orderedData = [];\n\n                        // if data, hide loading, and check if empty\n                        // array\n                        } else {\n                            $scope[tableID].loading = false;\n                            // if the request succeded but is\n                            // just empty, show no data message\n                            if(!orderedData.length){\n                                toggleNoData(true);\n\n                            // otherwise, hide no data message\n                            } else {\n                                toggleNoData(false);\n                            }\n                        }\n\n                        $scope[tableID].resultsLength = orderedData.length;\n                        $scope[tableID].lastUpdate = moment.utc().tz(timezone);\n\n                        $defer.resolve(orderedData);\n                    };\n\n                    // setup config for ngtable\n                    pageConfig = {\n                        sorting: config().sorting\n                    };\n                    dataConfig = {\n                        counts: config().counts,\n                        getData: getData\n                    };\n\n                    // configure ngtable\n                    $scope[tableID] = new NgTableParams(pageConfig, dataConfig);\n                    $scope[tableID].loading = true;\n                    toggleNoData(false);\n\n                    // watch data for changes\n                    $scope.$watch(config().watchExpression, function(){\n                        $scope[tableID].reload();\n                    });\n\n                    $scope.$watch(tableID + \".loading\", toggleLoader);\n                };\n            }\n        };\n    }]);\n})();\n","/* miscDirectives.js\n * a place for miscellaneous directives\n */\n(function(){\n    \"use strict\";\n\n    controlplane\n    /**\n     * This is a fix for https://jira.zenoss.com/browse/ZEN-10263\n     * It makes sure that inputs that are filled in by autofill (like when the browser remembers the password)\n     * are updated in the $scope. See the partials/login.html for an example\n     **/\n    .directive('formAutofillFix', [\n    function() {\n        return function(scope, elem, attrs) {\n            // Fixes Chrome bug: https://groups.google.com/forum/#!topic/angular/6NlucSskQjY\n            elem.prop('method', 'POST');\n\n            // Fix autofill issues where Angular doesn't know about autofilled inputs\n            if(attrs.ngSubmit) {\n                window.setTimeout(function() {\n                    elem.unbind('submit').submit(function(e) {\n                        e.preventDefault();\n                        elem.find('input, textarea, select').trigger('input').trigger('change').trigger('keydown');\n                        scope.$apply(attrs.ngSubmit);\n                    });\n                }, 0);\n            }\n        };\n    }])\n    .directive('popover', [\n    function(){\n        return function(scope, elem, attrs){\n            $(elem).popover({\n                title: attrs.popoverTitle,\n                trigger: \"hover\",\n                html: true,\n                content: attrs.popover\n            });\n        };\n    }])\n    .directive('scroll', [\"$rootScope\", \"$window\", \"$timeout\",\n    function($rootScope, $window, $timeout) {\n        return {\n            link: function(scope, elem, attr) {\n                $window = angular.element($window);\n                var handler = function() {\n                    var winEdge, elEdge, dataHidden;\n                    winEdge = $window.height() + $window.scrollTop();\n                    elEdge = elem.offset().top + elem.height();\n                    dataHidden = elEdge - winEdge;\n                    if (dataHidden < parseInt(attr.scrollSize, 10)) {\n                        if ($rootScope.$$phase) {\n                            if (scope.$eval(attr.scroll)) {\n                                $timeout(handler, 100);\n                            }\n                        } else {\n                            if (scope.$apply(attr.scroll)) {\n                                $timeout(handler, 100);\n                            }\n                        }\n                    }\n                };\n                if (attr.scrollHandlerObj && attr.scrollHandlerField) {\n                    var obj = scope[attr.scrollHandlerObj];\n                    obj[attr.scrollHandlerField] = handler;\n                }\n                $window.on('scroll', handler);\n                $window.on('resize', handler);\n                scope.$on('$destroy', function() {\n                    $window.off('scroll', handler);\n                    $window.off('resize', handler);\n                    return true;\n                });\n                return $timeout(function() {\n                    return handler();\n                }, 100);\n            }\n        };\n    }]);\n})();\n","/* miscUtils.js\n * miscellaneous utils and stuff that\n * doesn't quite fit in elsewhere\n */\n(function(){\n    \"use strict\";\n\n    angular.module(\"miscUtils\", [])\n    .factory(\"miscUtils\", [ \"$parse\",\n    function($parse){\n\n        //polyfill endsWith so phantomjs won't complain :/\n        if (!String.prototype.endsWith) {\n          String.prototype.endsWith = function(searchString, position) {\n              var subjectString = this.toString();\n              if (typeof position !== 'number' || !isFinite(position) || Math.floor(position) !== position || position > subjectString.length) {\n                position = subjectString.length;\n              }\n              position -= searchString.length;\n              var lastIndex = subjectString.indexOf(searchString, position);\n              return lastIndex !== -1 && lastIndex === position;\n          };\n        }\n\n        var utils = {\n\n            // TODO - use angular $location object to make this testable\n            unauthorized: function() {\n                console.error('You don\\'t appear to be logged in.');\n                // show the login page and then refresh so we lose any incorrect state. CC-279\n                window.location.href = \"/#/login\";\n                window.location.reload();\n            },\n\n            indentClass: function(depth) {\n                return 'indent' + (depth -1);\n            },\n\n            downloadFile: function(url){\n                window.location = url;\n            },\n\n            getModeFromFilename: function(filename){\n                var re = /(?:\\.([^.]+))?$/;\n                var ext = re.exec(filename)[1];\n                var mode;\n                switch(ext) {\n                    case \"conf\":\n                        mode=\"properties\";\n                        break;\n                    case \"xml\":\n                        mode = \"xml\";\n                        break;\n                    case \"yaml\":\n                        mode = \"yaml\";\n                        break;\n                    case \"txt\":\n                        mode = \"plain\";\n                        break;\n                        case \"json\":\n                        mode = \"javascript\";\n                        break;\n                    default:\n                        mode = \"shell\";\n                        break;\n                }\n\n                return mode;\n            },\n\n            updateLanguage: function($scope, $cookies, $translate){\n                var ln = 'en_US';\n                if ($cookies.Language === undefined) {\n\n                } else {\n                    ln = $cookies.Language;\n                }\n                if ($scope.user) {\n                    $scope.user.language = ln;\n                }\n                $translate.use(ln);\n            },\n\n            capitalizeFirst: function(str){\n                return str.slice(0,1).toUpperCase() + str.slice(1);\n            },\n\n            // call fn b after fn a\n            after: function(a, b, context){\n                return function(){\n                    var results;\n                    results = a.apply(context, arguments);\n                    // TODO - send results to b?\n                    b.call(context);\n                    return results;\n                };\n            },\n\n            mapToArr: function(data) {\n                var arr = [];\n                for (var key in data) {\n                    arr.push(data[key]);\n                }\n                return arr;\n            },\n\n\n            // cache function results based on hash function.\n            // NOTE: unlike regular memoize, the caching is entirely\n            // based on hash function, not on arguments\n            memoize: function(fn, hash){\n                var cache = {};\n                return function(){\n                    var key = hash.apply(this, arguments),\n                        val;\n\n                    // if value isnt cached, evaluate and cache\n                    if(!(key in cache)){\n                        val = fn.apply(this, arguments);\n                        cache[key] = val;\n                    } else {\n                        val = cache[key];\n                    }\n\n                    return val;\n                };\n            },\n\n            needsHostAlias: function(host){\n                // check is location.hostname is an IP\n                var re = /\\b(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\b/;\n                return re.test(host) || host === \"localhost\";\n            },\n\n            parseEngineeringNotation: function(str) {\n                // Converts nK/k, nM/m, nG/g, nT/t to a number. e.g. 1K returns 1024.\n                if (str === \"\" || str === undefined) {\n                    return 0;\n                }\n\n                // if this is already a regular, boring, ol number\n                if(isFinite(+str)){\n                    return +str;\n                }\n\n                var prefix = parseFloat(str);\n                var suffix = str.slice(prefix.toString().length);\n                switch(suffix) {\n                    case \"K\":\n                    case \"k\":\n                        prefix *= (1 << 10);\n                        break;\n                    case \"M\":\n                    case \"m\":\n                        prefix *= (1 << 20);\n                        break;\n                    case \"G\":\n                    case \"g\":\n                        prefix *= (1 << 30);\n                        break;\n                    case \"T\":\n                    case \"t\":\n                        prefix *= (1 << 40);\n                        break;\n                    default:\n                        prefix = undefined;\n                        break;\n                }\n                return prefix;\n            },\n\n            // returns a function that will parse the\n            // expression `attr` on scope object $scope\n            // and return that value\n            propGetter: function($scope, attr){\n                var getter = $parse(attr);\n                return function(){\n                    return getter($scope);\n                };\n            },\n\n            // TODO - make services that should not count configurable\n            // eg: started, stopped, manual, etc\n            countTheKids: function(parentService, filterFunction=() => true){\n                var children = parentService.children || [],\n                    childCount = 0;\n\n                // count number of descendent services that will start\n                childCount = children.reduce(function countTheKids(acc, service){\n                    // if a service is not set to manual launch and\n                    // has a startup command, it probably should count\n                    var shouldCount = service.model.Launch !== \"manual\" &&\n                        service.model.Startup;\n\n                    // if shouldCount and the filter function returns\n                    // true, this definitely counts\n                    if(shouldCount && filterFunction(service)){\n                        acc++;\n                    }\n\n                    // if the service has children, check em\n                    if(service.children){\n                        return service.children.reduce(countTheKids, acc);\n                    }\n                }, 0);\n\n                return childCount;\n            },\n\n            validateHostName: function(hostStr, $translate){\n                if (hostStr === undefined || hostStr === '') {\n                    return $translate.instant(\"content_wizard_invalid_host\");\n                }\n\n                return null;\n            },\n\n            validatePortNumber: function(port, $translate){\n                if (port === undefined || port === '') {\n                    return $translate.instant(\"port_number_invalid\");\n                }\n                if(+port < 1 || +port > 65535){\n                    return $translate.instant(\"port_number_invalid_range\");\n                }\n\n                return null;\n            },\n\n            validateRAMLimit: function(limitStr, max=Infinity){\n\n                if (limitStr === undefined || limitStr === '') {\n                    return null;\n                }\n\n                var isPercent = (limitStr.endsWith(\"%\"));\n                var isEngineeringNotation = /.*[KkMmGgTt]$/.test(limitStr);\n\n                if (!isPercent && !isEngineeringNotation) {\n                    return \"Invalid RAM Limit value, must specify % or unit of K, M, G, or T\";\n                }\n\n                // if this is a percent, ensure its between 1 and 100\n                if(isPercent){\n                    let val = +limitStr.slice(0, -1);\n                    if(val > 100){\n                        return \"RAM Limit cannot exceed 100%\";\n                    }\n                    if(val <= 0){\n                        return \"RAM Limit must be at least 1%\";\n                    }\n\n                // if this is a byte value, ensure its less than host memory\n                } else {\n                    let val = utils.parseEngineeringNotation(limitStr);\n                    if(isNaN(val) || val === undefined){\n                        return \"Invalid RAM Limit value\";\n                    }\n                    if(val > max){\n                        return \"RAM Limit exceeds available host memory\";\n                    }\n                    if(val <= 0){\n                        return \"RAM Limit must be at least 1\";\n                    }\n\n                }\n                return null;\n            }\n       };\n\n        return utils;\n    }]);\n})();\n","/* jshint multistr: true */\n(function() {\n    'use strict';\n\n    angular.module('modalService', []).\n    factory(\"$modalService\", [\n        \"$rootScope\", \"$templateCache\", \"$http\", \"$interpolate\", \"$compile\", \"$translate\", \"$notification\",\n        function($rootScope, $templateCache, $http, $interpolate, $compile, $translate, $notification){\n\n            var defaultModalTemplate = '<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\\\n                <div class=\"modal-dialog {{bigModal}}\">\\\n                    <div class=\"modal-content\">\\\n                        <div class=\"modal-header\">\\\n                            <button type=\"button\" class=\"close glyphicon glyphicon-remove-circle\" data-dismiss=\"modal\" aria-hidden=\"true\"></button>\\\n                            <span class=\"modal-title\">{{title}}</span>\\\n                        </div>\\\n                        <div class=\"modal-notify\"></div>\\\n                        <div class=\"modal-body\">{{template}}</div>\\\n                        <div class=\"modal-footer\"></div>\\\n                    </div>\\\n                </div>\\\n            </div>';\n\n            var actionButtonTemplate = '<button type=\"button\" class=\"btn {{classes}}\"><span ng-show=\"icon\" class=\"glyphicon {{icon}}\"></span> {{label}}</button>';\n\n            var defaultRoles = {\n                \"cancel\": {\n                    label: \"Cancel\",\n                    icon: \"glyphicon-remove\",\n                    classes: \"btn-link minor\",\n                    action: function(){\n                        this.close();\n                    }\n                },\n                \"ok\": {\n                    label: \"Ok\",\n                    icon: \"glyphicon-ok\",\n                    classes: \"btn-primary submit\",\n                    action: function(){\n                        this.close();\n                    }\n                }\n            };\n\n            /**\n             * Modal window\n             */\n            function Modal(template, model, config){\n                var $modalFooter;\n\n                // inject user provided template into modal template\n                var modalTemplate = $interpolate(defaultModalTemplate)({\n                    template: template,\n                    title: $translate.instant(config.title),\n                    bigModal: config.bigModal ? \"big\" : \"\"\n                });\n\n                // bind user provided model to final modal template\n                this.$el = $($compile(modalTemplate)(model)).modal();\n\n                $modalFooter = this.$el.find(\".modal-footer\");\n                // cache a reference to the notification holder\n                this.$notificationEl = this.$el.find(\".modal-notify\");\n\n                // create action buttons\n                config.actions.forEach(function(action){\n\n                    // if this action has a role on it, merge role defaults\n                    if(action.role && defaultRoles[action.role]){\n                        for(var i in defaultRoles[action.role]){\n                            action[i] = action[i] || defaultRoles[action.role][i];\n                        }\n                    }\n\n                    // translate button label\n                    action.label = $translate.instant(action.label);\n\n                    var $button = $($interpolate(actionButtonTemplate)(action));\n                    $button.on(\"click\", action.action.bind(this));\n                    $modalFooter.append($button);\n                }.bind(this));\n\n                // if no actions, remove footer\n                if(!config.actions.length){\n                    $modalFooter.remove();\n                }\n\n                // setup/default validation function\n                this.validateFn = config.validate || function(args){ return true; };\n\n                // listen for hide event and completely remove modal\n                // after it is hidden\n                this.$el.on(\"hidden.bs.modal\", function(){\n                    this.destroy();\n                }.bind(this));\n            }\n\n            Modal.prototype = {\n                constructor: Modal,\n                close: function(){\n                    this.$el.modal(\"hide\");\n                },\n                show: function(){\n                    this.$el.modal(\"show\");\n                    this.disableScroll();\n                },\n                validate: function(args){\n                    return this.validateFn(args);\n                },\n                destroy: function(){\n                    this.$el.remove();\n                    this.enableScroll();\n                },\n                // convenience method for attaching notifications to the modal\n                createNotification: function(title, message){\n                    return $notification.create(title, message, this.$notificationEl);\n                },\n\n                disableScroll(){\n                    var bodyEl = $(\"body\");\n                    this.bodyOverflowProp = bodyEl.css(\"overflow\");\n                    bodyEl.css(\"overflow\", \"hidden\");\n                },\n                enableScroll(){\n                    var prop = this.bodyOverflowProp || \"scroll\";\n                    $(\"body\").css(\"overflow\", prop);\n                },\n\n                // convenience method to disable the default ok/submit button\n                disableSubmitButton: function(selector, disabledText){\n                    selector = selector || \".submit\";\n                    disabledText = disabledText || \"Submitting...\";\n\n                    var $button = this.$el.find(selector),\n                        $buttonClone,\n                        buttonContent, startWidth, endWidth;\n\n                    // button wasnt found\n                    if(!$button.length){\n                        return;\n                    }\n\n                    // explicitly set width so it can be animated\n                    startWidth = $button.width();\n\n                    // clone the button and set the ending text so the\n                    // explicit width can be calculated\n                    $buttonClone = $button.clone().width(\"auto\").text(disabledText).appendTo(\"body\");\n                    endWidth = $buttonClone.width();\n                    $buttonClone.remove();\n\n                    $button.width(startWidth);\n\n                    buttonContent = $button.html();\n                    $button.prop(\"disabled\", true)\n                        .addClass(\"disabled\")\n                        .text(disabledText)\n                        .width(endWidth);\n\n                    // return a function used to reenable the button\n                    return function(){\n                        $button.prop(\"disabled\", false)\n                            .removeClass(\"disabled\")\n                            .html(buttonContent)\n                            .width(startWidth);\n                    };\n                }\n            };\n\n\n\n\n            var modalsPath = \"/static/partials/\",\n                // keep track of existing modals so that they can be\n                // close/destroyed when a new one is created\n                // TODO - remove modals from this list when they are hidden\n                modals = [];\n\n            /**\n             * Fetches modal template and caches it in $templateCache.\n             * returns a promise for the http request\n             */\n            function fetchModalTemplate(name){\n                var url = modalsPath + name;\n                return $http.get(url, {cache: $templateCache});\n            }\n\n            /**\n             * fetches modal template and passes it along to be attached\n             * to the DOM\n             */\n            function create(config){\n\n                config = config || {};\n                // TODO - default config object\n                config.actions = config.actions || [];\n                config.onShow = config.onShow || function(){};\n                config.onHide = config.onHide || function(){};\n                var model = config.model || {};\n\n                // if the template was provided, use that\n                if(config.template){\n                    _create(config.template, model, config);\n\n                // otherwise, request the template\n                // TODO - pop a modal with load spinner?\n                } else {\n                    fetchModalTemplate(config.templateUrl).then(function(res){\n                        _create(res.data, model, config);\n                    });\n                }\n            }\n\n            function _create(template, model, config){\n                // immediately destroy any existing modals\n                modals.forEach(function(momo){\n                    momo.destroy();\n                });\n\n                var modal = new Modal(template, model, config);\n                modal.show();\n\n                modals = [modal];\n\n                // perform onShow function after modal is visible\n                modal.$el.one(\"shown.bs.modal.\", function(){\n                    // search for and autofocus the focusme element\n                    modal.$el.find(\"[focusme]\").first().focus();\n\n                    // call user provided onShow function\n                    config.onShow.call(modal);\n                });\n\n                modal.$el.one(\"hidden.bs.modal.\", config.onHide.bind(modal));\n\n            }\n\n            return {\n                create: create\n            };\n\n        }\n    ]);\n})();\n","/* globals controlplane: true */\n(function(){\n\n    const REQUEST_TIMEOUT = 30000;\n    const GET = \"get\";\n    const PUT = \"put\";\n    const DELETE = \"delete\";\n    const POST = \"post\";\n\n    controlplane.factory(\"resourcesFactory\", [\"$http\", \"$location\", \"$notification\", \"DSCacheFactory\", \"$q\", \"$interval\", \"miscUtils\",\n    function($http, $location, $notification, DSCacheFactory, $q, $interval, utils) {\n        // add function to $http service to allow for noCacheGet requests\n        $http.noCacheGet = function(location){\n          return $http({url: location, method: \"GET\", params: {'time': new Date().getTime()}});\n        };\n\n        var pollingFunctions = {};\n\n        var redirectIfUnauthorized = function(status){\n          if (status === 401) {\n              utils.unauthorized($location);\n          }\n        };\n\n        /*\n         * a methodConfig is used to create a resources\n         * factory interface method. The methodConfig object\n         * has the following properties:\n         *\n         * @prop {string} method        - GET, POST, PUT, DELETE\n         * @prop {string|function} url  - a string representing the url, or a function\n         *                                that can generate the url. the function will\n         *                                receive arguments passed to the factory method\n         * @prop {function} [payload]   - function that returns the payload to be\n         *                                delivered for POST or PUT request. the function\n         *                                will receive arguments passed to the factory\n         *                                method\n         */\n        var methodConfigs = {\n            assignIP: {\n                method: PUT,\n                url: (id, ip) => {\n                  let url = `/services/${id}/ip`;\n                  if (ip) {\n                    url += `/${ip}`;\n                  }\n                  return url;\n                }\n            },\n            getPools: {\n                method: GET,\n                url: \"/pools\"\n            },\n            getPoolIPs: {\n                method: GET,\n                url: id => `/pools/${id}/ips`\n            },\n            addVHost: {\n                method: PUT,\n                url: (serviceID, endpointName, vhostName) => {\n                    return `/services/${serviceID}/endpoint/${endpointName}/vhosts/${vhostName}`;\n                },\n                payload: (serviceID, endpointName, vhostName) => {\n                    return JSON.stringify({\n                        'ServiceID': serviceID,\n                        'Application': endpointName,\n                        'VirtualHostName': vhostName\n                    });\n                }\n            },\n            removeVHost: {\n                method: DELETE,\n                url: (serviceID, endpointName, vhostName) => {\n                    return `/services/${serviceID}/endpoint/${endpointName}/vhosts/${vhostName}`;\n                }\n            },\n            enableVHost: {\n                method: POST,\n                url: (serviceID, endpointName, vhostName) => {\n                    return `/services/${serviceID}/endpoint/${endpointName}/vhosts/${vhostName}`;\n                },\n                payload: () => {return JSON.stringify({Enable:true});}\n            },\n            disableVHost: {\n                method: POST,\n                url: (serviceID, endpointName, vhostName) => {\n                    return `/services/${serviceID}/endpoint/${endpointName}/vhosts/${vhostName}`;\n                },\n                payload: () => {return JSON.stringify({Enable:false});}\n            },\n            addPort: {\n                method: PUT,\n                url: (serviceID, endpointName, portName, portIP) => {\n                    return `/services/${serviceID}/endpoint/${endpointName}/ports/${portName}`;\n                },\n                payload: (serviceID, endpointName, portName, portIP) => {\n                    return JSON.stringify({\n                        'ServiceID': serviceID,\n                        'Application': endpointName,\n                        'PortName': portName\n                    });\n                }\n            },\n            removePort: {\n                method: DELETE,\n                url: (serviceID, endpointName, portName) => {\n                    return `/services/${serviceID}/endpoint/${endpointName}/ports/${portName}`;\n                }\n            },\n            enablePort: {\n                method: POST,\n                url: (serviceID, endpointName, portName) => {\n                    return `/services/${serviceID}/endpoint/${endpointName}/ports/${portName}`;\n                },\n                payload: (serviceID, endpointName, portName, portIP) => {\n                    return JSON.stringify({\n                        'Enable': true\n                    });\n                }\n            },\n            disablePort: {\n                method: POST,\n                url: (serviceID, endpointName, portName) => {\n                    return `/services/${serviceID}/endpoint/${endpointName}/ports/${portName}`;\n                },\n                payload: () => {return JSON.stringify({Enable:false});}\n            },\n            getServiceInstances: {\n                method: GET,\n                url: \"/servicestatus\"\n            },\n            addPool: {\n                method: POST,\n                url: \"/pools/add\",\n                payload: pool => pool\n            },\n            removePool: {\n                method: DELETE,\n                url: id => `/pools/${id}`\n            },\n            addPoolVirtualIP: {\n                method: PUT,\n                url: poolID => `/pools/${poolID}/virtualip`,\n                payload: (poolID, ip, netmask, bindInterface) => {\n                    return JSON.stringify({\n                        PoolID: poolID,\n                        IP: ip,\n                        Netmask: netmask,\n                        BindInterface: bindInterface\n                    });\n                }\n            },\n            removePoolVirtualIP: {\n                method: DELETE,\n                url: (poolID, ip) => `/pools/${poolID}/virtualip/${ip}`,\n            },\n            killRunning: {\n                method: DELETE,\n                url: (hostID, instanceID) => `/hosts/${hostID}/${instanceID}`\n            },\n            getHosts: {\n                method: GET,\n                url: \"/hosts\"\n            },\n            addHost: {\n                method: POST,\n                url: \"/hosts/add\",\n                payload: host => host\n            },\n            updateHost: {\n                method: PUT,\n                url: id => `/hosts/${id}`,\n                payload: (id, host) => host\n            },\n            removeHost: {\n                method: DELETE,\n                url: id => `/hosts/${id}`\n            },\n            getRunningHosts: {\n                method: GET,\n                url: \"/hosts/running\"\n            },\n            getServices: {\n                method: GET,\n                url: since => `/services${ since ? \"?since=\"+ since : \"\"}`,\n            },\n            getInstanceLogs: {\n                method: GET,\n                url: (serviceID, instanceID) => `/services/${serviceID}/${instanceID}/logs`\n            },\n            dockerIsLoggedIn: {\n                method: GET,\n                url: \"/dockerIsLoggedIn\"\n            },\n            getAppTemplates: {\n                method: GET,\n                url: \"/templates\"\n            },\n            removeAppTemplate: {\n                method: DELETE,\n                url: id => `/templates/${id}`\n            },\n            updateService: {\n                method: PUT,\n                url: id => `/services/${id}`,\n                payload: (id, service) => service\n            },\n            deployAppTemplate: {\n                method: POST,\n                url: \"/templates/deploy\",\n                payload: template => template\n            },\n            removeService: {\n                method: DELETE,\n                url: id => `/services/${id}`\n            },\n            startService: {\n                method: PUT,\n                url: (id, skip) => `/services/${id}/startService${ skip ? \"?auto=false\" : \"\" }`\n            },\n            stopService: {\n                method: PUT,\n                url: (id, skip) => `/services/${id}/stopService${ skip ? \"?auto=false\" : \"\" }`\n            },\n            restartService: {\n                method: PUT,\n                url: (id, skip) => `/services/${id}/restartService${ skip ? \"?auto=false\" : \"\" }`\n            },\n            getVersion: {\n                method: GET,\n                url: \"/version\"\n            },\n            getDeployStatus: {\n                method: POST,\n                url: \"/templates/deploy/status\",\n                payload: def => def\n            },\n            getDeployingTemplates: {\n                method: GET,\n                url: \"/templates/deploy/active\"\n            },\n            createBackup: {\n                method: GET,\n                url: \"/backup/create\"\n            },\n            restoreBackup: {\n                method: GET,\n                url: filename => `/backup/restore?filename=${filename}`\n            },\n            getBackupFiles: {\n                method: GET,\n                url: \"/backup/list\"\n            },\n            getBackupStatus: {\n                method: GET,\n                url: \"/backup/status\"\n            },\n            getRestoreStatus: {\n                method: GET,\n                url: \"/backup/restore/status\"\n            },\n            getHostAlias: {\n                method: GET,\n                url: \"/hosts/defaultHostAlias\"\n            },\n            getUIConfig: {\n                method: GET,\n                url: \"/config\"\n            }\n        };\n\n        // adds success and error functions\n        // to regular promise ala $http\n        function httpify(deferred){\n            deferred.promise.success = function(fn){\n                deferred.promise.then(fn);\n                return deferred.promise;\n            };\n            deferred.promise.error = function(fn){\n                deferred.promise.then(null, fn);\n                return deferred.promise;\n            };\n            return deferred;\n        }\n\n        var pendingGETRequests = {};\n\n        function generateMethod(config){\n            // method should be all lowercase\n            config.method = config.method.toLowerCase();\n\n            // if url is a string, turn it into a getter fn\n            if(typeof config.url === \"string\"){\n                let url = config.url;\n                config.url = () => url;\n            }\n\n            return function(/* args */){\n                var url = config.url.apply(null, arguments),\n                    method = config.method,\n                    resourceName = url,\n                    payload,\n                    // deferred that will be returned to the user\n                    deferred = $q.defer(),\n                    requestObj;\n\n                // if resourceName has query params, strip em off\n                if(resourceName.indexOf(\"?\")){\n                    resourceName = resourceName.split(\"?\")[0];\n                }\n\n                // NOTE: all of our code expects angular's wrapped\n                // promises which provide a success and error method\n                // TODO - remove the need for this\n                httpify(deferred);\n\n                // theres already a pending request to\n                // this endpoint, so fail!\n                if(method === GET && pendingGETRequests[resourceName]){\n                    deferred.reject(`a request to ${resourceName} is pending`);\n                    return deferred.promise;\n                }\n\n                if(config.payload){\n                    payload = config.payload.apply(null, arguments);\n                }\n\n                requestObj = {\n                    method: method,\n                    url: url,\n                    data: payload\n                };\n\n                if(method === GET){\n                    requestObj.timeout = REQUEST_TIMEOUT;\n                }\n\n                $http(requestObj)\n                .success(function(data, status){\n                    deferred.resolve(data);\n                })\n                .error(function(data, status) {\n                    // TODO - include status as well?\n                    deferred.reject(data);\n                    redirectIfUnauthorized(status);\n                })\n                .finally(function() {\n                    if(method === GET){\n                        pendingGETRequests[resourceName] = null;\n                    }\n                });\n\n                // NOTE: only limits GET requests\n                if(method === GET){\n                    pendingGETRequests[resourceName] = deferred;\n                }\n\n                return deferred.promise;\n            };\n        }\n\n        var resourcesFactoryInterface = {\n            addAppTemplate: function(fileData){\n              return $http({\n                  url: \"/templates/add\",\n                  method: POST,\n                  data: fileData,\n                  // content-type undefined forces the browser to fill in the\n                  // boundary parameter of the request\n                  headers: {\"Content-Type\": undefined},\n                  // identity returns the value it receives, which prevents\n                  // transform from modifying the request in any way\n                  transformRequest: angular.identity,\n              }).error(function(data, status){\n                  redirectIfUnauthorized(status);\n              });\n            },\n\n            registerPoll: function(label, callback, interval){\n              if(pollingFunctions[label] !== undefined){\n                  clearInterval(pollingFunctions[label]);\n              }\n\n              pollingFunctions[label] = $interval(function(){\n                  callback();\n              }, interval);\n            },\n\n            unregisterAllPolls: function(){\n              for(var key in pollingFunctions){\n                  $interval.cancel(pollingFunctions[key]);\n              }\n\n              pollingFunctions = {};\n            },\n\n            // redirect to specific service details\n            routeToService: function(id) {\n                $location.path('/services/' + id);\n            },\n\n            // redirect to specific pool\n            routeToPool: function(id) {\n                $location.path('/pools/' + id);\n            },\n\n            // redirect to specific host\n            routeToHost: function(id) {\n                $location.path('/hosts/' + id);\n            }\n        };\n\n        // generate additional methods and attach\n        // to interface\n        for(var name in methodConfigs){\n            resourcesFactoryInterface[name] = generateMethod(methodConfigs[name]);\n        }\n\n        return resourcesFactoryInterface;\n    }]);\n})();\n","/* servicedConfigService.js\n * get UI config values from serviced\n */\n(function(){\n    \"use strict\";\n\n    var resourcesFactory, $q;\n\n    class ServicedConfig {\n        constructor(){\n\n        }\n\n        update(){\n            let d = $q.defer();\n\n            resourcesFactory.getUIConfig()\n                // TODO - errors\n                .then(response => {\n                    d.resolve(response);\n                },\n                err => {\n                    d.reject(err);\n                });\n\n            this._d = d.promise;\n            return this._d;\n        }\n\n        getConfig(){\n            if(!this._d){\n                this.update();\n            }\n            return this._d;\n        }\n    }\n\n    var servicedConfig = new ServicedConfig();\n\n    angular.module(\"servicedConfig\", [])\n    .factory(\"servicedConfig\", [\"$q\", \"resourcesFactory\",\n    function(_$q, _resourcesFactory){\n        resourcesFactory = _resourcesFactory;\n        $q = _$q;\n        servicedConfig.update();\n        return servicedConfig;\n    }]);\n\n})();\n","/* global: $ */\n/* jshint multistr: true */\n(function() {\n    'use strict';\n\n    angular.module('ui.datetimepicker', []).directive('datetimepicker', [\n    function () {\n        return {\n            restrict: 'A',\n            require: 'ngModel',\n            link: function (scope, element, attrs, ngModelCtrl) {\n                // wait a tick before init because calling directive\n                // may not have completed its init yet\n                setTimeout(function(){\n                    var options = {};\n                    if (attrs.dateoptions && scope[attrs.dateoptions]) {\n                        options = scope[attrs.dateoptions];\n                    }\n                    element.datetimepicker(options);\n                    element.bind('blur keyup change', function(){\n                        var model = attrs.ngModel;\n                        if (model.indexOf(\".\") > -1){\n                            scope[model.replace(/\\.[^.]*/, \"\")][model.replace(/[^.]*\\./, \"\")] = element.val();\n                        } else {\n                            scope[model] = element.val();\n                        }\n                    });\n                }, 0);\n            }\n        };\n    }]);\n\n\n})();\n","/* global: $ */\n/* jshint multistr: true */\nvar SEVERITY = {\n    SUCCESS: 0,\n    INFO: 1,\n    WARNING: 2,\n    ERROR: 3\n};\n\n// stores whatever the last message is\nvar lastMessage;\n\n(function() {\n    'use strict';\n\n    /**\n     * @ngdoc overview\n     * @name notification\n     */\n\n    angular.module('zenNotify', []).\n\n    /**\n     * @ngdoc object\n     * @name zenNotify.Notification\n     * @requires $templateCache\n     */\n\n     factory('$notification', ['$rootScope', '$templateCache', '$translate', function ($rootScope, $templateCache, $translate) {\n        var notificationFactory;\n\n        var notificationTemplate = '<div class=\"bg-info notification\" style=\"display:none;\">\\\n            <span class=\"dialogIcon glyphicon glyphicon-info-sign\"></span>\\\n            <span class=\"title\"></span>\\\n            <span class=\"message\"></span>\\\n            <button type=\"button\" class=\"close\" aria-hidden=\"true\" style=\"display:none;\">&times;</button>\\\n        </div>';\n\n        /**\n         * Notification\n         * Creates a notification. Great for parties!\n         */\n        function Notification(id, title, msg, $attachPoint){\n            this.id = id;\n            this.$el = $(notificationTemplate);\n            this.$message = this.$el.find(\".message\");\n            this.$title = this.$el.find(\".title\");\n            this.title = title;\n            this.msg = msg;\n            this.$attachPoint = $attachPoint;\n            this.severity = SEVERITY.INFO;\n\n            this.updateTitle(this.title || \"\");\n            this.updateStatus(this.msg || \"\");\n\n            // bind onClose context so it doesn't have\n            // to be rebound for each event listener\n            this.onClose = this.onClose.bind(this);\n            this.hide = this.hide.bind(this);\n        }\n\n        Notification.prototype = {\n            constructor: Notification,\n\n            success: function(autoclose){\n                this.severity = SEVERITY.SUCCESS;\n\n                // change notification color, icon, text, etc\n                this.$el.removeClass(\"bg-info\").addClass(\"bg-success\");\n                this.$el.find(\".dialogIcon\").removeClass(\"glyphicon-info-sign\").addClass(\"glyphicon-ok-sign\");\n\n                this.updateTitle(this.title || $translate.instant(\"success\"));\n                this.updateStatus(this.msg || \"\");\n\n                // show close button and make it active\n                this.$el.find(\".close\").show().off().on(\"click\", this.onClose);\n                notificationFactory.store(this);\n                this.show(autoclose);\n                \n                return this;\n            },\n\n            warning: function(autoclose){\n                this.severity = SEVERITY.WARNING;\n\n                // change notification color, icon, text, etc\n                this.$el.removeClass(\"bg-info\").addClass(\"bg-warning\");\n                this.$el.find(\".dialogIcon\").removeClass(\"glyphicon-info-sign\").addClass(\"glyphicon-warning-sign\");\n\n                this.updateTitle(this.title || $translate.instant(\"warning\"));\n                this.updateStatus(this.msg || \"\");\n                notificationFactory.store(this);\n\t\tif(!autoclose){\n                    // show close button and make it active\n                    this.$el.find(\".close\").show().off().on(\"click\", this.onClose);\n                    notificationFactory.store(this);\n\t\t}\n                this.show(autoclose);\n\n                return this;\n            },\n\n            info: function(autoclose){\n                this.severity = SEVERITY.INFO;\n\n                this.updateTitle(this.title || $translate.instant(\"info\"));\n                this.updateStatus(this.msg || \"\");\n\n                // show close button and make it active\n                this.$el.find(\".close\").show().off().on(\"click\", this.onClose);\n                notificationFactory.store(this);\n                this.show(autoclose);\n\n                return this;\n            },\n\n            error: function(){\n                this.severity = SEVERITY.ERROR;\n\n                // change notification color, icon, text, etc\n                this.$el.removeClass(\"bg-info\").addClass(\"bg-danger\");\n                this.$el.find(\".dialogIcon\").removeClass(\"glyphicon-info-sign\").addClass(\"glyphicon-remove-sign\");\n\n                this.updateTitle(this.title || $translate.instant(\"error\"));\n                this.updateStatus(this.msg || \"\");\n\n                // show close button and make it active\n                this.$el.find(\".close\").show().off().on(\"click\", this.onClose);\n                notificationFactory.store(this);\n                this.show(false);\n\n                return this;\n            },\n\n            onClose: function(e){\n                notificationFactory.markRead(this);\n                this.hide();\n            },\n\n            hide: function(){\n                this.$el.slideUp(\"fast\", function(){\n                    this.$el.remove();\n                }.bind(this));\n            },\n\n            // updates the status message (the smaller text)\n            updateStatus: function(msg){\n                this.msg = msg || \"\";\n                this.$message.html(this.msg);\n                return this;\n            },\n\n            // updates the notification title (larger text)\n            updateTitle: function(title){\n                this.title = title || \"\";\n                this.$title.text(this.title);\n                return this;\n            },\n\n            show: function(autoclose){\n                // close previous message if it is not\n                // the current message\n                if(lastMessage && lastMessage !== this){\n                    lastMessage.hide();\n                }\n\n                // if $attachPoint is no longer in the document\n                // use the default attachPoint\n                if(!$.contains(document, this.$attachPoint[0])){\n                    this.$attachPoint = $(\"#notifications\"); \n                }\n                this.$attachPoint.append(this.$el);\n\n                autoclose = typeof autoclose !== 'undefined' ? autoclose : true;\n                this.$el.slideDown(\"fast\");\n\n                if(autoclose){\n                    setTimeout(this.hide, 5000);\n                }\n\n                lastMessage = this;\n\n                return this;\n            }\n        };\n\n\n        function NotificationFactory(){\n            this.$storage = JSON.parse(localStorage.getItem('messages')) || [];\n            this.lastId = null;\n\n            // if this is the first time we sending a message, try to lookup the next ID from storage\n            if(this.lastId === null){\n                this.lastId = 0;\n                this.$storage.forEach(function(el, idx){\n                    if(el.id >= this.lastId){\n                        this.lastId = el.id;\n                    }\n                }.bind(this));\n            }\n        }\n\n        /**\n         * Notification Factory\n         * interface for creating, storing, and updating notifications\n         */\n        NotificationFactory.prototype = {\n            constructor: NotificationFactory,\n\n            /**\n             * create a new notification. Loads of fun!\n             * @param  {string} title  notification title. treated as plain text\n             * @param  {string} msg  notification message. treated as HTML\n             * @param  {jQueryObject} $attachPoint  jQuery DOM element to attach notification to\n             *                                      defaults to `#notification` element\n             * @return {Notification}  returns the Notification object\n             */\n            create: function(title, msg, $attachPoint){\n                // if no valid attachPoint is provided, default to #notifications\n                if(!$attachPoint || !$attachPoint.length){\n                    $attachPoint = $(\"#notifications\");\n                }\n                var notification = new Notification(++this.lastId, title, msg, $attachPoint);\n\n                return notification;\n            },\n\n            /**\n             * marks provided notification read and updates local data store\n             * @param  {Notification} notification  the Notification object to mark read\n             */\n            markRead: function(notification){\n                this.$storage.forEach(function(el, idx){\n                    if(el.id === notification.id){\n                        el.read = el.count;\n                    }\n                }.bind(this));\n\n                localStorage.setItem('messages', JSON.stringify(this.$storage));\n                $rootScope.$broadcast(\"messageUpdate\");\n            },\n\n            /**\n             * stores provided notification\n             * @param  {Notification} notification  the Notification object to store\n             */\n            store: function(notification){\n                var storable = {id: notification.id, read: 0, date: new Date(), title: notification.title, msg: notification.msg, count: 1};\n                var newMessage = false;\n\n                var isDuplicate = function(){\n                    // de-dup messages\n                    for(var i=0; i<this.$storage.length; ++i){\n                        var message = this.$storage[i];\n                        console.log(notification.msg + \" === \" + message.msg);\n                        if(message && notification.msg === message.msg){\n                            ++message.count;\n                            return true;\n                        }else{\n                            return false;\n                        }\n                    }\n                }.bind(this);\n\n                if(!isDuplicate() && (notification.severity === SEVERITY.ERROR || notification.severity === SEVERITY.SUCCESS)){\n                    if(this.$storage.unshift(storable) > 100){\n                        this.$storage.pop();\n                    }\n                    newMessage = true;\n                }\n\n                localStorage.setItem('messages', JSON.stringify(this.$storage));\n                $rootScope.$broadcast(\"messageUpdate\");\n                return newMessage;\n            },\n\n            /**\n             * updates stored notification (by id) with the provided notification\n             * @param  {Notification} notification  the Notification object to update\n             */\n            update: function(notification){\n                var storable = {id: notification.id, read: 0, date: new Date(), title: notification.title, msg: notification.msg};\n\n                this.$storage.forEach(function(el, idx){\n                    if(el.id === notification.id){\n                        el = storable;\n                    }\n                }.bind(this));\n\n                localStorage.setItem('messages', JSON.stringify(this.$storage));\n                $rootScope.$broadcast(\"messageUpdate\");\n            },\n\n            /**\n             * gets all stored messages as well as number of unread messages\n             * @return {object}  object containing `unreadCount` - the number of unread messages,\n             *                          and `messages` - an array of stored notifications.\n             */\n            getMessages: function(){\n                var unreadCount;\n\n                unreadCount = this.$storage.reduce(function(prev, cur, idx, storage){\n                    cur.count = cur.count || 0;\n                    return prev+(cur.count-cur.read);\n                }, 0);\n\n                return {\n                    unreadCount: unreadCount,\n                    messages: this.$storage\n                };\n            },\n\n            /**\n             * removes all stored Notifications (read and unread)\n             */\n            clearAll: function(){\n                this.$storage = [];\n                localStorage.clear();\n                $rootScope.$broadcast(\"messageUpdate\");\n            }\n        };\n\n        notificationFactory = new NotificationFactory();\n        return notificationFactory;\n    }]);\n})();\n"],"sourceRoot":"src"}